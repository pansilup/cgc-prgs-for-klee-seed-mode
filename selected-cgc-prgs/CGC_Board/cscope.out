cscope 15 $HOME/Documents/cb-multios-test-one/challenges/CGC_Board               0000213136
	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/calloc.c

26 
	~"libcgc.h
"

27 
	~"cgc_°dlib.h
"

28 
	~"cgc_°rög.h
"

30 *
	$cgc_ˇŒoc
(
cgc_size_t
 
nmemb
, cgc_size_à
size
)

32 i‡(
nmemb
 =0 || 
size
 == 0)

33  
NULL
;

35 
cgc_size_t
 
tŸ
 = 
nmemb
 * 
size
;

38 i‡(
tŸ
 / 
size
 !
nmemb
)

39  
NULL
;

41 *
±r
 = 
	`cgc_mÆloc
(
tŸ
);

42 i‡(
±r
 =
NULL
)

43  
NULL
;

45  
	`cgc_mem£t
(
±r
, 0, 
tŸ
);

46 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_ctype.h

1 #i‚de‡
CTYPE_H_


2 
	#CTYPE_H_


	)

4 
cgc_isdigô
(
c
);

5 
cgc_ißscii
(
c
);

6 
cgc_i•röt
(
c
);

7 
cgc_iß um
(
c
);

8 
cgc_ißÕha
(
c
);

9 
cgc_i¶owî
(
c
);

10 
cgc_isuµî
(
c
);

11 
cgc_is•a˚
(
c
);

12 
cgc_i•un˘
(
c
);

13 
cgc_tﬁowî
(
c
);

14 
cgc_touµî
(
c
);

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_malloc.h

26 #i‚de‡
MALLOC_COMMON_H


27 
	#MALLOC_COMMON_H


	)

29 
	~"cgc_°döt.h
"

31 
	#NUM_FREE_LISTS
 32

	)

32 
	#HEADER_PADDING
 24

	)

33 
	#NEW_CHUNK_SIZE
 262144

	)

34 
	#ALIGNMENT
 8

	)

36 
blk_t
 *
cgc_‰ì_li°s
[
NUM_FREE_LISTS
];

37 
cgc_size_t
 
size_˛ass_limôs
[
NUM_FREE_LISTS
];

39 
	sblk_t
 {

40 
cgc_size_t
 
	msize
;

41 
	m‰ì
;

42 
blk_t
 *
	mfsucc
;

43 
blk_t
 *
	mÂªd
;

44 
blk_t
 *
	m√xt
;

45 
blk_t
 *
	m¥ev
;

48 
cgc_cﬂÀs˚
(
blk_t
 *);

49 
cgc_gë_size_˛ass
(
cgc_size_t
 
size
);

50 
cgc_ö£π_öto_Êi°
(
blk_t
 *
blk
);

51 
cgc_ªmove_‰om_Êi°
(
blk_t
 *
blk
);

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stdarg.h

1 #i‚de‡
STDARG_H_


2 
	#STDARG_H_


	)

4 #ifde‡
WIN


5 
	~<°d¨g.h
>

7 
__buûtö_va_li°
 
	t__gnuc_va_li°
;

8 
	#va_°¨t
(
v
,
l
Ë
	`__buûtö_va_°¨t
(v,l)

	)

9 
	#va_íd
(
v
Ë
	`__buûtö_va_íd
(v)

	)

10 
	#va_¨g
(
v
,
l
Ë
	`__buûtö_va_¨g
(v,l)

	)

12 
__gnuc_va_li°
 
	tva_li°
;

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stddef.h

1 #i‚de‡
STDDEF_H_


2 
	#STDDEF_H_


	)

4 
	#PAGE_SIZE
 4096

	)

6 
	t±rdiff_t
;

8 #i‚de‡
_LIBCGC_H


9 
	tcgc_size_t
;

10 
	tcgc_ssize_t
;

12 
	#NULL
 0

	)

15 
	#off£tof
(
TYPE
, 
MEMBER
Ë
	`__buûtö_off£tof
 (TYPE, MEMBER)

	)

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stdint.h

1 #i‚de‡
STDINT_H_


2 
	#STDINT_H_


	)

4 sig√d 
	töt8_t
;

5 
	töt16_t
;

6 
	töt32_t
;

7 
	töt64_t
;

9 
	tuöt8_t
;

10 
	tuöt16_t
;

11 
	tuöt32_t
;

12 
	tuöt64_t
;

16 
	töçå_t
;

17 
	tuöçå_t
;

19 
	#__INT64_C
(
c
Ë¯## 
LL


	)

20 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

24 
	#INT8_MIN
 (-128)

	)

25 
	#INT16_MIN
 (-32767-1)

	)

26 
	#INT32_MIN
 (-2147483647-1)

	)

27 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

28 
	#INT_MIN
 
INT32_MIN


	)

31 
	#INT8_MAX
 (127)

	)

32 
	#INT16_MAX
 (32767)

	)

33 
	#INT32_MAX
 (2147483647)

	)

34 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

35 
	#INT_MAX
 
INT32_MAX


	)

38 
	#UINT8_MAX
 (255)

	)

39 
	#UINT16_MAX
 (65535)

	)

40 
	#UINT32_MAX
 (4294967295U)

	)

41 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

42 
	#UINT_MAX
 
UINT32_MAX


	)

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stdlib.h

1 #i‚de‡
STDLIB_H_


2 
	#STDLIB_H_


	)

4 
	~"libcgc.h
"

5 
	~"cgc_°d¨g.h
"

6 
	~"cgc_°ddef.h
"

8 
	#isöf
(
x
Ë
	`__buûtö_isöf
(x)

	)

9 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
(x)

	)

11 
cgc_fd¥ötf
(
fd
, c⁄° *
fmt
, ...);

12 
cgc_•rötf
(*
s
, c⁄° *
fmt
, ...);

13 
	#cgc_¥ötf
(...Ë
	`fd¥ötf
(
STDOUT
, 
__VA_ARGS__
)

	)

15 
cgc_°πﬁ
(c⁄° *
°r
, **
íd±r
, 
ba£
);

16 
°πoul
(c⁄° *
°r
, **
íd±r
, 
ba£
);

18 *
cgc_mÆloc
(
cgc_size_t
 
size
);

19 *
cgc_ˇŒoc
(
cgc_size_t
 
nmemb
, cgc_size_à
size
);

20 *
cgc_ªÆloc
(*
±r
, 
cgc_size_t
 
size
);

21 
cgc_‰ì
(*
±r
);

22 
cgc_size_t
 
mÆloc_size
(*
±r
);

24 
	$cgc_exô
(
ªt
)

26 
	`cgc__ãrmö©e
(
ªt
);

27 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_string.h

1 #i‚de‡
STRING_H_


2 
	#STRING_H_


	)

4 
	~"cgc_°ddef.h
"

6 *
cgc_mem˝y
(*
de°
, c⁄° *
§c
, 
cgc_size_t
 
n
);

7 *
cgc_memmove
(*
de°
, c⁄° *
§c
, 
cgc_size_t
 
n
);

8 *
cgc_mem£t
(*
de°
, 
c
, 
cgc_size_t
 
n
);

9 
memcmp
(*
s1
, c⁄° *
s2
, 
cgc_size_t
 
n
);

10 *
memchr
(c⁄° *
s
, 
c
, 
cgc_size_t
 
n
);

12 
cgc_size_t
 
cgc_°æí
(c⁄° *
s
);

13 *
cgc_°r˝y
(*
de°
, c⁄° *
§c
);

14 *
cgc_°∫˝y
(*
de°
, c⁄° *
§c
, 
cgc_size_t
 
n
);

15 *
cgc_°rchr
(c⁄° *
s
, 
c
);

16 *
cgc_°r£p
(**
°rögp
, c⁄° *
dñim
);

17 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

18 
cgc_°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
cgc_size_t
 
n
);

19 
°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
);

20 
°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
cgc_size_t
 
n
);

21 *
cgc_°rˇt
(*
de°
, c⁄° *
§c
);

22 *
cgc_°rdup
(c⁄° *
§c
);

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/ctype.c

26 
	~"cgc_˘y≥.h
"

28 
	#NUM_ASCII_CHAR
 128

	)

29 
	#ASCII_MASK
 0x7F

	)

32 
	#SPACE
 0x20

	)

35 
	#DEL
 0x7F

	)

37 c⁄° 
	g_pun˘
[
NUM_ASCII_CHAR
] = {

48 c⁄° 
	g_xdigô
[
NUM_ASCII_CHAR
] = {

59 
	$cgc_iß um
(
c
)

61  
	`cgc_ißÕha
(
c
Ë|| 
	`cgc_isdigô
(c);

62 
	}
}

64 
	$cgc_ißÕha
(
c
)

66  
	`cgc_i¶owî
(
c
Ë|| 
	`cgc_isuµî
(c);

67 
	}
}

69 
	$cgc_ißscii
(
c
)

71  !(
c
 & ~
ASCII_MASK
);

72 
	}
}

74 
	$cgc_isbœnk
(
c
)

76  (
c
 == ' ' || c == '\t');

77 
	}
}

79 
	$cgc_is˙ål
(
c
)

81  
c
 =
DEL
 || c < 
SPACE
;

82 
	}
}

84 
	$cgc_isdigô
(
c
)

86  (Ë
c
 - '0' < 10;

87 
	}
}

89 
	$cgc_isgøph
(
c
)

91  
c
 !' ' && 
	`cgc_i•röt
(c);

92 
	}
}

94 
	$cgc_i¶owî
(
c
)

96  (Ë
c
 - 'a' < 26;

97 
	}
}

99 
	$cgc_i•röt
(
c
)

101  
c
 >
SPACE
 && c !
DEL
;

102 
	}
}

104 
	$cgc_i•un˘
(
c
)

106  
_pun˘
[
c
];

107 
	}
}

109 
	$cgc_is•a˚
(
c
)

111  (
c
 > 8 && c < 14) || c == ' ';

112 
	}
}

114 
	$cgc_isuµî
(
c
)

116  (Ë
c
 - 'A' < 26;

117 
	}
}

119 
	$cgc_isxdigô
(
c
)

121  
_xdigô
[
c
];

122 
	}
}

124 
	$cgc_tﬂscii
(
c
)

126  
c
 & 
ASCII_MASK
;

127 
	}
}

129 
	$cgc_tﬁowî
(
c
)

131 i‡(
	`cgc_isuµî
(
c
))

132  
c
 | 
SPACE
;

134  
c
;

135 
	}
}

137 
	$cgc_touµî
(
c
)

139 i‡(
	`cgc_i¶owî
(
c
))

140  
c
 & (~
SPACE
 & 
ASCII_MASK
);

142  
c
;

143 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/free.c

26 
	~"libcgc.h
"

27 
	~"cgc_mÆloc.h
"

28 
	~"cgc_°dlib.h
"

30 
	$‰ì_huge
(
blk_t
 *
blk
)

32 
	`cgc_dóŒoˇã
(
blk
, blk->
size
);

33 
	}
}

35 
	$cgc_‰ì
(*
±r
)

37 i‡(
±r
 =
NULL
)

40 
blk_t
 *
blk
 = (blk_à*)((
öçå_t
)
±r
 - 
HEADER_PADDING
);

42 i‡(
blk
->
‰ì
 != 0)

45 i‡(
blk
->
size
 >
NEW_CHUNK_SIZE
) {

46 
	`‰ì_huge
(
blk
);

48 
	`cgc_ö£π_öto_Êi°
(
blk
);

49 
	`cgc_cﬂÀs˚
(
blk
);

51 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/malloc.c

26 
	~"libcgc.h
"

27 
	~"cgc_mÆloc.h
"

28 
	~"cgc_°dlib.h
"

31 
	$Æloˇã_√w_blk
()

33 *
ªt
;

34 
blk_t
 *
√w_blk
;

35 
cgc_size_t
 
size
 = 
NEW_CHUNK_SIZE
;

37 i‡(
	`cgc_Æloˇã
(
size
, 0, &
ªt
) != 0) {

41 i‡(
ªt
 =
NULL
)

44 
√w_blk
 = (
blk_t
 *)
ªt
;

45 
√w_blk
->
size
 = size;

46 
√w_blk
->
‰ì
 = 1;

47 
√w_blk
->
Âªd
 = 
NULL
;

48 
√w_blk
->
fsucc
 = 
NULL
;

49 
√w_blk
->
¥ev
 = 
NULL
;

50 
√w_blk
->
√xt
 = 
NULL
;

52 
	`cgc_ö£π_öto_Êi°
(
√w_blk
);

54 
	}
}

57 
	$föd_fô
(
cgc_size_t
 
size
, 
blk_t
 **
blk
)

59 
sc_i
 = 
	`cgc_gë_size_˛ass
(
size
);

61 ; 
sc_i
 < 
NUM_FREE_LISTS
; sc_i++) {

62 *
blk
 = 
cgc_‰ì_li°s
[
sc_i
];

63 ; *
blk
 !
NULL
; *blk = (*blk)->
fsucc
)

64 i‡((*
blk
)->
size
 >= size)

65  
sc_i
;

68 *
blk
 = 
NULL
;

70 
	}
}

72 *
	$mÆloc_huge
(
cgc_size_t
 
size
)

74 *
mem
;

75 
size
 +
HEADER_PADDING
;

76 i‡(
	`cgc_Æloˇã
(
size
, 0, &
mem
) != 0)

77  
NULL
;

78 
blk_t
 *
blk
 = 
mem
;

79 
blk
->
size
 = size;

80 
blk
->
‰ì
 = 0;

81 
blk
->
Âªd
 = 
NULL
;

82 
blk
->
fsucc
 = 
NULL
;

83 
blk
->
¥ev
 = 
NULL
;

84 
blk
->
√xt
 = 
NULL
;

85  (*)((
öçå_t
)
blk
 + 
HEADER_PADDING
);

86 
	}
}

88 *
	$cgc_mÆloc
(
cgc_size_t
 
size
)

90 i‡(
size
 == 0)

91  
NULL
;

93 i‡(
size
 + 
HEADER_PADDING
 >
NEW_CHUNK_SIZE
)

94  
	`mÆloc_huge
(
size
);

96 i‡(
size
 % 
ALIGNMENT
 != 0)

97 
size
 = (sizê+ 
ALIGNMENT
 - 1) & ~(ALIGNMENT - 1);

99 i‡(
size
 >= 0x80000000)

100  
NULL
;

101 
size
 +
HEADER_PADDING
;

103 
blk_t
 *
blk
 = 
NULL
;

104 
sc_i
 = 
	`föd_fô
(
size
, &
blk
);

107 i‡(
blk
 =
NULL
) {

108 i‡(
	`Æloˇã_√w_blk
() != 0) {

109  
NULL
;

111 
sc_i
 = 
NUM_FREE_LISTS
 - 1;

112 
blk
 = 
cgc_‰ì_li°s
[
sc_i
];

117 
	`cgc_ªmove_‰om_Êi°
(
blk
);

120 
cgc_size_t
 
sdiff
 = 
blk
->
size
 - size;

121 i‡(
sdiff
 > 2 * 
HEADER_PADDING
) {

122 
blk_t
 *
nb
 = (blk_à*)((
öçå_t
)
blk
 + 
size
);

124 
nb
->
size
 = 
sdiff
;

125 
nb
->
‰ì
 = 1;

126 
nb
->
fsucc
 = 
NULL
;

127 
nb
->
Âªd
 = 
NULL
;

129 
blk
->
size
 = size;

132 
nb
->
¥ev
 = 
blk
;

133 
nb
->
√xt
 = 
blk
->next;

134 i‡(
blk
->
√xt
)

135 
blk
->
√xt
->
¥ev
 = 
nb
;

136 
blk
->
√xt
 = 
nb
;

139 
	`cgc_ö£π_öto_Êi°
(
nb
);

142  (*)((
öçå_t
)
blk
 + 
HEADER_PADDING
);

143 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/malloc_common.c

26 
	~"libcgc.h
"

27 
	~"cgc_mÆloc.h
"

28 
	~"cgc_°dlib.h
"

30 
cgc_size_t
 
	gsize_˛ass_limôs
[
NUM_FREE_LISTS
] = {

38 65536, 98304, 131072, 
INT32_MAX


41 
blk_t
 *
	gcgc_‰ì_li°s
[
NUM_FREE_LISTS
] = {0};

43 
	$ªmove_‰om_bli°
(
blk_t
 *
blk
)

45 i‡(
blk
->
¥ev
)

46 
blk
->
¥ev
->
√xt
 = blk->next;

48 i‡(
blk
->
√xt
)

49 
blk
->
√xt
->
¥ev
 = blk->prev;

50 
	}
}

52 
	$cgc_gë_size_˛ass
(
cgc_size_t
 
size
)

54 
i
;

55 
i
 = 0; i < 
NUM_FREE_LISTS
 && 
size
 > 
size_˛ass_limôs
[i]; i++);

56  
i
;

57 
	}
}

60 
	$cgc_ö£π_öto_Êi°
(
blk_t
 *
blk
)

62 
sc_i
 = 
	`cgc_gë_size_˛ass
(
blk
->
size
);

63 
blk
->
‰ì
 = 1;

65 i‡(
cgc_‰ì_li°s
[
sc_i
] =
NULL
) {

66 
cgc_‰ì_li°s
[
sc_i
] = 
blk
;

70 
blk
->
fsucc
 = 
cgc_‰ì_li°s
[
sc_i
];

71 
cgc_‰ì_li°s
[
sc_i
]->
Âªd
 = 
blk
;

72 
cgc_‰ì_li°s
[
sc_i
] = 
blk
;

73 
blk
->
Âªd
 = 
NULL
;

74 
	}
}

76 
	$cgc_ªmove_‰om_Êi°
(
blk_t
 *
blk
)

78 
sc_i
 = 
	`cgc_gë_size_˛ass
(
blk
->
size
);

80 i‡(
blk
->
Âªd
)

81 
blk
->
Âªd
->
fsucc
 = blk->fsucc;

83 i‡(
blk
->
fsucc
)

84 
blk
->
fsucc
->
Âªd
 = blk->fpred;

86 i‡(
cgc_‰ì_li°s
[
sc_i
] =
blk
)

87 
cgc_‰ì_li°s
[
sc_i
] = 
blk
->
fsucc
;

89 
blk
->
fsucc
 = 
NULL
;

90 
blk
->
Âªd
 = 
NULL
;

91 
blk
->
‰ì
 = 0;

92 
	}
}

94 
	$cgc_cﬂÀs˚
(
blk_t
 *
blk
)

97 i‡(
blk
->
¥ev
 && blk->¥ev->
‰ì
 && blk->
√xt
 && blk->next->free) {

98 
	`cgc_ªmove_‰om_Êi°
(
blk
->
¥ev
);

99 
	`cgc_ªmove_‰om_Êi°
(
blk
->
√xt
);

100 
	`cgc_ªmove_‰om_Êi°
(
blk
);

102 
blk
->
¥ev
->
size
 += blk->size;

103 
blk
->
¥ev
->
size
 +blk->
√xt
->size;

104 
	`cgc_ö£π_öto_Êi°
(
blk
->
¥ev
);

106 
	`ªmove_‰om_bli°
(
blk
->
√xt
);

107 
	`ªmove_‰om_bli°
(
blk
);

109 } i‡(
blk
->
¥ev
 && blk->¥ev->
‰ì
 && blk->
√xt
 && !blk->next->free) {

110 
	`cgc_ªmove_‰om_Êi°
(
blk
->
¥ev
);

111 
	`cgc_ªmove_‰om_Êi°
(
blk
);

113 
blk
->
¥ev
->
size
 += blk->size;

114 
	`cgc_ö£π_öto_Êi°
(
blk
->
¥ev
);

116 
	`ªmove_‰om_bli°
(
blk
);

118 } i‡(
blk
->
¥ev
 && !blk->¥ev->
‰ì
 && blk->
√xt
 && blk->next->free) {

119 
	`cgc_ªmove_‰om_Êi°
(
blk
->
√xt
);

120 
	`cgc_ªmove_‰om_Êi°
(
blk
);

122 
blk
->
size
 +blk->
√xt
->size;

123 
	`cgc_ö£π_öto_Êi°
(
blk
);

125 
	`ªmove_‰om_bli°
(
blk
->
√xt
);

127 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memchr.c

26 
	~"libcgc.h
"

27 
	~"cgc_°döt.h
"

29 *
	$cgc_memchr
(c⁄° *
s
, 
c
, 
cgc_size_t
 
n
)

31 
cgc_size_t
 
i
 = 0;

32 
i
 < 
n
) {

33 i‡(*((
uöt8_t
 *)
s
 + 
i
Ë=
c
)

34  (*)((
öçå_t
)
s
 + 
i
);

36 
i
++;

38  
NULL
;

39 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memcmp.c

25 
	~"libcgc.h
"

27 
	$cgc_memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
cgc_size_t
 
n
)

29 
cgc_size_t
 
i
;

30 
i
 = 0; i < 
n
; i++)

31 i‡(*
s1
 !*
s2
)

32  *
s1
 - *
s2
;

34 
s1
++, 
s2
++;

36 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memcpy.c

26 
	~"cgc_°rög.h
"

28 *
	$cgc_mem˝y
(*
de°
, c⁄° *
§c
, 
cgc_size_t
 
n
)

30 *
d
 = (*)
de°
, *
s
 = (*)
§c
;

31 
cgc_size_t
 
i
 = 0;

32 
i
 < 
n
) {

33 
d
[
i
] = 
s
[i];

34 
i
++;

37  
de°
;

38 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memmove.c

25 
	~"cgc_°rög.h
"

27 *
	$cgc_memmove
(*
de°
, c⁄° *
§c
, 
cgc_size_t
 
n
)

29 
cgc_size_t
 
i
;

30 c⁄° *
u§c
 = 
§c
;

31 *
ude°
 = 
de°
;

33 i‡(
ude°
 < 
u§c
)

35 
i
 = 0; i < 
n
; i++)

36 
ude°
[
i
] = 
u§c
[i];

38 i‡(
ude°
 > 
u§c
)

40 
i
 = 
n
; i > 0; i--)

41 
ude°
[
i
-1] = 
u§c
[i-1];

44  
de°
;

45 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memset.c

26 
	~"libcgc.h
"

28 *
	$cgc_mem£t
(*
s
, 
c
, 
cgc_size_t
 
n
)

30 i‡(
s
 =
NULL
)

31  
NULL
;

33 i‡(
n
 == 0)

34  
s
;

36 *
p
 = 
s
;

37 
cgc_size_t
 
i
;

38 
i
 = 0; i < 
n
; i++)

39 *
p
++ = (Ë
c
;

41  
s
;

42 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/printf.c

25 
	~"cgc_°dlib.h
"

26 
	~"cgc_°d¨g.h
"

27 
	~"cgc_°rög.h
"

29 
	#OUTPUT_BYTE
(
x
) do { \

30 
cgc_size_t
 
byãs
; \

31 
_c
 = 
x
; \

32 
	`cgc_å™smô
(
fd
, &
_c
, (_c), &
byãs
); \

33 } 0);

	)

35 
	#NUM_TO_LOWER
(
x
Ë(((xË< 10 ? (x)+'0' : (x)-10+'a'))

	)

36 
	#NUM_TO_UPPER
(
x
Ë(((xË< 10 ? (x)+'0' : (x)-10+'A'))

	)

38 
	#FLAG_PAD_ZERO
 0x1

	)

39 
	#FLAG_UPPERCASE
 0x2

	)

40 
	$cgc_ouçut_numbî_¥ötf
(
fd
, 
x
, 
ba£
, 
mö
, 
Êags
)

42 
n
 = 0;

43 i‡(
x
 >
ba£
)

45 
n
 = 
	`cgc_ouçut_numbî_¥ötf
(
fd
, 
x
 / 
ba£
, ba£, 
mö
-1, 
Êags
);

46 
x
 %
ba£
;

48 i‡(
n
 =0 && 
mö
 > 0)

50 --
mö
)

51 i‡(
Êags
 & 
FLAG_PAD_ZERO
)

52 
	`OUTPUT_BYTE
('0')

54 
	`OUTPUT_BYTE
(' ')

57 i‡(
Êags
 & 
FLAG_UPPERCASE
)

58 
	`OUTPUT_BYTE
(
	`NUM_TO_UPPER
(
x
))

60 
	`OUTPUT_BYTE
(
	`NUM_TO_LOWER
(
x
))

61  
n
 + 1;

62 
	}
}

64 
	$cgc_fd¥ötf
(
fd
, c⁄° *
fmt
, ...)

66 *
a°rög
;

67 
ach¨
;

68 
aöt
, 
i
, 
n
 = 0, 
Êags
 = 0, 
mö
 = 0;

69 
auöt
;

70 
va_li°
 
≠
;

71 
	`va_°¨t
(
≠
, 
fmt
);

73 *
fmt
 != '\0')

75 
c
 = *
fmt
++;

76 i‡(
c
 == '%')

80 
c
 = *
fmt
++;

81 
c
)

84 
Êags
 |
FLAG_PAD_ZERO
;

95 
mö
 = 
	`cgc_°πﬁ
(
fmt
-1, (**)&fmt, 10);

100 
c
)

103 
	`OUTPUT_BYTE
('%')

106 
a°rög
 = 
	`va_¨g
(
≠
, *);

107 
i
 = 0; i < 
	`cgc_°æí
(
a°rög
); i++)

108 
	`OUTPUT_BYTE
(
a°rög
[
i
]);

111 
aöt
 = 
	`va_¨g
(
≠
, );

112 i‡(
aöt
 < 0)

114 
	`OUTPUT_BYTE
('-')

115 
aöt
 = -aint;

117 
	`cgc_ouçut_numbî_¥ötf
(
fd
, 
aöt
, 10, 
mö
, 
Êags
);

120 
auöt
 = 
	`va_¨g
(
≠
, );

121 
	`cgc_ouçut_numbî_¥ötf
(
fd
, 
auöt
, 10, 
mö
, 
Êags
);

124 
Êags
 |
FLAG_UPPERCASE
;

126 
auöt
 = 
	`va_¨g
(
≠
, );

127 
	`cgc_ouçut_numbî_¥ötf
(
fd
, 
auöt
, 16, 
mö
, 
Êags
);

130 
ach¨
 = (sig√d Ë
	`va_¨g
(
≠
, );

131 
	`OUTPUT_BYTE
(
ach¨
);

134 
	`OUTPUT_BYTE
(
c
)

137 
mö
 = 0;

138 
Êags
 = 0;

142 
	`OUTPUT_BYTE
(
c
)

146 
	`va_íd
(
≠
);

147  
n
;

148 
	}
}

150 #unde‡
OUTPUT_BYTE


152 
	#OUTPUT_BYTE
(
n
, 
s
, 
x
) do { \

153 
cgc_size_t
 
byãs
; \

154 
_c
 = 
x
; \

155 *(*(
s
)Ë
_c
; \

156 (*(
s
))++; \

157 (*(
n
))++; \

158 } 0);

	)

160 
	$cgc_ouçut_numbî_•rötf
(*
n
, **
s
, 
x
, 
ba£
, 
mö
, 
Êags
)

162 
m
 = 0;

163 i‡(
x
 >
ba£
)

165 
m
 = 
	`cgc_ouçut_numbî_•rötf
(
n
, 
s
, 
x
 / 
ba£
, ba£, 
mö
-1, 
Êags
);

166 
x
 %
ba£
;

168 i‡(
m
 =0 && 
mö
 > 0)

170 --
mö
)

171 i‡(
Êags
 & 
FLAG_PAD_ZERO
)

172 
	`OUTPUT_BYTE
(
n
, 
s
, '0')

174 
	`OUTPUT_BYTE
(
n
, 
s
, ' ')

177 i‡(
Êags
 & 
FLAG_UPPERCASE
)

178 
	`OUTPUT_BYTE
(
n
, 
s
, 
	`NUM_TO_UPPER
(
x
))

180 
	`OUTPUT_BYTE
(
n
, 
s
, 
	`NUM_TO_LOWER
(
x
))

181  
m
 + 1;

182 
	}
}

184 
	$cgc_•rötf
(*
°r
, c⁄° *
fmt
, ...)

186 *
a°rög
;

187 
aöt
, 
i
, 
n
 = 0, 
Êags
 = 0, 
mö
 = 0;

188 
auöt
;

189 
va_li°
 
≠
;

190 
	`va_°¨t
(
≠
, 
fmt
);

192 *
fmt
 != '\0')

194 
c
 = *
fmt
++;

195 i‡(
c
 == '%')

199 
c
 = *
fmt
++;

200 
c
)

203 
Êags
 |
FLAG_PAD_ZERO
;

214 
mö
 = 
	`cgc_°πﬁ
(
fmt
-1, (**)&fmt, 10);

219 
c
)

222 
	`OUTPUT_BYTE
(&
n
, &
°r
, '%')

225 
a°rög
 = 
	`va_¨g
(
≠
, *);

226 
i
 = 0; i < 
	`cgc_°æí
(
a°rög
); i++)

227 
	`OUTPUT_BYTE
(&
n
, &
°r
, 
a°rög
[
i
]);

230 
aöt
 = 
	`va_¨g
(
≠
, );

231 i‡(
aöt
 < 0)

233 
	`OUTPUT_BYTE
(&
n
, &
°r
, '-')

234 
aöt
 = -aint;

236 
	`cgc_ouçut_numbî_•rötf
(&
n
, &
°r
, 
aöt
, 10, 
mö
, 
Êags
);

239 
Êags
 |
FLAG_UPPERCASE
;

241 
auöt
 = 
	`va_¨g
(
≠
, );

242 
	`cgc_ouçut_numbî_•rötf
(&
n
, &
°r
, 
auöt
, 16, 
mö
, 
Êags
);

245 
	`OUTPUT_BYTE
(&
n
, &
°r
, 
c
)

248 
mö
 = 0;

249 
Êags
 = 0;

253 
	`OUTPUT_BYTE
(&
n
, &
°r
, 
c
)

256 *
°r
++ = 0;

258 
	`va_íd
(
≠
);

259  
n
;

260 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/realloc.c

26 
	~"libcgc.h
"

27 
	~"cgc_mÆloc.h
"

28 
	~"cgc_°dlib.h
"

29 
	~"cgc_°döt.h
"

30 
	~"cgc_°rög.h
"

32 *
	$cgc_ªÆloc
(*
±r
, 
cgc_size_t
 
size
)

34 i‡(
±r
 =
NULL
)

35  
	`cgc_mÆloc
(
size
);

37 i‡(
size
 == 0) {

38 
	`cgc_‰ì
(
±r
);

39  
NULL
;

42 *
√w
 = 
	`cgc_mÆloc
(
size
);

43 i‡(
√w
 =
NULL
)

44  
NULL
;

46 
blk_t
 *
blk
 = (blk_à*)((
öçå_t
)
±r
 - 
HEADER_PADDING
);

48 i‡(
size
 < 
blk
->sizê- 
HEADER_PADDING
)

49 
	`cgc_mem˝y
(
√w
, 
±r
, 
size
);

51 
	`cgc_mem˝y
(
√w
, 
±r
, 
blk
->
size
 - 
HEADER_PADDING
);

53 
	`cgc_‰ì
(
±r
);

54  
√w
;

55 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcasecmp.c

26 
	~"cgc_˘y≥.h
"

28 
	$cgc_°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
)

30 *
_s1
 = (*)
s1
;

31 *
_s2
 = (*)
s2
;

32 *
_s1
 && *
_s2
)

33 i‡(!(*
_s1
 =*
_s2
 || 
	`cgc_tﬁowî
(*_s1) == cgc_tolower(*_s2)))

36 
_s1
++, 
_s2
++;

38  
	`cgc_tﬁowî
(*
_s1
Ë- cgc_tﬁowî(*
_s2
);

39 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcat.c

26 
	~"cgc_°rög.h
"

28 *
	$cgc_°rˇt
(*
de°
, c⁄° *
§c
)

30 
	`cgc_°r˝y
(
de°
 + 
	`cgc_°æí
(de°), 
§c
);

31  
de°
;

32 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strchr.c

26 
	~"libcgc.h
"

28 *
	$cgc_°rchr
(c⁄° *
s
, 
c
)

30 c⁄° *
p
 = 
s
;

32 *
p
)

34 i‡(*
p
 =
c
)

35  (*Ë
p
;

36 
p
++;

39 i‡(
c
 =()
NULL
)

40  (*)
p
;

42  
NULL
;

43 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcmp.c

26 
	~"libcgc.h
"

28 
	$cgc_°rcmp
(c⁄° *
s1
, c⁄° *
s2
)

30 *
s1
 && *
s2
)

31 i‡(*
s1
 !*
s2
)

34 
s1
++, 
s2
++;

36  *
s1
 - *
s2
;

37 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcpy.c

26 
	~"cgc_°rög.h
"

28 *
	$cgc_°r˝y
(*
de°
, c⁄° *
§c
)

30 
cgc_size_t
 
i
 = 0;

31 *
§c
)

32 
de°
[
i
++] = *
§c
++;

34 
de°
[
i
] = '\0';

35  
de°
;

36 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strdup.c

1 
	~"cgc_°dlib.h
"

2 
	~"cgc_°rög.h
"

4 
	~<°dlib.h
>

6 *
	$cgc_°rdup
(c⁄° *
°r
)

8 
cgc_size_t
 
n
 = 
	`cgc_°æí
(
°r
) + 1;

10 *
dup
 = 
	`mÆloc
(
n
);

11 i‡(
dup
 =
NULL
)

12  
NULL
;

13 
	`cgc_mem˝y
(
dup
, 
°r
, 
n
);

14  
dup
;

15 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strlen.c

26 
	~"libcgc.h
"

27 
	~"cgc_°rög.h
"

29 
cgc_size_t
 
	$cgc_°æí
(c⁄° *
s
)

31 c⁄° *
p
 = 
s
;

32 *
p
)

33 
p
++;

35  
p
 - 
s
;

36 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strncasecmp.c

26 
	~"libcgc.h
"

27 
	~"cgc_˘y≥.h
"

28 
	~"cgc_°dlib.h
"

30 
	$cgc_°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
cgc_size_t
 
n
)

32 *
_s1
 = (*)
s1
;

33 *
_s2
 = (*)
s2
;

35 i‡(
n
-- == 0)

38 
n
 && *
_s1
 && *
_s2
)

39 i‡(!(*
_s1
 =*
_s2
 || 
	`cgc_tﬁowî
(*_s1) == cgc_tolower(*_s2)))

42 
_s1
++, 
_s2
++;

44  
	`cgc_tﬁowî
(*
_s1
Ë- cgc_tﬁowî(*
_s2
);

45 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strncmp.c

26 
	~"libcgc.h
"

27 
	~"cgc_°dlib.h
"

29 
	$cgc_°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
cgc_size_t
 
n
)

31 i‡(
n
-- == 0)

34 
n
-- && *
s1
 && *
s2
)

35 i‡(*
s1
 !*
s2
)

38 
s1
++, 
s2
++;

40  *
s1
 - *
s2
;

41 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strncpy.c

1 
	~"cgc_°rög.h
"

3 *
	$cgc_°∫˝y
(*
de°
, c⁄° *
§c
, 
cgc_size_t
 
n
)

5 
cgc_size_t
 
i
;

6 
i
 = 0; i < 
n
; i++)

8 
de°
[
i
] = 
§c
[i];

9 i‡(
de°
[
i
] == '\0')

13 ; 
i
 < 
n
; i++)

14 
de°
[
i
] = 0;

16  
de°
;

17 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strsep.c

26 
	~"libcgc.h
"

27 
	~"cgc_°rög.h
"

29 *
	$cgc_°r£p
(**
°rögp
, c⁄° *
dñim
)

31 i‡(*
°rögp
 =
NULL
)

32  
NULL
;

34 *
i
;

35 
i
 = *
°rögp
; *ò&& !
	`cgc_°rchr
(
dñim
, *i); i++);

37 
dñim
 = *
°rögp
;

39 i‡(*
i
) {

40 *
i
 = '\0';

41 *
°rögp
 = 
i
 + 1;

43 *
°rögp
 = 
NULL
;

46  (*Ë
dñim
;

47 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strtol.c

25 
	#IS_SPACE
(
c
Ë((¯=' 'Ë|| (¯='\t'Ë|| (¯='\f'Ë|| (¯='\n'Ë|| (¯='\v'))

	)

26 
	#IS_NUM
(
c
Ë((¯>'0'Ë&& (¯<'9'))

	)

27 
	#IS_ALPHA
(
c
Ë(((¯>'A'Ë&& (¯<'Z')Ë|| ((¯>'a'Ë&& (¯<'z')))

	)

28 
	#IS_UPPER
(
c
Ë((¯>'A'Ë&& (¯<'Z'))

	)

30 
	$cgc_°πﬁ
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

32 
limô
;

33 
√g
 = 0, 
vÆ
 = 0, 
c⁄sumed
 = 0, 
n
, 
a
;

34 c⁄° *
p
 = 
≈å
;

37 i‡(
ba£
 == 1 || base > 36 || base < 0)

38 
d⁄e
;

43 i‡(
	`IS_SPACE
(*
p
))

44 ++
p
;

50 i‡(*
p
 == '-')

52 
√g
 = 1;

53 ++
p
;

55 i‡(*
p
 == '+')

56 ++
p
;

59 
ba£
)

62 i‡(*
p
 == '0')

64 i‡(
p
[1] == 'x' ||Ö[1] == 'X')

66 
p
 += 2;

67 
ba£
 = 16;

71 ++
p
;

72 
ba£
 = 8;

76 
ba£
 = 10;

79 i‡(*
p
 == '0' && (p[1] == 'x' ||Ö[1] == 'X'))

81 
p
 += 2;

82 
ba£
 = 16;

88 (
n
 = 
	`IS_NUM
(*
p
)Ë|| (
a
 = 
	`IS_ALPHA
(*p)))

90 i‡(
n
)

91 
n
 = *
p
 - '0';

92 i‡(
a
)

94 i‡(
	`IS_UPPER
(*
p
))

95 
n
 = *
p
 - 'A';

97 
n
 = *
p
 - 'a';

100 
n
 += 10;

104 i‡(
n
 >
ba£
)

107 
vÆ
 *
ba£
;

108 
vÆ
 +
n
;

109 ++
c⁄sumed
;

110 ++
p
;

113 i‡(
√g
)

114 
vÆ
 = -val;

116 
d⁄e
:

117 i‡(
íd±r
)

118 *
íd±r
 = (*)(
c⁄sumed
 > 0 ? 
p
 : 
≈å
);

120  
vÆ
;

122 
	}
}

124 
	$cgc_°πoul
(c⁄° *
≈å
, **
íd±r
, 
ba£
)

126  ()
	`cgc_°πﬁ
(
≈å
, 
íd±r
, 
ba£
);

127 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/pov_1/pov.c

1 
	~"libpov.h
"

2 
	$maö
(
cgc_¨gc
, *
cgc_¨gv
[]) {

3 
	`cgc_√gŸüã_ty≥1
(0x0, 0x0, 0);

6 
wrôe_00000_00000
[] =

8 
wrôe_00000_00000_Àn
 = 4;

9 *
wrôe_00000
 = 
NULL
;

10 
wrôe_00000_Àn
 = 0;

11 
wrôe_00000
 = 
	`cgc_≠≥nd_buf
(wrôe_00000, &
wrôe_00000_Àn
, 
wrôe_00000_00000
, 
wrôe_00000_00000_Àn
);

12 i‡(
wrôe_00000_Àn
 > 0) {

13 
	`cgc_å™smô_Æl
(1, 
wrôe_00000
, 
wrôe_00000_Àn
);

15 
	`cgc_‰ì
(
wrôe_00000
);

19 
wrôe_00001_00000
[] =

21 
wrôe_00001_00000_Àn
 = 5;

22 *
wrôe_00001
 = 
NULL
;

23 
wrôe_00001_Àn
 = 0;

24 
wrôe_00001
 = 
	`cgc_≠≥nd_buf
(wrôe_00001, &
wrôe_00001_Àn
, 
wrôe_00001_00000
, 
wrôe_00001_00000_Àn
);

25 i‡(
wrôe_00001_Àn
 > 0) {

26 
	`cgc_å™smô_Æl
(1, 
wrôe_00001
, 
wrôe_00001_Àn
);

28 
	`cgc_‰ì
(
wrôe_00001
);

32 
wrôe_00002_00000
[] =

34 
wrôe_00002_00000_Àn
 = 2;

35 *
wrôe_00002
 = 
NULL
;

36 
wrôe_00002_Àn
 = 0;

37 
wrôe_00002
 = 
	`cgc_≠≥nd_buf
(wrôe_00002, &
wrôe_00002_Àn
, 
wrôe_00002_00000
, 
wrôe_00002_00000_Àn
);

38 i‡(
wrôe_00002_Àn
 > 0) {

39 
	`cgc_å™smô_Æl
(1, 
wrôe_00002
, 
wrôe_00002_Àn
);

41 
	`cgc_‰ì
(
wrôe_00002
);

44 *
ªad_00000
;

45 
ªad_00000_Àn
;

46 
ªad_00000_±r
 = 0;

48 
ªad_00000_dñim
[] =

50 
ªad_00000
 = 
NULL
;

51 
ªad_00000_Àn
 = 0;

52 
ªad_00000_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00000
, &
ªad_00000_Àn
, 
ªad_00000_dñim
, 1);

53 i‡(
ªad_00000_ªs
) {}

54 
	`cgc_‰ì
(
ªad_00000
);

55 i‡(
ªad_00000_±r
) {}

59 
wrôe_00003_00000
[] =

61 
wrôe_00003_00000_Àn
 = 2;

62 *
wrôe_00003
 = 
NULL
;

63 
wrôe_00003_Àn
 = 0;

64 
wrôe_00003
 = 
	`cgc_≠≥nd_buf
(wrôe_00003, &
wrôe_00003_Àn
, 
wrôe_00003_00000
, 
wrôe_00003_00000_Àn
);

65 i‡(
wrôe_00003_Àn
 > 0) {

66 
	`cgc_å™smô_Æl
(1, 
wrôe_00003
, 
wrôe_00003_Àn
);

68 
	`cgc_‰ì
(
wrôe_00003
);

71 *
ªad_00001
;

72 
ªad_00001_Àn
;

73 
ªad_00001_±r
 = 0;

75 
ªad_00001_dñim
[] =

77 
ªad_00001
 = 
NULL
;

78 
ªad_00001_Àn
 = 0;

79 
ªad_00001_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00001
, &
ªad_00001_Àn
, 
ªad_00001_dñim
, 1);

80 i‡(
ªad_00001_ªs
) {}

81 
	`cgc_‰ì
(
ªad_00001
);

82 i‡(
ªad_00001_±r
) {}

86 
wrôe_00004_00000
[] =

88 
wrôe_00004_00000_Àn
 = 2;

89 *
wrôe_00004
 = 
NULL
;

90 
wrôe_00004_Àn
 = 0;

91 
wrôe_00004
 = 
	`cgc_≠≥nd_buf
(wrôe_00004, &
wrôe_00004_Àn
, 
wrôe_00004_00000
, 
wrôe_00004_00000_Àn
);

92 i‡(
wrôe_00004_Àn
 > 0) {

93 
	`cgc_å™smô_Æl
(1, 
wrôe_00004
, 
wrôe_00004_Àn
);

95 
	`cgc_‰ì
(
wrôe_00004
);

98 *
ªad_00002
;

99 
ªad_00002_Àn
;

100 
ªad_00002_±r
 = 0;

102 
ªad_00002_dñim
[] =

104 
ªad_00002
 = 
NULL
;

105 
ªad_00002_Àn
 = 0;

106 
ªad_00002_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00002
, &
ªad_00002_Àn
, 
ªad_00002_dñim
, 1);

107 i‡(
ªad_00002_ªs
) {}

108 
	`cgc_‰ì
(
ªad_00002
);

109 i‡(
ªad_00002_±r
) {}

113 
wrôe_00005_00000
[] =

115 
wrôe_00005_00000_Àn
 = 2;

116 *
wrôe_00005
 = 
NULL
;

117 
wrôe_00005_Àn
 = 0;

118 
wrôe_00005
 = 
	`cgc_≠≥nd_buf
(wrôe_00005, &
wrôe_00005_Àn
, 
wrôe_00005_00000
, 
wrôe_00005_00000_Àn
);

119 i‡(
wrôe_00005_Àn
 > 0) {

120 
	`cgc_å™smô_Æl
(1, 
wrôe_00005
, 
wrôe_00005_Àn
);

122 
	`cgc_‰ì
(
wrôe_00005
);

125 *
ªad_00003
;

126 
ªad_00003_Àn
;

127 
ªad_00003_±r
 = 0;

129 
ªad_00003_dñim
[] =

131 
ªad_00003
 = 
NULL
;

132 
ªad_00003_Àn
 = 0;

133 
ªad_00003_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00003
, &
ªad_00003_Àn
, 
ªad_00003_dñim
, 1);

134 i‡(
ªad_00003_ªs
) {}

135 
	`cgc_‰ì
(
ªad_00003
);

136 i‡(
ªad_00003_±r
) {}

140 
wrôe_00006_00000
[] =

142 
wrôe_00006_00000_Àn
 = 2;

143 *
wrôe_00006
 = 
NULL
;

144 
wrôe_00006_Àn
 = 0;

145 
wrôe_00006
 = 
	`cgc_≠≥nd_buf
(wrôe_00006, &
wrôe_00006_Àn
, 
wrôe_00006_00000
, 
wrôe_00006_00000_Àn
);

146 i‡(
wrôe_00006_Àn
 > 0) {

147 
	`cgc_å™smô_Æl
(1, 
wrôe_00006
, 
wrôe_00006_Àn
);

149 
	`cgc_‰ì
(
wrôe_00006
);

152 *
ªad_00004
;

153 
ªad_00004_Àn
;

154 
ªad_00004_±r
 = 0;

156 
ªad_00004_dñim
[] =

158 
ªad_00004
 = 
NULL
;

159 
ªad_00004_Àn
 = 0;

160 
ªad_00004_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00004
, &
ªad_00004_Àn
, 
ªad_00004_dñim
, 1);

161 i‡(
ªad_00004_ªs
) {}

162 
	`cgc_‰ì
(
ªad_00004
);

163 i‡(
ªad_00004_±r
) {}

167 
wrôe_00007_00000
[] =

169 
wrôe_00007_00000_Àn
 = 2;

170 *
wrôe_00007
 = 
NULL
;

171 
wrôe_00007_Àn
 = 0;

172 
wrôe_00007
 = 
	`cgc_≠≥nd_buf
(wrôe_00007, &
wrôe_00007_Àn
, 
wrôe_00007_00000
, 
wrôe_00007_00000_Àn
);

173 i‡(
wrôe_00007_Àn
 > 0) {

174 
	`cgc_å™smô_Æl
(1, 
wrôe_00007
, 
wrôe_00007_Àn
);

176 
	`cgc_‰ì
(
wrôe_00007
);

179 *
ªad_00005
;

180 
ªad_00005_Àn
;

181 
ªad_00005_±r
 = 0;

183 
ªad_00005_dñim
[] =

185 
ªad_00005
 = 
NULL
;

186 
ªad_00005_Àn
 = 0;

187 
ªad_00005_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00005
, &
ªad_00005_Àn
, 
ªad_00005_dñim
, 1);

188 i‡(
ªad_00005_ªs
) {}

189 
	`cgc_‰ì
(
ªad_00005
);

190 i‡(
ªad_00005_±r
) {}

194 
wrôe_00008_00000
[] =

196 
wrôe_00008_00000_Àn
 = 2;

197 *
wrôe_00008
 = 
NULL
;

198 
wrôe_00008_Àn
 = 0;

199 
wrôe_00008
 = 
	`cgc_≠≥nd_buf
(wrôe_00008, &
wrôe_00008_Àn
, 
wrôe_00008_00000
, 
wrôe_00008_00000_Àn
);

200 i‡(
wrôe_00008_Àn
 > 0) {

201 
	`cgc_å™smô_Æl
(1, 
wrôe_00008
, 
wrôe_00008_Àn
);

203 
	`cgc_‰ì
(
wrôe_00008
);

206 *
ªad_00006
;

207 
ªad_00006_Àn
;

208 
ªad_00006_±r
 = 0;

210 
ªad_00006_dñim
[] =

212 
ªad_00006
 = 
NULL
;

213 
ªad_00006_Àn
 = 0;

214 
ªad_00006_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00006
, &
ªad_00006_Àn
, 
ªad_00006_dñim
, 1);

215 i‡(
ªad_00006_ªs
) {}

216 
	`cgc_‰ì
(
ªad_00006
);

217 i‡(
ªad_00006_±r
) {}

221 
wrôe_00009_00000
[] =

223 
wrôe_00009_00000_Àn
 = 2;

224 *
wrôe_00009
 = 
NULL
;

225 
wrôe_00009_Àn
 = 0;

226 
wrôe_00009
 = 
	`cgc_≠≥nd_buf
(wrôe_00009, &
wrôe_00009_Àn
, 
wrôe_00009_00000
, 
wrôe_00009_00000_Àn
);

227 i‡(
wrôe_00009_Àn
 > 0) {

228 
	`cgc_å™smô_Æl
(1, 
wrôe_00009
, 
wrôe_00009_Àn
);

230 
	`cgc_‰ì
(
wrôe_00009
);

233 *
ªad_00007
;

234 
ªad_00007_Àn
;

235 
ªad_00007_±r
 = 0;

237 
ªad_00007_dñim
[] =

239 
ªad_00007
 = 
NULL
;

240 
ªad_00007_Àn
 = 0;

241 
ªad_00007_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00007
, &
ªad_00007_Àn
, 
ªad_00007_dñim
, 1);

242 i‡(
ªad_00007_ªs
) {}

243 
	`cgc_‰ì
(
ªad_00007
);

244 i‡(
ªad_00007_±r
) {}

248 
wrôe_00010_00000
[] =

250 
wrôe_00010_00000_Àn
 = 2;

251 *
wrôe_00010
 = 
NULL
;

252 
wrôe_00010_Àn
 = 0;

253 
wrôe_00010
 = 
	`cgc_≠≥nd_buf
(wrôe_00010, &
wrôe_00010_Àn
, 
wrôe_00010_00000
, 
wrôe_00010_00000_Àn
);

254 i‡(
wrôe_00010_Àn
 > 0) {

255 
	`cgc_å™smô_Æl
(1, 
wrôe_00010
, 
wrôe_00010_Àn
);

257 
	`cgc_‰ì
(
wrôe_00010
);

260 *
ªad_00008
;

261 
ªad_00008_Àn
;

262 
ªad_00008_±r
 = 0;

264 
ªad_00008_dñim
[] =

266 
ªad_00008
 = 
NULL
;

267 
ªad_00008_Àn
 = 0;

268 
ªad_00008_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00008
, &
ªad_00008_Àn
, 
ªad_00008_dñim
, 1);

269 i‡(
ªad_00008_ªs
) {}

270 
	`cgc_‰ì
(
ªad_00008
);

271 i‡(
ªad_00008_±r
) {}

275 
wrôe_00011_00000
[] =

277 
wrôe_00011_00000_Àn
 = 2;

278 *
wrôe_00011
 = 
NULL
;

279 
wrôe_00011_Àn
 = 0;

280 
wrôe_00011
 = 
	`cgc_≠≥nd_buf
(wrôe_00011, &
wrôe_00011_Àn
, 
wrôe_00011_00000
, 
wrôe_00011_00000_Àn
);

281 i‡(
wrôe_00011_Àn
 > 0) {

282 
	`cgc_å™smô_Æl
(1, 
wrôe_00011
, 
wrôe_00011_Àn
);

284 
	`cgc_‰ì
(
wrôe_00011
);

287 *
ªad_00009
;

288 
ªad_00009_Àn
;

289 
ªad_00009_±r
 = 0;

291 
ªad_00009_dñim
[] =

293 
ªad_00009
 = 
NULL
;

294 
ªad_00009_Àn
 = 0;

295 
ªad_00009_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00009
, &
ªad_00009_Àn
, 
ªad_00009_dñim
, 1);

296 i‡(
ªad_00009_ªs
) {}

297 
	`cgc_‰ì
(
ªad_00009
);

298 i‡(
ªad_00009_±r
) {}

302 
wrôe_00012_00000
[] =

304 
wrôe_00012_00000_Àn
 = 2;

305 *
wrôe_00012
 = 
NULL
;

306 
wrôe_00012_Àn
 = 0;

307 
wrôe_00012
 = 
	`cgc_≠≥nd_buf
(wrôe_00012, &
wrôe_00012_Àn
, 
wrôe_00012_00000
, 
wrôe_00012_00000_Àn
);

308 i‡(
wrôe_00012_Àn
 > 0) {

309 
	`cgc_å™smô_Æl
(1, 
wrôe_00012
, 
wrôe_00012_Àn
);

311 
	`cgc_‰ì
(
wrôe_00012
);

314 *
ªad_00010
;

315 
ªad_00010_Àn
;

316 
ªad_00010_±r
 = 0;

318 
ªad_00010_dñim
[] =

320 
ªad_00010
 = 
NULL
;

321 
ªad_00010_Àn
 = 0;

322 
ªad_00010_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00010
, &
ªad_00010_Àn
, 
ªad_00010_dñim
, 1);

323 i‡(
ªad_00010_ªs
) {}

324 
	`cgc_‰ì
(
ªad_00010
);

325 i‡(
ªad_00010_±r
) {}

329 
wrôe_00013_00000
[] =

331 
wrôe_00013_00000_Àn
 = 2;

332 *
wrôe_00013
 = 
NULL
;

333 
wrôe_00013_Àn
 = 0;

334 
wrôe_00013
 = 
	`cgc_≠≥nd_buf
(wrôe_00013, &
wrôe_00013_Àn
, 
wrôe_00013_00000
, 
wrôe_00013_00000_Àn
);

335 i‡(
wrôe_00013_Àn
 > 0) {

336 
	`cgc_å™smô_Æl
(1, 
wrôe_00013
, 
wrôe_00013_Àn
);

338 
	`cgc_‰ì
(
wrôe_00013
);

341 *
ªad_00011
;

342 
ªad_00011_Àn
;

343 
ªad_00011_±r
 = 0;

345 
ªad_00011_dñim
[] =

347 
ªad_00011
 = 
NULL
;

348 
ªad_00011_Àn
 = 0;

349 
ªad_00011_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00011
, &
ªad_00011_Àn
, 
ªad_00011_dñim
, 1);

350 i‡(
ªad_00011_ªs
) {}

351 
	`cgc_‰ì
(
ªad_00011
);

352 i‡(
ªad_00011_±r
) {}

356 
wrôe_00014_00000
[] =

358 
wrôe_00014_00000_Àn
 = 2;

359 *
wrôe_00014
 = 
NULL
;

360 
wrôe_00014_Àn
 = 0;

361 
wrôe_00014
 = 
	`cgc_≠≥nd_buf
(wrôe_00014, &
wrôe_00014_Àn
, 
wrôe_00014_00000
, 
wrôe_00014_00000_Àn
);

362 i‡(
wrôe_00014_Àn
 > 0) {

363 
	`cgc_å™smô_Æl
(1, 
wrôe_00014
, 
wrôe_00014_Àn
);

365 
	`cgc_‰ì
(
wrôe_00014
);

368 *
ªad_00012
;

369 
ªad_00012_Àn
;

370 
ªad_00012_±r
 = 0;

372 
ªad_00012_dñim
[] =

374 
ªad_00012
 = 
NULL
;

375 
ªad_00012_Àn
 = 0;

376 
ªad_00012_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00012
, &
ªad_00012_Àn
, 
ªad_00012_dñim
, 1);

377 i‡(
ªad_00012_ªs
) {}

378 
	`cgc_‰ì
(
ªad_00012
);

379 i‡(
ªad_00012_±r
) {}

383 
wrôe_00015_00000
[] =

385 
wrôe_00015_00000_Àn
 = 2;

386 *
wrôe_00015
 = 
NULL
;

387 
wrôe_00015_Àn
 = 0;

388 
wrôe_00015
 = 
	`cgc_≠≥nd_buf
(wrôe_00015, &
wrôe_00015_Àn
, 
wrôe_00015_00000
, 
wrôe_00015_00000_Àn
);

389 i‡(
wrôe_00015_Àn
 > 0) {

390 
	`cgc_å™smô_Æl
(1, 
wrôe_00015
, 
wrôe_00015_Àn
);

392 
	`cgc_‰ì
(
wrôe_00015
);

395 *
ªad_00013
;

396 
ªad_00013_Àn
;

397 
ªad_00013_±r
 = 0;

399 
ªad_00013_dñim
[] =

401 
ªad_00013
 = 
NULL
;

402 
ªad_00013_Àn
 = 0;

403 
ªad_00013_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00013
, &
ªad_00013_Àn
, 
ªad_00013_dñim
, 1);

404 i‡(
ªad_00013_ªs
) {}

405 
	`cgc_‰ì
(
ªad_00013
);

406 i‡(
ªad_00013_±r
) {}

410 
wrôe_00016_00000
[] =

412 
wrôe_00016_00000_Àn
 = 2;

413 *
wrôe_00016
 = 
NULL
;

414 
wrôe_00016_Àn
 = 0;

415 
wrôe_00016
 = 
	`cgc_≠≥nd_buf
(wrôe_00016, &
wrôe_00016_Àn
, 
wrôe_00016_00000
, 
wrôe_00016_00000_Àn
);

416 i‡(
wrôe_00016_Àn
 > 0) {

417 
	`cgc_å™smô_Æl
(1, 
wrôe_00016
, 
wrôe_00016_Àn
);

419 
	`cgc_‰ì
(
wrôe_00016
);

422 *
ªad_00014
;

423 
ªad_00014_Àn
;

424 
ªad_00014_±r
 = 0;

426 
ªad_00014_dñim
[] =

428 
ªad_00014
 = 
NULL
;

429 
ªad_00014_Àn
 = 0;

430 
ªad_00014_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00014
, &
ªad_00014_Àn
, 
ªad_00014_dñim
, 1);

431 i‡(
ªad_00014_ªs
) {}

432 
	`cgc_‰ì
(
ªad_00014
);

433 i‡(
ªad_00014_±r
) {}

437 
wrôe_00017_00000
[] =

439 
wrôe_00017_00000_Àn
 = 2;

440 *
wrôe_00017
 = 
NULL
;

441 
wrôe_00017_Àn
 = 0;

442 
wrôe_00017
 = 
	`cgc_≠≥nd_buf
(wrôe_00017, &
wrôe_00017_Àn
, 
wrôe_00017_00000
, 
wrôe_00017_00000_Àn
);

443 i‡(
wrôe_00017_Àn
 > 0) {

444 
	`cgc_å™smô_Æl
(1, 
wrôe_00017
, 
wrôe_00017_Àn
);

446 
	`cgc_‰ì
(
wrôe_00017
);

449 *
ªad_00015
;

450 
ªad_00015_Àn
;

451 
ªad_00015_±r
 = 0;

453 
ªad_00015_dñim
[] =

455 
ªad_00015
 = 
NULL
;

456 
ªad_00015_Àn
 = 0;

457 
ªad_00015_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00015
, &
ªad_00015_Àn
, 
ªad_00015_dñim
, 1);

458 i‡(
ªad_00015_ªs
) {}

459 
	`cgc_‰ì
(
ªad_00015
);

460 i‡(
ªad_00015_±r
) {}

464 
wrôe_00018_00000
[] =

466 
wrôe_00018_00000_Àn
 = 2;

467 *
wrôe_00018
 = 
NULL
;

468 
wrôe_00018_Àn
 = 0;

469 
wrôe_00018
 = 
	`cgc_≠≥nd_buf
(wrôe_00018, &
wrôe_00018_Àn
, 
wrôe_00018_00000
, 
wrôe_00018_00000_Àn
);

470 i‡(
wrôe_00018_Àn
 > 0) {

471 
	`cgc_å™smô_Æl
(1, 
wrôe_00018
, 
wrôe_00018_Àn
);

473 
	`cgc_‰ì
(
wrôe_00018
);

476 *
ªad_00016
;

477 
ªad_00016_Àn
;

478 
ªad_00016_±r
 = 0;

480 
ªad_00016_dñim
[] =

482 
ªad_00016
 = 
NULL
;

483 
ªad_00016_Àn
 = 0;

484 
ªad_00016_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00016
, &
ªad_00016_Àn
, 
ªad_00016_dñim
, 1);

485 i‡(
ªad_00016_ªs
) {}

486 
	`cgc_‰ì
(
ªad_00016
);

487 i‡(
ªad_00016_±r
) {}

491 
wrôe_00019_00000
[] =

493 
wrôe_00019_00000_Àn
 = 2;

494 *
wrôe_00019
 = 
NULL
;

495 
wrôe_00019_Àn
 = 0;

496 
wrôe_00019
 = 
	`cgc_≠≥nd_buf
(wrôe_00019, &
wrôe_00019_Àn
, 
wrôe_00019_00000
, 
wrôe_00019_00000_Àn
);

497 i‡(
wrôe_00019_Àn
 > 0) {

498 
	`cgc_å™smô_Æl
(1, 
wrôe_00019
, 
wrôe_00019_Àn
);

500 
	`cgc_‰ì
(
wrôe_00019
);

503 *
ªad_00017
;

504 
ªad_00017_Àn
;

505 
ªad_00017_±r
 = 0;

507 
ªad_00017_dñim
[] =

509 
ªad_00017
 = 
NULL
;

510 
ªad_00017_Àn
 = 0;

511 
ªad_00017_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00017
, &
ªad_00017_Àn
, 
ªad_00017_dñim
, 1);

512 i‡(
ªad_00017_ªs
) {}

513 
	`cgc_‰ì
(
ªad_00017
);

514 i‡(
ªad_00017_±r
) {}

518 
wrôe_00020_00000
[] =

520 
wrôe_00020_00000_Àn
 = 2;

521 *
wrôe_00020
 = 
NULL
;

522 
wrôe_00020_Àn
 = 0;

523 
wrôe_00020
 = 
	`cgc_≠≥nd_buf
(wrôe_00020, &
wrôe_00020_Àn
, 
wrôe_00020_00000
, 
wrôe_00020_00000_Àn
);

524 i‡(
wrôe_00020_Àn
 > 0) {

525 
	`cgc_å™smô_Æl
(1, 
wrôe_00020
, 
wrôe_00020_Àn
);

527 
	`cgc_‰ì
(
wrôe_00020
);

531 
wrôe_00021_00000
[] =

533 
wrôe_00021_00000_Àn
 = 2;

534 *
wrôe_00021
 = 
NULL
;

535 
wrôe_00021_Àn
 = 0;

536 
wrôe_00021
 = 
	`cgc_≠≥nd_buf
(wrôe_00021, &
wrôe_00021_Àn
, 
wrôe_00021_00000
, 
wrôe_00021_00000_Àn
);

537 i‡(
wrôe_00021_Àn
 > 0) {

538 
	`cgc_å™smô_Æl
(1, 
wrôe_00021
, 
wrôe_00021_Àn
);

540 
	`cgc_‰ì
(
wrôe_00021
);

544 
wrôe_00022_00000
[] =

546 
wrôe_00022_00000_Àn
 = 2;

547 *
wrôe_00022
 = 
NULL
;

548 
wrôe_00022_Àn
 = 0;

549 
wrôe_00022
 = 
	`cgc_≠≥nd_buf
(wrôe_00022, &
wrôe_00022_Àn
, 
wrôe_00022_00000
, 
wrôe_00022_00000_Àn
);

550 i‡(
wrôe_00022_Àn
 > 0) {

551 
	`cgc_å™smô_Æl
(1, 
wrôe_00022
, 
wrôe_00022_Àn
);

553 
	`cgc_‰ì
(
wrôe_00022
);

557 
wrôe_00023_00000
[] =

559 
wrôe_00023_00000_Àn
 = 2;

560 *
wrôe_00023
 = 
NULL
;

561 
wrôe_00023_Àn
 = 0;

562 
wrôe_00023
 = 
	`cgc_≠≥nd_buf
(wrôe_00023, &
wrôe_00023_Àn
, 
wrôe_00023_00000
, 
wrôe_00023_00000_Àn
);

563 i‡(
wrôe_00023_Àn
 > 0) {

564 
	`cgc_å™smô_Æl
(1, 
wrôe_00023
, 
wrôe_00023_Àn
);

566 
	`cgc_‰ì
(
wrôe_00023
);

570 
wrôe_00024_00000
[] =

572 
wrôe_00024_00000_Àn
 = 2;

573 *
wrôe_00024
 = 
NULL
;

574 
wrôe_00024_Àn
 = 0;

575 
wrôe_00024
 = 
	`cgc_≠≥nd_buf
(wrôe_00024, &
wrôe_00024_Àn
, 
wrôe_00024_00000
, 
wrôe_00024_00000_Àn
);

576 i‡(
wrôe_00024_Àn
 > 0) {

577 
	`cgc_å™smô_Æl
(1, 
wrôe_00024
, 
wrôe_00024_Àn
);

579 
	`cgc_‰ì
(
wrôe_00024
);

583 
wrôe_00025_00000
[] =

585 
wrôe_00025_00000_Àn
 = 2;

586 *
wrôe_00025
 = 
NULL
;

587 
wrôe_00025_Àn
 = 0;

588 
wrôe_00025
 = 
	`cgc_≠≥nd_buf
(wrôe_00025, &
wrôe_00025_Àn
, 
wrôe_00025_00000
, 
wrôe_00025_00000_Àn
);

589 i‡(
wrôe_00025_Àn
 > 0) {

590 
	`cgc_å™smô_Æl
(1, 
wrôe_00025
, 
wrôe_00025_Àn
);

592 
	`cgc_‰ì
(
wrôe_00025
);

596 
wrôe_00026_00000
[] =

598 
wrôe_00026_00000_Àn
 = 2;

599 *
wrôe_00026
 = 
NULL
;

600 
wrôe_00026_Àn
 = 0;

601 
wrôe_00026
 = 
	`cgc_≠≥nd_buf
(wrôe_00026, &
wrôe_00026_Àn
, 
wrôe_00026_00000
, 
wrôe_00026_00000_Àn
);

602 i‡(
wrôe_00026_Àn
 > 0) {

603 
	`cgc_å™smô_Æl
(1, 
wrôe_00026
, 
wrôe_00026_Àn
);

605 
	`cgc_‰ì
(
wrôe_00026
);

609 
wrôe_00027_00000
[] =

611 
wrôe_00027_00000_Àn
 = 2;

612 *
wrôe_00027
 = 
NULL
;

613 
wrôe_00027_Àn
 = 0;

614 
wrôe_00027
 = 
	`cgc_≠≥nd_buf
(wrôe_00027, &
wrôe_00027_Àn
, 
wrôe_00027_00000
, 
wrôe_00027_00000_Àn
);

615 i‡(
wrôe_00027_Àn
 > 0) {

616 
	`cgc_å™smô_Æl
(1, 
wrôe_00027
, 
wrôe_00027_Àn
);

618 
	`cgc_‰ì
(
wrôe_00027
);

622 
wrôe_00028_00000
[] =

624 
wrôe_00028_00000_Àn
 = 2;

625 *
wrôe_00028
 = 
NULL
;

626 
wrôe_00028_Àn
 = 0;

627 
wrôe_00028
 = 
	`cgc_≠≥nd_buf
(wrôe_00028, &
wrôe_00028_Àn
, 
wrôe_00028_00000
, 
wrôe_00028_00000_Àn
);

628 i‡(
wrôe_00028_Àn
 > 0) {

629 
	`cgc_å™smô_Æl
(1, 
wrôe_00028
, 
wrôe_00028_Àn
);

631 
	`cgc_‰ì
(
wrôe_00028
);

635 
wrôe_00029_00000
[] =

637 
wrôe_00029_00000_Àn
 = 2;

638 *
wrôe_00029
 = 
NULL
;

639 
wrôe_00029_Àn
 = 0;

640 
wrôe_00029
 = 
	`cgc_≠≥nd_buf
(wrôe_00029, &
wrôe_00029_Àn
, 
wrôe_00029_00000
, 
wrôe_00029_00000_Àn
);

641 i‡(
wrôe_00029_Àn
 > 0) {

642 
	`cgc_å™smô_Æl
(1, 
wrôe_00029
, 
wrôe_00029_Àn
);

644 
	`cgc_‰ì
(
wrôe_00029
);

648 
wrôe_00030_00000
[] =

650 
wrôe_00030_00000_Àn
 = 2;

651 *
wrôe_00030
 = 
NULL
;

652 
wrôe_00030_Àn
 = 0;

653 
wrôe_00030
 = 
	`cgc_≠≥nd_buf
(wrôe_00030, &
wrôe_00030_Àn
, 
wrôe_00030_00000
, 
wrôe_00030_00000_Àn
);

654 i‡(
wrôe_00030_Àn
 > 0) {

655 
	`cgc_å™smô_Æl
(1, 
wrôe_00030
, 
wrôe_00030_Àn
);

657 
	`cgc_‰ì
(
wrôe_00030
);

661 
wrôe_00031_00000
[] =

663 
wrôe_00031_00000_Àn
 = 2;

664 *
wrôe_00031
 = 
NULL
;

665 
wrôe_00031_Àn
 = 0;

666 
wrôe_00031
 = 
	`cgc_≠≥nd_buf
(wrôe_00031, &
wrôe_00031_Àn
, 
wrôe_00031_00000
, 
wrôe_00031_00000_Àn
);

667 i‡(
wrôe_00031_Àn
 > 0) {

668 
	`cgc_å™smô_Æl
(1, 
wrôe_00031
, 
wrôe_00031_Àn
);

670 
	`cgc_‰ì
(
wrôe_00031
);

674 
wrôe_00032_00000
[] =

676 
wrôe_00032_00000_Àn
 = 2;

677 *
wrôe_00032
 = 
NULL
;

678 
wrôe_00032_Àn
 = 0;

679 
wrôe_00032
 = 
	`cgc_≠≥nd_buf
(wrôe_00032, &
wrôe_00032_Àn
, 
wrôe_00032_00000
, 
wrôe_00032_00000_Àn
);

680 i‡(
wrôe_00032_Àn
 > 0) {

681 
	`cgc_å™smô_Æl
(1, 
wrôe_00032
, 
wrôe_00032_Àn
);

683 
	`cgc_‰ì
(
wrôe_00032
);

687 
wrôe_00033_00000
[] =

689 
wrôe_00033_00000_Àn
 = 2;

690 *
wrôe_00033
 = 
NULL
;

691 
wrôe_00033_Àn
 = 0;

692 
wrôe_00033
 = 
	`cgc_≠≥nd_buf
(wrôe_00033, &
wrôe_00033_Àn
, 
wrôe_00033_00000
, 
wrôe_00033_00000_Àn
);

693 i‡(
wrôe_00033_Àn
 > 0) {

694 
	`cgc_å™smô_Æl
(1, 
wrôe_00033
, 
wrôe_00033_Àn
);

696 
	`cgc_‰ì
(
wrôe_00033
);

700 
wrôe_00034_00000
[] =

702 
wrôe_00034_00000_Àn
 = 2;

703 *
wrôe_00034
 = 
NULL
;

704 
wrôe_00034_Àn
 = 0;

705 
wrôe_00034
 = 
	`cgc_≠≥nd_buf
(wrôe_00034, &
wrôe_00034_Àn
, 
wrôe_00034_00000
, 
wrôe_00034_00000_Àn
);

706 i‡(
wrôe_00034_Àn
 > 0) {

707 
	`cgc_å™smô_Æl
(1, 
wrôe_00034
, 
wrôe_00034_Àn
);

709 
	`cgc_‰ì
(
wrôe_00034
);

713 
wrôe_00035_00000
[] =

715 
wrôe_00035_00000_Àn
 = 2;

716 *
wrôe_00035
 = 
NULL
;

717 
wrôe_00035_Àn
 = 0;

718 
wrôe_00035
 = 
	`cgc_≠≥nd_buf
(wrôe_00035, &
wrôe_00035_Àn
, 
wrôe_00035_00000
, 
wrôe_00035_00000_Àn
);

719 i‡(
wrôe_00035_Àn
 > 0) {

720 
	`cgc_å™smô_Æl
(1, 
wrôe_00035
, 
wrôe_00035_Àn
);

722 
	`cgc_‰ì
(
wrôe_00035
);

726 
wrôe_00036_00000
[] =

728 
wrôe_00036_00000_Àn
 = 2;

729 *
wrôe_00036
 = 
NULL
;

730 
wrôe_00036_Àn
 = 0;

731 
wrôe_00036
 = 
	`cgc_≠≥nd_buf
(wrôe_00036, &
wrôe_00036_Àn
, 
wrôe_00036_00000
, 
wrôe_00036_00000_Àn
);

732 i‡(
wrôe_00036_Àn
 > 0) {

733 
	`cgc_å™smô_Æl
(1, 
wrôe_00036
, 
wrôe_00036_Àn
);

735 
	`cgc_‰ì
(
wrôe_00036
);

739 
wrôe_00037_00000
[] =

741 
wrôe_00037_00000_Àn
 = 2;

742 *
wrôe_00037
 = 
NULL
;

743 
wrôe_00037_Àn
 = 0;

744 
wrôe_00037
 = 
	`cgc_≠≥nd_buf
(wrôe_00037, &
wrôe_00037_Àn
, 
wrôe_00037_00000
, 
wrôe_00037_00000_Àn
);

745 i‡(
wrôe_00037_Àn
 > 0) {

746 
	`cgc_å™smô_Æl
(1, 
wrôe_00037
, 
wrôe_00037_Àn
);

748 
	`cgc_‰ì
(
wrôe_00037
);

752 
wrôe_00038_00000
[] =

754 
wrôe_00038_00000_Àn
 = 2;

755 *
wrôe_00038
 = 
NULL
;

756 
wrôe_00038_Àn
 = 0;

757 
wrôe_00038
 = 
	`cgc_≠≥nd_buf
(wrôe_00038, &
wrôe_00038_Àn
, 
wrôe_00038_00000
, 
wrôe_00038_00000_Àn
);

758 i‡(
wrôe_00038_Àn
 > 0) {

759 
	`cgc_å™smô_Æl
(1, 
wrôe_00038
, 
wrôe_00038_Àn
);

761 
	`cgc_‰ì
(
wrôe_00038
);

765 
wrôe_00039_00000
[] =

767 
wrôe_00039_00000_Àn
 = 2;

768 *
wrôe_00039
 = 
NULL
;

769 
wrôe_00039_Àn
 = 0;

770 
wrôe_00039
 = 
	`cgc_≠≥nd_buf
(wrôe_00039, &
wrôe_00039_Àn
, 
wrôe_00039_00000
, 
wrôe_00039_00000_Àn
);

771 i‡(
wrôe_00039_Àn
 > 0) {

772 
	`cgc_å™smô_Æl
(1, 
wrôe_00039
, 
wrôe_00039_Àn
);

774 
	`cgc_‰ì
(
wrôe_00039
);

778 
wrôe_00040_00000
[] =

780 
wrôe_00040_00000_Àn
 = 2;

781 *
wrôe_00040
 = 
NULL
;

782 
wrôe_00040_Àn
 = 0;

783 
wrôe_00040
 = 
	`cgc_≠≥nd_buf
(wrôe_00040, &
wrôe_00040_Àn
, 
wrôe_00040_00000
, 
wrôe_00040_00000_Àn
);

784 i‡(
wrôe_00040_Àn
 > 0) {

785 
	`cgc_å™smô_Æl
(1, 
wrôe_00040
, 
wrôe_00040_Àn
);

787 
	`cgc_‰ì
(
wrôe_00040
);

791 
wrôe_00041_00000
[] =

793 
wrôe_00041_00000_Àn
 = 2;

794 *
wrôe_00041
 = 
NULL
;

795 
wrôe_00041_Àn
 = 0;

796 
wrôe_00041
 = 
	`cgc_≠≥nd_buf
(wrôe_00041, &
wrôe_00041_Àn
, 
wrôe_00041_00000
, 
wrôe_00041_00000_Àn
);

797 i‡(
wrôe_00041_Àn
 > 0) {

798 
	`cgc_å™smô_Æl
(1, 
wrôe_00041
, 
wrôe_00041_Àn
);

800 
	`cgc_‰ì
(
wrôe_00041
);

804 
wrôe_00042_00000
[] =

806 
wrôe_00042_00000_Àn
 = 2;

807 *
wrôe_00042
 = 
NULL
;

808 
wrôe_00042_Àn
 = 0;

809 
wrôe_00042
 = 
	`cgc_≠≥nd_buf
(wrôe_00042, &
wrôe_00042_Àn
, 
wrôe_00042_00000
, 
wrôe_00042_00000_Àn
);

810 i‡(
wrôe_00042_Àn
 > 0) {

811 
	`cgc_å™smô_Æl
(1, 
wrôe_00042
, 
wrôe_00042_Àn
);

813 
	`cgc_‰ì
(
wrôe_00042
);

817 
wrôe_00043_00000
[] =

819 
wrôe_00043_00000_Àn
 = 2;

820 *
wrôe_00043
 = 
NULL
;

821 
wrôe_00043_Àn
 = 0;

822 
wrôe_00043
 = 
	`cgc_≠≥nd_buf
(wrôe_00043, &
wrôe_00043_Àn
, 
wrôe_00043_00000
, 
wrôe_00043_00000_Àn
);

823 i‡(
wrôe_00043_Àn
 > 0) {

824 
	`cgc_å™smô_Æl
(1, 
wrôe_00043
, 
wrôe_00043_Àn
);

826 
	`cgc_‰ì
(
wrôe_00043
);

830 
wrôe_00044_00000
[] =

832 
wrôe_00044_00000_Àn
 = 2;

833 *
wrôe_00044
 = 
NULL
;

834 
wrôe_00044_Àn
 = 0;

835 
wrôe_00044
 = 
	`cgc_≠≥nd_buf
(wrôe_00044, &
wrôe_00044_Àn
, 
wrôe_00044_00000
, 
wrôe_00044_00000_Àn
);

836 i‡(
wrôe_00044_Àn
 > 0) {

837 
	`cgc_å™smô_Æl
(1, 
wrôe_00044
, 
wrôe_00044_Àn
);

839 
	`cgc_‰ì
(
wrôe_00044
);

843 
wrôe_00045_00000
[] =

845 
wrôe_00045_00000_Àn
 = 2;

846 *
wrôe_00045
 = 
NULL
;

847 
wrôe_00045_Àn
 = 0;

848 
wrôe_00045
 = 
	`cgc_≠≥nd_buf
(wrôe_00045, &
wrôe_00045_Àn
, 
wrôe_00045_00000
, 
wrôe_00045_00000_Àn
);

849 i‡(
wrôe_00045_Àn
 > 0) {

850 
	`cgc_å™smô_Æl
(1, 
wrôe_00045
, 
wrôe_00045_Àn
);

852 
	`cgc_‰ì
(
wrôe_00045
);

856 
wrôe_00046_00000
[] =

858 
wrôe_00046_00000_Àn
 = 2;

859 *
wrôe_00046
 = 
NULL
;

860 
wrôe_00046_Àn
 = 0;

861 
wrôe_00046
 = 
	`cgc_≠≥nd_buf
(wrôe_00046, &
wrôe_00046_Àn
, 
wrôe_00046_00000
, 
wrôe_00046_00000_Àn
);

862 i‡(
wrôe_00046_Àn
 > 0) {

863 
	`cgc_å™smô_Æl
(1, 
wrôe_00046
, 
wrôe_00046_Àn
);

865 
	`cgc_‰ì
(
wrôe_00046
);

869 
wrôe_00047_00000
[] =

871 
wrôe_00047_00000_Àn
 = 2;

872 *
wrôe_00047
 = 
NULL
;

873 
wrôe_00047_Àn
 = 0;

874 
wrôe_00047
 = 
	`cgc_≠≥nd_buf
(wrôe_00047, &
wrôe_00047_Àn
, 
wrôe_00047_00000
, 
wrôe_00047_00000_Àn
);

875 i‡(
wrôe_00047_Àn
 > 0) {

876 
	`cgc_å™smô_Æl
(1, 
wrôe_00047
, 
wrôe_00047_Àn
);

878 
	`cgc_‰ì
(
wrôe_00047
);

882 
wrôe_00048_00000
[] =

884 
wrôe_00048_00000_Àn
 = 2;

885 *
wrôe_00048
 = 
NULL
;

886 
wrôe_00048_Àn
 = 0;

887 
wrôe_00048
 = 
	`cgc_≠≥nd_buf
(wrôe_00048, &
wrôe_00048_Àn
, 
wrôe_00048_00000
, 
wrôe_00048_00000_Àn
);

888 i‡(
wrôe_00048_Àn
 > 0) {

889 
	`cgc_å™smô_Æl
(1, 
wrôe_00048
, 
wrôe_00048_Àn
);

891 
	`cgc_‰ì
(
wrôe_00048
);

895 
wrôe_00049_00000
[] =

897 
wrôe_00049_00000_Àn
 = 2;

898 *
wrôe_00049
 = 
NULL
;

899 
wrôe_00049_Àn
 = 0;

900 
wrôe_00049
 = 
	`cgc_≠≥nd_buf
(wrôe_00049, &
wrôe_00049_Àn
, 
wrôe_00049_00000
, 
wrôe_00049_00000_Àn
);

901 i‡(
wrôe_00049_Àn
 > 0) {

902 
	`cgc_å™smô_Æl
(1, 
wrôe_00049
, 
wrôe_00049_Àn
);

904 
	`cgc_‰ì
(
wrôe_00049
);

908 
wrôe_00050_00000
[] =

910 
wrôe_00050_00000_Àn
 = 2;

911 *
wrôe_00050
 = 
NULL
;

912 
wrôe_00050_Àn
 = 0;

913 
wrôe_00050
 = 
	`cgc_≠≥nd_buf
(wrôe_00050, &
wrôe_00050_Àn
, 
wrôe_00050_00000
, 
wrôe_00050_00000_Àn
);

914 i‡(
wrôe_00050_Àn
 > 0) {

915 
	`cgc_å™smô_Æl
(1, 
wrôe_00050
, 
wrôe_00050_Àn
);

917 
	`cgc_‰ì
(
wrôe_00050
);

921 
wrôe_00051_00000
[] =

923 
wrôe_00051_00000_Àn
 = 2;

924 *
wrôe_00051
 = 
NULL
;

925 
wrôe_00051_Àn
 = 0;

926 
wrôe_00051
 = 
	`cgc_≠≥nd_buf
(wrôe_00051, &
wrôe_00051_Àn
, 
wrôe_00051_00000
, 
wrôe_00051_00000_Àn
);

927 i‡(
wrôe_00051_Àn
 > 0) {

928 
	`cgc_å™smô_Æl
(1, 
wrôe_00051
, 
wrôe_00051_Àn
);

930 
	`cgc_‰ì
(
wrôe_00051
);

934 
wrôe_00052_00000
[] =

936 
wrôe_00052_00000_Àn
 = 2;

937 *
wrôe_00052
 = 
NULL
;

938 
wrôe_00052_Àn
 = 0;

939 
wrôe_00052
 = 
	`cgc_≠≥nd_buf
(wrôe_00052, &
wrôe_00052_Àn
, 
wrôe_00052_00000
, 
wrôe_00052_00000_Àn
);

940 i‡(
wrôe_00052_Àn
 > 0) {

941 
	`cgc_å™smô_Æl
(1, 
wrôe_00052
, 
wrôe_00052_Àn
);

943 
	`cgc_‰ì
(
wrôe_00052
);

947 
wrôe_00053_00000
[] =

949 
wrôe_00053_00000_Àn
 = 2;

950 *
wrôe_00053
 = 
NULL
;

951 
wrôe_00053_Àn
 = 0;

952 
wrôe_00053
 = 
	`cgc_≠≥nd_buf
(wrôe_00053, &
wrôe_00053_Àn
, 
wrôe_00053_00000
, 
wrôe_00053_00000_Àn
);

953 i‡(
wrôe_00053_Àn
 > 0) {

954 
	`cgc_å™smô_Æl
(1, 
wrôe_00053
, 
wrôe_00053_Àn
);

956 
	`cgc_‰ì
(
wrôe_00053
);

960 
wrôe_00054_00000
[] =

962 
wrôe_00054_00000_Àn
 = 2;

963 *
wrôe_00054
 = 
NULL
;

964 
wrôe_00054_Àn
 = 0;

965 
wrôe_00054
 = 
	`cgc_≠≥nd_buf
(wrôe_00054, &
wrôe_00054_Àn
, 
wrôe_00054_00000
, 
wrôe_00054_00000_Àn
);

966 i‡(
wrôe_00054_Àn
 > 0) {

967 
	`cgc_å™smô_Æl
(1, 
wrôe_00054
, 
wrôe_00054_Àn
);

969 
	`cgc_‰ì
(
wrôe_00054
);

973 
wrôe_00055_00000
[] =

975 
wrôe_00055_00000_Àn
 = 2;

976 *
wrôe_00055
 = 
NULL
;

977 
wrôe_00055_Àn
 = 0;

978 
wrôe_00055
 = 
	`cgc_≠≥nd_buf
(wrôe_00055, &
wrôe_00055_Àn
, 
wrôe_00055_00000
, 
wrôe_00055_00000_Àn
);

979 i‡(
wrôe_00055_Àn
 > 0) {

980 
	`cgc_å™smô_Æl
(1, 
wrôe_00055
, 
wrôe_00055_Àn
);

982 
	`cgc_‰ì
(
wrôe_00055
);

986 
wrôe_00056_00000
[] =

988 
wrôe_00056_00000_Àn
 = 2;

989 *
wrôe_00056
 = 
NULL
;

990 
wrôe_00056_Àn
 = 0;

991 
wrôe_00056
 = 
	`cgc_≠≥nd_buf
(wrôe_00056, &
wrôe_00056_Àn
, 
wrôe_00056_00000
, 
wrôe_00056_00000_Àn
);

992 i‡(
wrôe_00056_Àn
 > 0) {

993 
	`cgc_å™smô_Æl
(1, 
wrôe_00056
, 
wrôe_00056_Àn
);

995 
	`cgc_‰ì
(
wrôe_00056
);

999 
wrôe_00057_00000
[] =

1001 
wrôe_00057_00000_Àn
 = 2;

1002 *
wrôe_00057
 = 
NULL
;

1003 
wrôe_00057_Àn
 = 0;

1004 
wrôe_00057
 = 
	`cgc_≠≥nd_buf
(wrôe_00057, &
wrôe_00057_Àn
, 
wrôe_00057_00000
, 
wrôe_00057_00000_Àn
);

1005 i‡(
wrôe_00057_Àn
 > 0) {

1006 
	`cgc_å™smô_Æl
(1, 
wrôe_00057
, 
wrôe_00057_Àn
);

1008 
	`cgc_‰ì
(
wrôe_00057
);

1012 
wrôe_00058_00000
[] =

1014 
wrôe_00058_00000_Àn
 = 2;

1015 *
wrôe_00058
 = 
NULL
;

1016 
wrôe_00058_Àn
 = 0;

1017 
wrôe_00058
 = 
	`cgc_≠≥nd_buf
(wrôe_00058, &
wrôe_00058_Àn
, 
wrôe_00058_00000
, 
wrôe_00058_00000_Àn
);

1018 i‡(
wrôe_00058_Àn
 > 0) {

1019 
	`cgc_å™smô_Æl
(1, 
wrôe_00058
, 
wrôe_00058_Àn
);

1021 
	`cgc_‰ì
(
wrôe_00058
);

1025 
wrôe_00059_00000
[] =

1027 
wrôe_00059_00000_Àn
 = 2;

1028 *
wrôe_00059
 = 
NULL
;

1029 
wrôe_00059_Àn
 = 0;

1030 
wrôe_00059
 = 
	`cgc_≠≥nd_buf
(wrôe_00059, &
wrôe_00059_Àn
, 
wrôe_00059_00000
, 
wrôe_00059_00000_Àn
);

1031 i‡(
wrôe_00059_Àn
 > 0) {

1032 
	`cgc_å™smô_Æl
(1, 
wrôe_00059
, 
wrôe_00059_Àn
);

1034 
	`cgc_‰ì
(
wrôe_00059
);

1038 
wrôe_00060_00000
[] =

1040 
wrôe_00060_00000_Àn
 = 2;

1041 *
wrôe_00060
 = 
NULL
;

1042 
wrôe_00060_Àn
 = 0;

1043 
wrôe_00060
 = 
	`cgc_≠≥nd_buf
(wrôe_00060, &
wrôe_00060_Àn
, 
wrôe_00060_00000
, 
wrôe_00060_00000_Àn
);

1044 i‡(
wrôe_00060_Àn
 > 0) {

1045 
	`cgc_å™smô_Æl
(1, 
wrôe_00060
, 
wrôe_00060_Àn
);

1047 
	`cgc_‰ì
(
wrôe_00060
);

1051 
wrôe_00061_00000
[] =

1053 
wrôe_00061_00000_Àn
 = 2;

1054 *
wrôe_00061
 = 
NULL
;

1055 
wrôe_00061_Àn
 = 0;

1056 
wrôe_00061
 = 
	`cgc_≠≥nd_buf
(wrôe_00061, &
wrôe_00061_Àn
, 
wrôe_00061_00000
, 
wrôe_00061_00000_Àn
);

1057 i‡(
wrôe_00061_Àn
 > 0) {

1058 
	`cgc_å™smô_Æl
(1, 
wrôe_00061
, 
wrôe_00061_Àn
);

1060 
	`cgc_‰ì
(
wrôe_00061
);

1064 
wrôe_00062_00000
[] =

1066 
wrôe_00062_00000_Àn
 = 2;

1067 *
wrôe_00062
 = 
NULL
;

1068 
wrôe_00062_Àn
 = 0;

1069 
wrôe_00062
 = 
	`cgc_≠≥nd_buf
(wrôe_00062, &
wrôe_00062_Àn
, 
wrôe_00062_00000
, 
wrôe_00062_00000_Àn
);

1070 i‡(
wrôe_00062_Àn
 > 0) {

1071 
	`cgc_å™smô_Æl
(1, 
wrôe_00062
, 
wrôe_00062_Àn
);

1073 
	`cgc_‰ì
(
wrôe_00062
);

1077 
wrôe_00063_00000
[] =

1079 
wrôe_00063_00000_Àn
 = 2;

1080 *
wrôe_00063
 = 
NULL
;

1081 
wrôe_00063_Àn
 = 0;

1082 
wrôe_00063
 = 
	`cgc_≠≥nd_buf
(wrôe_00063, &
wrôe_00063_Àn
, 
wrôe_00063_00000
, 
wrôe_00063_00000_Àn
);

1083 i‡(
wrôe_00063_Àn
 > 0) {

1084 
	`cgc_å™smô_Æl
(1, 
wrôe_00063
, 
wrôe_00063_Àn
);

1086 
	`cgc_‰ì
(
wrôe_00063
);

1090 
wrôe_00064_00000
[] =

1092 
wrôe_00064_00000_Àn
 = 2;

1093 *
wrôe_00064
 = 
NULL
;

1094 
wrôe_00064_Àn
 = 0;

1095 
wrôe_00064
 = 
	`cgc_≠≥nd_buf
(wrôe_00064, &
wrôe_00064_Àn
, 
wrôe_00064_00000
, 
wrôe_00064_00000_Àn
);

1096 i‡(
wrôe_00064_Àn
 > 0) {

1097 
	`cgc_å™smô_Æl
(1, 
wrôe_00064
, 
wrôe_00064_Àn
);

1099 
	`cgc_‰ì
(
wrôe_00064
);

1103 
wrôe_00065_00000
[] =

1105 
wrôe_00065_00000_Àn
 = 2;

1106 *
wrôe_00065
 = 
NULL
;

1107 
wrôe_00065_Àn
 = 0;

1108 
wrôe_00065
 = 
	`cgc_≠≥nd_buf
(wrôe_00065, &
wrôe_00065_Àn
, 
wrôe_00065_00000
, 
wrôe_00065_00000_Àn
);

1109 i‡(
wrôe_00065_Àn
 > 0) {

1110 
	`cgc_å™smô_Æl
(1, 
wrôe_00065
, 
wrôe_00065_Àn
);

1112 
	`cgc_‰ì
(
wrôe_00065
);

1116 
wrôe_00066_00000
[] =

1118 
wrôe_00066_00000_Àn
 = 5;

1119 *
wrôe_00066
 = 
NULL
;

1120 
wrôe_00066_Àn
 = 0;

1121 
wrôe_00066
 = 
	`cgc_≠≥nd_buf
(wrôe_00066, &
wrôe_00066_Àn
, 
wrôe_00066_00000
, 
wrôe_00066_00000_Àn
);

1122 i‡(
wrôe_00066_Àn
 > 0) {

1123 
	`cgc_å™smô_Æl
(1, 
wrôe_00066
, 
wrôe_00066_Àn
);

1125 
	`cgc_‰ì
(
wrôe_00066
);

1128 *
ªad_00018
;

1129 
ªad_00018_Àn
;

1130 
ªad_00018_±r
 = 0;

1132 
ªad_00018_dñim
[] =

1134 
ªad_00018
 = 
NULL
;

1135 
ªad_00018_Àn
 = 0;

1136 
ªad_00018_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00018
, &
ªad_00018_Àn
, 
ªad_00018_dñim
, 1);

1137 i‡(
ªad_00018_ªs
) {}

1138 
	`cgc_‰ì
(
ªad_00018
);

1139 i‡(
ªad_00018_±r
) {}

1142 *
ªad_00019
;

1143 
ªad_00019_Àn
;

1144 
ªad_00019_±r
 = 0;

1146 
ªad_00019_dñim
[] =

1148 
ªad_00019
 = 
NULL
;

1149 
ªad_00019_Àn
 = 0;

1150 
ªad_00019_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00019
, &
ªad_00019_Àn
, 
ªad_00019_dñim
, 1);

1151 i‡(
ªad_00019_ªs
) {}

1153 
m©ch_00019_00000
[] =

1155 
ªad_00019_±r
 +
	`cgc_d©a_m©ch
(
ªad_00019
 +Ñód_00019_±r, 
ªad_00019_Àn
 -Ñód_00019_±r, 
m©ch_00019_00000
, 2);

1156 
	`cgc_‰ì
(
ªad_00019
);

1157 i‡(
ªad_00019_±r
) {}

1159 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/pov_2/pov.c

1 
	~"libpov.h
"

2 
	$maö
(
cgc_¨gc
, *
cgc_¨gv
[]) {

3 
	`cgc_√gŸüã_ty≥1
(0x0, 0x0, 0);

6 
wrôe_00000_00000
[] =

8 
wrôe_00000_00000_Àn
 = 4;

9 *
wrôe_00000
 = 
NULL
;

10 
wrôe_00000_Àn
 = 0;

11 
wrôe_00000
 = 
	`cgc_≠≥nd_buf
(wrôe_00000, &
wrôe_00000_Àn
, 
wrôe_00000_00000
, 
wrôe_00000_00000_Àn
);

12 i‡(
wrôe_00000_Àn
 > 0) {

13 
	`cgc_å™smô_Æl
(1, 
wrôe_00000
, 
wrôe_00000_Àn
);

15 
	`cgc_‰ì
(
wrôe_00000
);

19 
wrôe_00001_00000
[] =

21 
wrôe_00001_00000_Àn
 = 5;

22 *
wrôe_00001
 = 
NULL
;

23 
wrôe_00001_Àn
 = 0;

24 
wrôe_00001
 = 
	`cgc_≠≥nd_buf
(wrôe_00001, &
wrôe_00001_Àn
, 
wrôe_00001_00000
, 
wrôe_00001_00000_Àn
);

25 i‡(
wrôe_00001_Àn
 > 0) {

26 
	`cgc_å™smô_Æl
(1, 
wrôe_00001
, 
wrôe_00001_Àn
);

28 
	`cgc_‰ì
(
wrôe_00001
);

32 
wrôe_00002_00000
[] =

34 
wrôe_00002_00000_Àn
 = 5;

35 *
wrôe_00002
 = 
NULL
;

36 
wrôe_00002_Àn
 = 0;

37 
wrôe_00002
 = 
	`cgc_≠≥nd_buf
(wrôe_00002, &
wrôe_00002_Àn
, 
wrôe_00002_00000
, 
wrôe_00002_00000_Àn
);

38 i‡(
wrôe_00002_Àn
 > 0) {

39 
	`cgc_å™smô_Æl
(1, 
wrôe_00002
, 
wrôe_00002_Àn
);

41 
	`cgc_‰ì
(
wrôe_00002
);

44 *
ªad_00000
;

45 
ªad_00000_Àn
;

46 
ªad_00000_±r
 = 0;

48 
ªad_00000_dñim
[] =

50 
ªad_00000
 = 
NULL
;

51 
ªad_00000_Àn
 = 0;

52 
ªad_00000_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00000
, &
ªad_00000_Àn
, 
ªad_00000_dñim
, 1);

53 i‡(
ªad_00000_ªs
) {}

55 
m©ch_00000_00000
[] =

57 
ªad_00000_±r
 +
	`cgc_d©a_m©ch
(
ªad_00000
 +Ñód_00000_±r, 
ªad_00000_Àn
 -Ñód_00000_±r, 
m©ch_00000_00000
, 10);

58 
	`cgc_‰ì
(
ªad_00000
);

59 i‡(
ªad_00000_±r
) {}

63 
wrôe_00003_00000
[] =

65 
wrôe_00003_00000_Àn
 = 5;

66 *
wrôe_00003
 = 
NULL
;

67 
wrôe_00003_Àn
 = 0;

68 
wrôe_00003
 = 
	`cgc_≠≥nd_buf
(wrôe_00003, &
wrôe_00003_Àn
, 
wrôe_00003_00000
, 
wrôe_00003_00000_Àn
);

69 i‡(
wrôe_00003_Àn
 > 0) {

70 
	`cgc_å™smô_Æl
(1, 
wrôe_00003
, 
wrôe_00003_Àn
);

72 
	`cgc_‰ì
(
wrôe_00003
);

75 *
ªad_00001
;

76 
ªad_00001_Àn
;

77 
ªad_00001_±r
 = 0;

79 
ªad_00001_dñim
[] =

81 
ªad_00001
 = 
NULL
;

82 
ªad_00001_Àn
 = 0;

83 
ªad_00001_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00001
, &
ªad_00001_Àn
, 
ªad_00001_dñim
, 1);

84 i‡(
ªad_00001_ªs
) {}

86 
m©ch_00001_00000
[] =

88 
ªad_00001_±r
 +
	`cgc_d©a_m©ch
(
ªad_00001
 +Ñód_00001_±r, 
ªad_00001_Àn
 -Ñód_00001_±r, 
m©ch_00001_00000
, 10);

89 
	`cgc_‰ì
(
ªad_00001
);

90 i‡(
ªad_00001_±r
) {}

94 
wrôe_00004_00000
[] =

96 
wrôe_00004_00000_Àn
 = 5;

97 *
wrôe_00004
 = 
NULL
;

98 
wrôe_00004_Àn
 = 0;

99 
wrôe_00004
 = 
	`cgc_≠≥nd_buf
(wrôe_00004, &
wrôe_00004_Àn
, 
wrôe_00004_00000
, 
wrôe_00004_00000_Àn
);

100 i‡(
wrôe_00004_Àn
 > 0) {

101 
	`cgc_å™smô_Æl
(1, 
wrôe_00004
, 
wrôe_00004_Àn
);

103 
	`cgc_‰ì
(
wrôe_00004
);

106 *
ªad_00002
;

107 
ªad_00002_Àn
;

108 
ªad_00002_±r
 = 0;

110 
ªad_00002_dñim
[] =

112 
ªad_00002
 = 
NULL
;

113 
ªad_00002_Àn
 = 0;

114 
ªad_00002_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00002
, &
ªad_00002_Àn
, 
ªad_00002_dñim
, 1);

115 i‡(
ªad_00002_ªs
) {}

117 
m©ch_00002_00000
[] =

119 
ªad_00002_±r
 +
	`cgc_d©a_m©ch
(
ªad_00002
 +Ñód_00002_±r, 
ªad_00002_Àn
 -Ñód_00002_±r, 
m©ch_00002_00000
, 10);

120 
	`cgc_‰ì
(
ªad_00002
);

121 i‡(
ªad_00002_±r
) {}

125 
wrôe_00005_00000
[] =

127 
wrôe_00005_00000_Àn
 = 5;

128 *
wrôe_00005
 = 
NULL
;

129 
wrôe_00005_Àn
 = 0;

130 
wrôe_00005
 = 
	`cgc_≠≥nd_buf
(wrôe_00005, &
wrôe_00005_Àn
, 
wrôe_00005_00000
, 
wrôe_00005_00000_Àn
);

131 i‡(
wrôe_00005_Àn
 > 0) {

132 
	`cgc_å™smô_Æl
(1, 
wrôe_00005
, 
wrôe_00005_Àn
);

134 
	`cgc_‰ì
(
wrôe_00005
);

137 *
ªad_00003
;

138 
ªad_00003_Àn
;

139 
ªad_00003_±r
 = 0;

141 
ªad_00003_dñim
[] =

143 
ªad_00003
 = 
NULL
;

144 
ªad_00003_Àn
 = 0;

145 
ªad_00003_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00003
, &
ªad_00003_Àn
, 
ªad_00003_dñim
, 1);

146 i‡(
ªad_00003_ªs
) {}

148 
m©ch_00003_00000
[] =

150 
ªad_00003_±r
 +
	`cgc_d©a_m©ch
(
ªad_00003
 +Ñód_00003_±r, 
ªad_00003_Àn
 -Ñód_00003_±r, 
m©ch_00003_00000
, 10);

151 
	`cgc_‰ì
(
ªad_00003
);

152 i‡(
ªad_00003_±r
) {}

156 
wrôe_00006_00000
[] =

158 
wrôe_00006_00000_Àn
 = 5;

159 *
wrôe_00006
 = 
NULL
;

160 
wrôe_00006_Àn
 = 0;

161 
wrôe_00006
 = 
	`cgc_≠≥nd_buf
(wrôe_00006, &
wrôe_00006_Àn
, 
wrôe_00006_00000
, 
wrôe_00006_00000_Àn
);

162 i‡(
wrôe_00006_Àn
 > 0) {

163 
	`cgc_å™smô_Æl
(1, 
wrôe_00006
, 
wrôe_00006_Àn
);

165 
	`cgc_‰ì
(
wrôe_00006
);

168 *
ªad_00004
;

169 
ªad_00004_Àn
;

170 
ªad_00004_±r
 = 0;

172 
ªad_00004_dñim
[] =

174 
ªad_00004
 = 
NULL
;

175 
ªad_00004_Àn
 = 0;

176 
ªad_00004_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00004
, &
ªad_00004_Àn
, 
ªad_00004_dñim
, 1);

177 i‡(
ªad_00004_ªs
) {}

179 
m©ch_00004_00000
[] =

181 
ªad_00004_±r
 +
	`cgc_d©a_m©ch
(
ªad_00004
 +Ñód_00004_±r, 
ªad_00004_Àn
 -Ñód_00004_±r, 
m©ch_00004_00000
, 10);

182 
	`cgc_‰ì
(
ªad_00004
);

183 i‡(
ªad_00004_±r
) {}

187 
wrôe_00007_00000
[] =

189 
wrôe_00007_00000_Àn
 = 5;

190 *
wrôe_00007
 = 
NULL
;

191 
wrôe_00007_Àn
 = 0;

192 
wrôe_00007
 = 
	`cgc_≠≥nd_buf
(wrôe_00007, &
wrôe_00007_Àn
, 
wrôe_00007_00000
, 
wrôe_00007_00000_Àn
);

193 i‡(
wrôe_00007_Àn
 > 0) {

194 
	`cgc_å™smô_Æl
(1, 
wrôe_00007
, 
wrôe_00007_Àn
);

196 
	`cgc_‰ì
(
wrôe_00007
);

199 *
ªad_00005
;

200 
ªad_00005_Àn
;

201 
ªad_00005_±r
 = 0;

203 
ªad_00005_dñim
[] =

205 
ªad_00005
 = 
NULL
;

206 
ªad_00005_Àn
 = 0;

207 
ªad_00005_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00005
, &
ªad_00005_Àn
, 
ªad_00005_dñim
, 1);

208 i‡(
ªad_00005_ªs
) {}

210 
m©ch_00005_00000
[] =

212 
ªad_00005_±r
 +
	`cgc_d©a_m©ch
(
ªad_00005
 +Ñód_00005_±r, 
ªad_00005_Àn
 -Ñód_00005_±r, 
m©ch_00005_00000
, 10);

213 
	`cgc_‰ì
(
ªad_00005
);

214 i‡(
ªad_00005_±r
) {}

218 
wrôe_00008_00000
[] =

220 
wrôe_00008_00000_Àn
 = 5;

221 *
wrôe_00008
 = 
NULL
;

222 
wrôe_00008_Àn
 = 0;

223 
wrôe_00008
 = 
	`cgc_≠≥nd_buf
(wrôe_00008, &
wrôe_00008_Àn
, 
wrôe_00008_00000
, 
wrôe_00008_00000_Àn
);

224 i‡(
wrôe_00008_Àn
 > 0) {

225 
	`cgc_å™smô_Æl
(1, 
wrôe_00008
, 
wrôe_00008_Àn
);

227 
	`cgc_‰ì
(
wrôe_00008
);

230 *
ªad_00006
;

231 
ªad_00006_Àn
;

232 
ªad_00006_±r
 = 0;

234 
ªad_00006_dñim
[] =

236 
ªad_00006
 = 
NULL
;

237 
ªad_00006_Àn
 = 0;

238 
ªad_00006_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00006
, &
ªad_00006_Àn
, 
ªad_00006_dñim
, 1);

239 i‡(
ªad_00006_ªs
) {}

241 
m©ch_00006_00000
[] =

243 
ªad_00006_±r
 +
	`cgc_d©a_m©ch
(
ªad_00006
 +Ñód_00006_±r, 
ªad_00006_Àn
 -Ñód_00006_±r, 
m©ch_00006_00000
, 10);

244 
	`cgc_‰ì
(
ªad_00006
);

245 i‡(
ªad_00006_±r
) {}

249 
wrôe_00009_00000
[] =

251 
wrôe_00009_00000_Àn
 = 5;

252 *
wrôe_00009
 = 
NULL
;

253 
wrôe_00009_Àn
 = 0;

254 
wrôe_00009
 = 
	`cgc_≠≥nd_buf
(wrôe_00009, &
wrôe_00009_Àn
, 
wrôe_00009_00000
, 
wrôe_00009_00000_Àn
);

255 i‡(
wrôe_00009_Àn
 > 0) {

256 
	`cgc_å™smô_Æl
(1, 
wrôe_00009
, 
wrôe_00009_Àn
);

258 
	`cgc_‰ì
(
wrôe_00009
);

261 *
ªad_00007
;

262 
ªad_00007_Àn
;

263 
ªad_00007_±r
 = 0;

265 
ªad_00007_dñim
[] =

267 
ªad_00007
 = 
NULL
;

268 
ªad_00007_Àn
 = 0;

269 
ªad_00007_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00007
, &
ªad_00007_Àn
, 
ªad_00007_dñim
, 1);

270 i‡(
ªad_00007_ªs
) {}

272 
m©ch_00007_00000
[] =

274 
ªad_00007_±r
 +
	`cgc_d©a_m©ch
(
ªad_00007
 +Ñód_00007_±r, 
ªad_00007_Àn
 -Ñód_00007_±r, 
m©ch_00007_00000
, 10);

275 
	`cgc_‰ì
(
ªad_00007
);

276 i‡(
ªad_00007_±r
) {}

280 
wrôe_00010_00000
[] =

282 
wrôe_00010_00000_Àn
 = 5;

283 *
wrôe_00010
 = 
NULL
;

284 
wrôe_00010_Àn
 = 0;

285 
wrôe_00010
 = 
	`cgc_≠≥nd_buf
(wrôe_00010, &
wrôe_00010_Àn
, 
wrôe_00010_00000
, 
wrôe_00010_00000_Àn
);

286 i‡(
wrôe_00010_Àn
 > 0) {

287 
	`cgc_å™smô_Æl
(1, 
wrôe_00010
, 
wrôe_00010_Àn
);

289 
	`cgc_‰ì
(
wrôe_00010
);

292 *
ªad_00008
;

293 
ªad_00008_Àn
;

294 
ªad_00008_±r
 = 0;

296 
ªad_00008_dñim
[] =

298 
ªad_00008
 = 
NULL
;

299 
ªad_00008_Àn
 = 0;

300 
ªad_00008_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00008
, &
ªad_00008_Àn
, 
ªad_00008_dñim
, 1);

301 i‡(
ªad_00008_ªs
) {}

303 
m©ch_00008_00000
[] =

305 
ªad_00008_±r
 +
	`cgc_d©a_m©ch
(
ªad_00008
 +Ñód_00008_±r, 
ªad_00008_Àn
 -Ñód_00008_±r, 
m©ch_00008_00000
, 10);

306 
	`cgc_‰ì
(
ªad_00008
);

307 i‡(
ªad_00008_±r
) {}

311 
wrôe_00011_00000
[] =

313 
wrôe_00011_00000_Àn
 = 5;

314 *
wrôe_00011
 = 
NULL
;

315 
wrôe_00011_Àn
 = 0;

316 
wrôe_00011
 = 
	`cgc_≠≥nd_buf
(wrôe_00011, &
wrôe_00011_Àn
, 
wrôe_00011_00000
, 
wrôe_00011_00000_Àn
);

317 i‡(
wrôe_00011_Àn
 > 0) {

318 
	`cgc_å™smô_Æl
(1, 
wrôe_00011
, 
wrôe_00011_Àn
);

320 
	`cgc_‰ì
(
wrôe_00011
);

323 *
ªad_00009
;

324 
ªad_00009_Àn
;

325 
ªad_00009_±r
 = 0;

327 
ªad_00009_dñim
[] =

329 
ªad_00009
 = 
NULL
;

330 
ªad_00009_Àn
 = 0;

331 
ªad_00009_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00009
, &
ªad_00009_Àn
, 
ªad_00009_dñim
, 1);

332 i‡(
ªad_00009_ªs
) {}

334 
m©ch_00009_00000
[] =

336 
ªad_00009_±r
 +
	`cgc_d©a_m©ch
(
ªad_00009
 +Ñód_00009_±r, 
ªad_00009_Àn
 -Ñód_00009_±r, 
m©ch_00009_00000
, 10);

337 
	`cgc_‰ì
(
ªad_00009
);

338 i‡(
ªad_00009_±r
) {}

342 
wrôe_00012_00000
[] =

344 
wrôe_00012_00000_Àn
 = 5;

345 *
wrôe_00012
 = 
NULL
;

346 
wrôe_00012_Àn
 = 0;

347 
wrôe_00012
 = 
	`cgc_≠≥nd_buf
(wrôe_00012, &
wrôe_00012_Àn
, 
wrôe_00012_00000
, 
wrôe_00012_00000_Àn
);

348 i‡(
wrôe_00012_Àn
 > 0) {

349 
	`cgc_å™smô_Æl
(1, 
wrôe_00012
, 
wrôe_00012_Àn
);

351 
	`cgc_‰ì
(
wrôe_00012
);

354 *
ªad_00010
;

355 
ªad_00010_Àn
;

356 
ªad_00010_±r
 = 0;

358 
ªad_00010_dñim
[] =

360 
ªad_00010
 = 
NULL
;

361 
ªad_00010_Àn
 = 0;

362 
ªad_00010_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00010
, &
ªad_00010_Àn
, 
ªad_00010_dñim
, 1);

363 i‡(
ªad_00010_ªs
) {}

365 
m©ch_00010_00000
[] =

367 
ªad_00010_±r
 +
	`cgc_d©a_m©ch
(
ªad_00010
 +Ñód_00010_±r, 
ªad_00010_Àn
 -Ñód_00010_±r, 
m©ch_00010_00000
, 10);

368 
	`cgc_‰ì
(
ªad_00010
);

369 i‡(
ªad_00010_±r
) {}

373 
wrôe_00013_00000
[] =

375 
wrôe_00013_00000_Àn
 = 5;

376 *
wrôe_00013
 = 
NULL
;

377 
wrôe_00013_Àn
 = 0;

378 
wrôe_00013
 = 
	`cgc_≠≥nd_buf
(wrôe_00013, &
wrôe_00013_Àn
, 
wrôe_00013_00000
, 
wrôe_00013_00000_Àn
);

379 i‡(
wrôe_00013_Àn
 > 0) {

380 
	`cgc_å™smô_Æl
(1, 
wrôe_00013
, 
wrôe_00013_Àn
);

382 
	`cgc_‰ì
(
wrôe_00013
);

385 *
ªad_00011
;

386 
ªad_00011_Àn
;

387 
ªad_00011_±r
 = 0;

389 
ªad_00011_dñim
[] =

391 
ªad_00011
 = 
NULL
;

392 
ªad_00011_Àn
 = 0;

393 
ªad_00011_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00011
, &
ªad_00011_Àn
, 
ªad_00011_dñim
, 1);

394 i‡(
ªad_00011_ªs
) {}

396 
m©ch_00011_00000
[] =

398 
ªad_00011_±r
 +
	`cgc_d©a_m©ch
(
ªad_00011
 +Ñód_00011_±r, 
ªad_00011_Àn
 -Ñód_00011_±r, 
m©ch_00011_00000
, 10);

399 
	`cgc_‰ì
(
ªad_00011
);

400 i‡(
ªad_00011_±r
) {}

404 
wrôe_00014_00000
[] =

406 
wrôe_00014_00000_Àn
 = 5;

407 *
wrôe_00014
 = 
NULL
;

408 
wrôe_00014_Àn
 = 0;

409 
wrôe_00014
 = 
	`cgc_≠≥nd_buf
(wrôe_00014, &
wrôe_00014_Àn
, 
wrôe_00014_00000
, 
wrôe_00014_00000_Àn
);

410 i‡(
wrôe_00014_Àn
 > 0) {

411 
	`cgc_å™smô_Æl
(1, 
wrôe_00014
, 
wrôe_00014_Àn
);

413 
	`cgc_‰ì
(
wrôe_00014
);

416 *
ªad_00012
;

417 
ªad_00012_Àn
;

418 
ªad_00012_±r
 = 0;

420 
ªad_00012_dñim
[] =

422 
ªad_00012
 = 
NULL
;

423 
ªad_00012_Àn
 = 0;

424 
ªad_00012_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00012
, &
ªad_00012_Àn
, 
ªad_00012_dñim
, 1);

425 i‡(
ªad_00012_ªs
) {}

427 
m©ch_00012_00000
[] =

429 
ªad_00012_±r
 +
	`cgc_d©a_m©ch
(
ªad_00012
 +Ñód_00012_±r, 
ªad_00012_Àn
 -Ñód_00012_±r, 
m©ch_00012_00000
, 10);

430 
	`cgc_‰ì
(
ªad_00012
);

431 i‡(
ªad_00012_±r
) {}

435 
wrôe_00015_00000
[] =

437 
wrôe_00015_00000_Àn
 = 5;

438 *
wrôe_00015
 = 
NULL
;

439 
wrôe_00015_Àn
 = 0;

440 
wrôe_00015
 = 
	`cgc_≠≥nd_buf
(wrôe_00015, &
wrôe_00015_Àn
, 
wrôe_00015_00000
, 
wrôe_00015_00000_Àn
);

441 i‡(
wrôe_00015_Àn
 > 0) {

442 
	`cgc_å™smô_Æl
(1, 
wrôe_00015
, 
wrôe_00015_Àn
);

444 
	`cgc_‰ì
(
wrôe_00015
);

447 *
ªad_00013
;

448 
ªad_00013_Àn
;

449 
ªad_00013_±r
 = 0;

451 
ªad_00013_dñim
[] =

453 
ªad_00013
 = 
NULL
;

454 
ªad_00013_Àn
 = 0;

455 
ªad_00013_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00013
, &
ªad_00013_Àn
, 
ªad_00013_dñim
, 1);

456 i‡(
ªad_00013_ªs
) {}

458 
m©ch_00013_00000
[] =

460 
ªad_00013_±r
 +
	`cgc_d©a_m©ch
(
ªad_00013
 +Ñód_00013_±r, 
ªad_00013_Àn
 -Ñód_00013_±r, 
m©ch_00013_00000
, 10);

461 
	`cgc_‰ì
(
ªad_00013
);

462 i‡(
ªad_00013_±r
) {}

466 
wrôe_00016_00000
[] =

468 
wrôe_00016_00000_Àn
 = 5;

469 *
wrôe_00016
 = 
NULL
;

470 
wrôe_00016_Àn
 = 0;

471 
wrôe_00016
 = 
	`cgc_≠≥nd_buf
(wrôe_00016, &
wrôe_00016_Àn
, 
wrôe_00016_00000
, 
wrôe_00016_00000_Àn
);

472 i‡(
wrôe_00016_Àn
 > 0) {

473 
	`cgc_å™smô_Æl
(1, 
wrôe_00016
, 
wrôe_00016_Àn
);

475 
	`cgc_‰ì
(
wrôe_00016
);

478 *
ªad_00014
;

479 
ªad_00014_Àn
;

480 
ªad_00014_±r
 = 0;

482 
ªad_00014_dñim
[] =

484 
ªad_00014
 = 
NULL
;

485 
ªad_00014_Àn
 = 0;

486 
ªad_00014_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00014
, &
ªad_00014_Àn
, 
ªad_00014_dñim
, 1);

487 i‡(
ªad_00014_ªs
) {}

489 
m©ch_00014_00000
[] =

491 
ªad_00014_±r
 +
	`cgc_d©a_m©ch
(
ªad_00014
 +Ñód_00014_±r, 
ªad_00014_Àn
 -Ñód_00014_±r, 
m©ch_00014_00000
, 10);

492 
	`cgc_‰ì
(
ªad_00014
);

493 i‡(
ªad_00014_±r
) {}

497 
wrôe_00017_00000
[] =

499 
wrôe_00017_00000_Àn
 = 5;

500 *
wrôe_00017
 = 
NULL
;

501 
wrôe_00017_Àn
 = 0;

502 
wrôe_00017
 = 
	`cgc_≠≥nd_buf
(wrôe_00017, &
wrôe_00017_Àn
, 
wrôe_00017_00000
, 
wrôe_00017_00000_Àn
);

503 i‡(
wrôe_00017_Àn
 > 0) {

504 
	`cgc_å™smô_Æl
(1, 
wrôe_00017
, 
wrôe_00017_Àn
);

506 
	`cgc_‰ì
(
wrôe_00017
);

509 *
ªad_00015
;

510 
ªad_00015_Àn
;

511 
ªad_00015_±r
 = 0;

513 
ªad_00015_dñim
[] =

515 
ªad_00015
 = 
NULL
;

516 
ªad_00015_Àn
 = 0;

517 
ªad_00015_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00015
, &
ªad_00015_Àn
, 
ªad_00015_dñim
, 1);

518 i‡(
ªad_00015_ªs
) {}

520 
m©ch_00015_00000
[] =

522 
ªad_00015_±r
 +
	`cgc_d©a_m©ch
(
ªad_00015
 +Ñód_00015_±r, 
ªad_00015_Àn
 -Ñód_00015_±r, 
m©ch_00015_00000
, 10);

523 
	`cgc_‰ì
(
ªad_00015
);

524 i‡(
ªad_00015_±r
) {}

528 
wrôe_00018_00000
[] =

530 
wrôe_00018_00000_Àn
 = 5;

531 *
wrôe_00018
 = 
NULL
;

532 
wrôe_00018_Àn
 = 0;

533 
wrôe_00018
 = 
	`cgc_≠≥nd_buf
(wrôe_00018, &
wrôe_00018_Àn
, 
wrôe_00018_00000
, 
wrôe_00018_00000_Àn
);

534 i‡(
wrôe_00018_Àn
 > 0) {

535 
	`cgc_å™smô_Æl
(1, 
wrôe_00018
, 
wrôe_00018_Àn
);

537 
	`cgc_‰ì
(
wrôe_00018
);

540 *
ªad_00016
;

541 
ªad_00016_Àn
;

542 
ªad_00016_±r
 = 0;

544 
ªad_00016_dñim
[] =

546 
ªad_00016
 = 
NULL
;

547 
ªad_00016_Àn
 = 0;

548 
ªad_00016_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00016
, &
ªad_00016_Àn
, 
ªad_00016_dñim
, 1);

549 i‡(
ªad_00016_ªs
) {}

551 
m©ch_00016_00000
[] =

553 
ªad_00016_±r
 +
	`cgc_d©a_m©ch
(
ªad_00016
 +Ñód_00016_±r, 
ªad_00016_Àn
 -Ñód_00016_±r, 
m©ch_00016_00000
, 10);

554 
	`cgc_‰ì
(
ªad_00016
);

555 i‡(
ªad_00016_±r
) {}

559 
wrôe_00019_00000
[] =

561 
wrôe_00019_00000_Àn
 = 5;

562 *
wrôe_00019
 = 
NULL
;

563 
wrôe_00019_Àn
 = 0;

564 
wrôe_00019
 = 
	`cgc_≠≥nd_buf
(wrôe_00019, &
wrôe_00019_Àn
, 
wrôe_00019_00000
, 
wrôe_00019_00000_Àn
);

565 i‡(
wrôe_00019_Àn
 > 0) {

566 
	`cgc_å™smô_Æl
(1, 
wrôe_00019
, 
wrôe_00019_Àn
);

568 
	`cgc_‰ì
(
wrôe_00019
);

571 *
ªad_00017
;

572 
ªad_00017_Àn
;

573 
ªad_00017_±r
 = 0;

575 
ªad_00017_dñim
[] =

577 
ªad_00017
 = 
NULL
;

578 
ªad_00017_Àn
 = 0;

579 
ªad_00017_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00017
, &
ªad_00017_Àn
, 
ªad_00017_dñim
, 1);

580 i‡(
ªad_00017_ªs
) {}

582 
m©ch_00017_00000
[] =

584 
ªad_00017_±r
 +
	`cgc_d©a_m©ch
(
ªad_00017
 +Ñód_00017_±r, 
ªad_00017_Àn
 -Ñód_00017_±r, 
m©ch_00017_00000
, 10);

585 
	`cgc_‰ì
(
ªad_00017
);

586 i‡(
ªad_00017_±r
) {}

590 
wrôe_00020_00000
[] =

592 
wrôe_00020_00000_Àn
 = 5;

593 *
wrôe_00020
 = 
NULL
;

594 
wrôe_00020_Àn
 = 0;

595 
wrôe_00020
 = 
	`cgc_≠≥nd_buf
(wrôe_00020, &
wrôe_00020_Àn
, 
wrôe_00020_00000
, 
wrôe_00020_00000_Àn
);

596 i‡(
wrôe_00020_Àn
 > 0) {

597 
	`cgc_å™smô_Æl
(1, 
wrôe_00020
, 
wrôe_00020_Àn
);

599 
	`cgc_‰ì
(
wrôe_00020
);

602 *
ªad_00018
;

603 
ªad_00018_Àn
;

604 
ªad_00018_±r
 = 0;

606 
ªad_00018_dñim
[] =

608 
ªad_00018
 = 
NULL
;

609 
ªad_00018_Àn
 = 0;

610 
ªad_00018_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00018
, &
ªad_00018_Àn
, 
ªad_00018_dñim
, 1);

611 i‡(
ªad_00018_ªs
) {}

613 
m©ch_00018_00000
[] =

615 
ªad_00018_±r
 +
	`cgc_d©a_m©ch
(
ªad_00018
 +Ñód_00018_±r, 
ªad_00018_Àn
 -Ñód_00018_±r, 
m©ch_00018_00000
, 10);

616 
	`cgc_‰ì
(
ªad_00018
);

617 i‡(
ªad_00018_±r
) {}

621 
wrôe_00021_00000
[] =

623 
wrôe_00021_00000_Àn
 = 5;

624 *
wrôe_00021
 = 
NULL
;

625 
wrôe_00021_Àn
 = 0;

626 
wrôe_00021
 = 
	`cgc_≠≥nd_buf
(wrôe_00021, &
wrôe_00021_Àn
, 
wrôe_00021_00000
, 
wrôe_00021_00000_Àn
);

627 i‡(
wrôe_00021_Àn
 > 0) {

628 
	`cgc_å™smô_Æl
(1, 
wrôe_00021
, 
wrôe_00021_Àn
);

630 
	`cgc_‰ì
(
wrôe_00021
);

633 *
ªad_00019
;

634 
ªad_00019_Àn
;

635 
ªad_00019_±r
 = 0;

637 
ªad_00019_dñim
[] =

639 
ªad_00019
 = 
NULL
;

640 
ªad_00019_Àn
 = 0;

641 
ªad_00019_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00019
, &
ªad_00019_Àn
, 
ªad_00019_dñim
, 1);

642 i‡(
ªad_00019_ªs
) {}

644 
m©ch_00019_00000
[] =

646 
ªad_00019_±r
 +
	`cgc_d©a_m©ch
(
ªad_00019
 +Ñód_00019_±r, 
ªad_00019_Àn
 -Ñód_00019_±r, 
m©ch_00019_00000
, 10);

647 
	`cgc_‰ì
(
ªad_00019
);

648 i‡(
ªad_00019_±r
) {}

652 
wrôe_00022_00000
[] =

654 
wrôe_00022_00000_Àn
 = 5;

655 *
wrôe_00022
 = 
NULL
;

656 
wrôe_00022_Àn
 = 0;

657 
wrôe_00022
 = 
	`cgc_≠≥nd_buf
(wrôe_00022, &
wrôe_00022_Àn
, 
wrôe_00022_00000
, 
wrôe_00022_00000_Àn
);

658 i‡(
wrôe_00022_Àn
 > 0) {

659 
	`cgc_å™smô_Æl
(1, 
wrôe_00022
, 
wrôe_00022_Àn
);

661 
	`cgc_‰ì
(
wrôe_00022
);

664 *
ªad_00020
;

665 
ªad_00020_Àn
;

666 
ªad_00020_±r
 = 0;

668 
ªad_00020_dñim
[] =

670 
ªad_00020
 = 
NULL
;

671 
ªad_00020_Àn
 = 0;

672 
ªad_00020_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00020
, &
ªad_00020_Àn
, 
ªad_00020_dñim
, 1);

673 i‡(
ªad_00020_ªs
) {}

675 
m©ch_00020_00000
[] =

677 
ªad_00020_±r
 +
	`cgc_d©a_m©ch
(
ªad_00020
 +Ñód_00020_±r, 
ªad_00020_Àn
 -Ñód_00020_±r, 
m©ch_00020_00000
, 10);

678 
	`cgc_‰ì
(
ªad_00020
);

679 i‡(
ªad_00020_±r
) {}

683 
wrôe_00023_00000
[] =

685 
wrôe_00023_00000_Àn
 = 5;

686 *
wrôe_00023
 = 
NULL
;

687 
wrôe_00023_Àn
 = 0;

688 
wrôe_00023
 = 
	`cgc_≠≥nd_buf
(wrôe_00023, &
wrôe_00023_Àn
, 
wrôe_00023_00000
, 
wrôe_00023_00000_Àn
);

689 i‡(
wrôe_00023_Àn
 > 0) {

690 
	`cgc_å™smô_Æl
(1, 
wrôe_00023
, 
wrôe_00023_Àn
);

692 
	`cgc_‰ì
(
wrôe_00023
);

695 *
ªad_00021
;

696 
ªad_00021_Àn
;

697 
ªad_00021_±r
 = 0;

699 
ªad_00021_dñim
[] =

701 
ªad_00021
 = 
NULL
;

702 
ªad_00021_Àn
 = 0;

703 
ªad_00021_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00021
, &
ªad_00021_Àn
, 
ªad_00021_dñim
, 1);

704 i‡(
ªad_00021_ªs
) {}

706 
m©ch_00021_00000
[] =

708 
ªad_00021_±r
 +
	`cgc_d©a_m©ch
(
ªad_00021
 +Ñód_00021_±r, 
ªad_00021_Àn
 -Ñód_00021_±r, 
m©ch_00021_00000
, 10);

709 
	`cgc_‰ì
(
ªad_00021
);

710 i‡(
ªad_00021_±r
) {}

714 
wrôe_00024_00000
[] =

716 
wrôe_00024_00000_Àn
 = 5;

717 *
wrôe_00024
 = 
NULL
;

718 
wrôe_00024_Àn
 = 0;

719 
wrôe_00024
 = 
	`cgc_≠≥nd_buf
(wrôe_00024, &
wrôe_00024_Àn
, 
wrôe_00024_00000
, 
wrôe_00024_00000_Àn
);

720 i‡(
wrôe_00024_Àn
 > 0) {

721 
	`cgc_å™smô_Æl
(1, 
wrôe_00024
, 
wrôe_00024_Àn
);

723 
	`cgc_‰ì
(
wrôe_00024
);

726 *
ªad_00022
;

727 
ªad_00022_Àn
;

728 
ªad_00022_±r
 = 0;

730 
ªad_00022_dñim
[] =

732 
ªad_00022
 = 
NULL
;

733 
ªad_00022_Àn
 = 0;

734 
ªad_00022_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00022
, &
ªad_00022_Àn
, 
ªad_00022_dñim
, 1);

735 i‡(
ªad_00022_ªs
) {}

737 
m©ch_00022_00000
[] =

739 
ªad_00022_±r
 +
	`cgc_d©a_m©ch
(
ªad_00022
 +Ñód_00022_±r, 
ªad_00022_Àn
 -Ñód_00022_±r, 
m©ch_00022_00000
, 10);

740 
	`cgc_‰ì
(
ªad_00022
);

741 i‡(
ªad_00022_±r
) {}

745 
wrôe_00025_00000
[] =

747 
wrôe_00025_00000_Àn
 = 5;

748 *
wrôe_00025
 = 
NULL
;

749 
wrôe_00025_Àn
 = 0;

750 
wrôe_00025
 = 
	`cgc_≠≥nd_buf
(wrôe_00025, &
wrôe_00025_Àn
, 
wrôe_00025_00000
, 
wrôe_00025_00000_Àn
);

751 i‡(
wrôe_00025_Àn
 > 0) {

752 
	`cgc_å™smô_Æl
(1, 
wrôe_00025
, 
wrôe_00025_Àn
);

754 
	`cgc_‰ì
(
wrôe_00025
);

757 *
ªad_00023
;

758 
ªad_00023_Àn
;

759 
ªad_00023_±r
 = 0;

761 
ªad_00023_dñim
[] =

763 
ªad_00023
 = 
NULL
;

764 
ªad_00023_Àn
 = 0;

765 
ªad_00023_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00023
, &
ªad_00023_Àn
, 
ªad_00023_dñim
, 1);

766 i‡(
ªad_00023_ªs
) {}

768 
m©ch_00023_00000
[] =

770 
ªad_00023_±r
 +
	`cgc_d©a_m©ch
(
ªad_00023
 +Ñód_00023_±r, 
ªad_00023_Àn
 -Ñód_00023_±r, 
m©ch_00023_00000
, 10);

771 
	`cgc_‰ì
(
ªad_00023
);

772 i‡(
ªad_00023_±r
) {}

776 
wrôe_00026_00000
[] =

778 
wrôe_00026_00000_Àn
 = 5;

779 *
wrôe_00026
 = 
NULL
;

780 
wrôe_00026_Àn
 = 0;

781 
wrôe_00026
 = 
	`cgc_≠≥nd_buf
(wrôe_00026, &
wrôe_00026_Àn
, 
wrôe_00026_00000
, 
wrôe_00026_00000_Àn
);

782 i‡(
wrôe_00026_Àn
 > 0) {

783 
	`cgc_å™smô_Æl
(1, 
wrôe_00026
, 
wrôe_00026_Àn
);

785 
	`cgc_‰ì
(
wrôe_00026
);

788 *
ªad_00024
;

789 
ªad_00024_Àn
;

790 
ªad_00024_±r
 = 0;

792 
ªad_00024_dñim
[] =

794 
ªad_00024
 = 
NULL
;

795 
ªad_00024_Àn
 = 0;

796 
ªad_00024_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00024
, &
ªad_00024_Àn
, 
ªad_00024_dñim
, 1);

797 i‡(
ªad_00024_ªs
) {}

799 
m©ch_00024_00000
[] =

801 
ªad_00024_±r
 +
	`cgc_d©a_m©ch
(
ªad_00024
 +Ñód_00024_±r, 
ªad_00024_Àn
 -Ñód_00024_±r, 
m©ch_00024_00000
, 10);

802 
	`cgc_‰ì
(
ªad_00024
);

803 i‡(
ªad_00024_±r
) {}

807 
wrôe_00027_00000
[] =

809 
wrôe_00027_00000_Àn
 = 5;

810 *
wrôe_00027
 = 
NULL
;

811 
wrôe_00027_Àn
 = 0;

812 
wrôe_00027
 = 
	`cgc_≠≥nd_buf
(wrôe_00027, &
wrôe_00027_Àn
, 
wrôe_00027_00000
, 
wrôe_00027_00000_Àn
);

813 i‡(
wrôe_00027_Àn
 > 0) {

814 
	`cgc_å™smô_Æl
(1, 
wrôe_00027
, 
wrôe_00027_Àn
);

816 
	`cgc_‰ì
(
wrôe_00027
);

819 *
ªad_00025
;

820 
ªad_00025_Àn
;

821 
ªad_00025_±r
 = 0;

823 
ªad_00025_dñim
[] =

825 
ªad_00025
 = 
NULL
;

826 
ªad_00025_Àn
 = 0;

827 
ªad_00025_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00025
, &
ªad_00025_Àn
, 
ªad_00025_dñim
, 1);

828 i‡(
ªad_00025_ªs
) {}

830 
m©ch_00025_00000
[] =

832 
ªad_00025_±r
 +
	`cgc_d©a_m©ch
(
ªad_00025
 +Ñód_00025_±r, 
ªad_00025_Àn
 -Ñód_00025_±r, 
m©ch_00025_00000
, 10);

833 
	`cgc_‰ì
(
ªad_00025
);

834 i‡(
ªad_00025_±r
) {}

838 
wrôe_00028_00000
[] =

840 
wrôe_00028_00000_Àn
 = 5;

841 *
wrôe_00028
 = 
NULL
;

842 
wrôe_00028_Àn
 = 0;

843 
wrôe_00028
 = 
	`cgc_≠≥nd_buf
(wrôe_00028, &
wrôe_00028_Àn
, 
wrôe_00028_00000
, 
wrôe_00028_00000_Àn
);

844 i‡(
wrôe_00028_Àn
 > 0) {

845 
	`cgc_å™smô_Æl
(1, 
wrôe_00028
, 
wrôe_00028_Àn
);

847 
	`cgc_‰ì
(
wrôe_00028
);

850 *
ªad_00026
;

851 
ªad_00026_Àn
;

852 
ªad_00026_±r
 = 0;

854 
ªad_00026_dñim
[] =

856 
ªad_00026
 = 
NULL
;

857 
ªad_00026_Àn
 = 0;

858 
ªad_00026_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00026
, &
ªad_00026_Àn
, 
ªad_00026_dñim
, 1);

859 i‡(
ªad_00026_ªs
) {}

861 
m©ch_00026_00000
[] =

863 
ªad_00026_±r
 +
	`cgc_d©a_m©ch
(
ªad_00026
 +Ñód_00026_±r, 
ªad_00026_Àn
 -Ñód_00026_±r, 
m©ch_00026_00000
, 10);

864 
	`cgc_‰ì
(
ªad_00026
);

865 i‡(
ªad_00026_±r
) {}

869 
wrôe_00029_00000
[] =

871 
wrôe_00029_00000_Àn
 = 5;

872 *
wrôe_00029
 = 
NULL
;

873 
wrôe_00029_Àn
 = 0;

874 
wrôe_00029
 = 
	`cgc_≠≥nd_buf
(wrôe_00029, &
wrôe_00029_Àn
, 
wrôe_00029_00000
, 
wrôe_00029_00000_Àn
);

875 i‡(
wrôe_00029_Àn
 > 0) {

876 
	`cgc_å™smô_Æl
(1, 
wrôe_00029
, 
wrôe_00029_Àn
);

878 
	`cgc_‰ì
(
wrôe_00029
);

881 *
ªad_00027
;

882 
ªad_00027_Àn
;

883 
ªad_00027_±r
 = 0;

885 
ªad_00027_dñim
[] =

887 
ªad_00027
 = 
NULL
;

888 
ªad_00027_Àn
 = 0;

889 
ªad_00027_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00027
, &
ªad_00027_Àn
, 
ªad_00027_dñim
, 1);

890 i‡(
ªad_00027_ªs
) {}

892 
m©ch_00027_00000
[] =

894 
ªad_00027_±r
 +
	`cgc_d©a_m©ch
(
ªad_00027
 +Ñód_00027_±r, 
ªad_00027_Àn
 -Ñód_00027_±r, 
m©ch_00027_00000
, 10);

895 
	`cgc_‰ì
(
ªad_00027
);

896 i‡(
ªad_00027_±r
) {}

900 
wrôe_00030_00000
[] =

902 
wrôe_00030_00000_Àn
 = 5;

903 *
wrôe_00030
 = 
NULL
;

904 
wrôe_00030_Àn
 = 0;

905 
wrôe_00030
 = 
	`cgc_≠≥nd_buf
(wrôe_00030, &
wrôe_00030_Àn
, 
wrôe_00030_00000
, 
wrôe_00030_00000_Àn
);

906 i‡(
wrôe_00030_Àn
 > 0) {

907 
	`cgc_å™smô_Æl
(1, 
wrôe_00030
, 
wrôe_00030_Àn
);

909 
	`cgc_‰ì
(
wrôe_00030
);

912 *
ªad_00028
;

913 
ªad_00028_Àn
;

914 
ªad_00028_±r
 = 0;

916 
ªad_00028_dñim
[] =

918 
ªad_00028
 = 
NULL
;

919 
ªad_00028_Àn
 = 0;

920 
ªad_00028_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00028
, &
ªad_00028_Àn
, 
ªad_00028_dñim
, 1);

921 i‡(
ªad_00028_ªs
) {}

923 
m©ch_00028_00000
[] =

925 
ªad_00028_±r
 +
	`cgc_d©a_m©ch
(
ªad_00028
 +Ñód_00028_±r, 
ªad_00028_Àn
 -Ñód_00028_±r, 
m©ch_00028_00000
, 10);

926 
	`cgc_‰ì
(
ªad_00028
);

927 i‡(
ªad_00028_±r
) {}

931 
wrôe_00031_00000
[] =

933 
wrôe_00031_00000_Àn
 = 5;

934 *
wrôe_00031
 = 
NULL
;

935 
wrôe_00031_Àn
 = 0;

936 
wrôe_00031
 = 
	`cgc_≠≥nd_buf
(wrôe_00031, &
wrôe_00031_Àn
, 
wrôe_00031_00000
, 
wrôe_00031_00000_Àn
);

937 i‡(
wrôe_00031_Àn
 > 0) {

938 
	`cgc_å™smô_Æl
(1, 
wrôe_00031
, 
wrôe_00031_Àn
);

940 
	`cgc_‰ì
(
wrôe_00031
);

944 
wrôe_00032_00000
[] =

946 
wrôe_00032_00000_Àn
 = 5;

947 *
wrôe_00032
 = 
NULL
;

948 
wrôe_00032_Àn
 = 0;

949 
wrôe_00032
 = 
	`cgc_≠≥nd_buf
(wrôe_00032, &
wrôe_00032_Àn
, 
wrôe_00032_00000
, 
wrôe_00032_00000_Àn
);

950 i‡(
wrôe_00032_Àn
 > 0) {

951 
	`cgc_å™smô_Æl
(1, 
wrôe_00032
, 
wrôe_00032_Àn
);

953 
	`cgc_‰ì
(
wrôe_00032
);

956 *
ªad_00029
;

957 
ªad_00029_Àn
;

958 
ªad_00029_±r
 = 0;

960 
ªad_00029_dñim
[] =

962 
ªad_00029
 = 
NULL
;

963 
ªad_00029_Àn
 = 0;

964 
ªad_00029_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00029
, &
ªad_00029_Àn
, 
ªad_00029_dñim
, 1);

965 i‡(
ªad_00029_ªs
) {}

966 
	`cgc_‰ì
(
ªad_00029
);

967 i‡(
ªad_00029_±r
) {}

970 *
ªad_00030
;

971 
ªad_00030_Àn
;

972 
ªad_00030_±r
 = 0;

974 
ªad_00030_dñim
[] =

976 
ªad_00030
 = 
NULL
;

977 
ªad_00030_Àn
 = 0;

978 
ªad_00030_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00030
, &
ªad_00030_Àn
, 
ªad_00030_dñim
, 1);

979 i‡(
ªad_00030_ªs
) {}

981 
m©ch_00030_00000
[] =

983 
ªad_00030_±r
 +
	`cgc_d©a_m©ch
(
ªad_00030
 +Ñód_00030_±r, 
ªad_00030_Àn
 -Ñód_00030_±r, 
m©ch_00030_00000
, 2);

984 
	`cgc_‰ì
(
ªad_00030
);

985 i‡(
ªad_00030_±r
) {}

987 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/pov_3/pov.c

1 
	~"libpov.h
"

2 
	$maö
(
cgc_¨gc
, *
cgc_¨gv
[]) {

3 
	`cgc_√gŸüã_ty≥1
(0x0, 0x0, 0);

6 
wrôe_00000_00000
[] =

8 
wrôe_00000_00000_Àn
 = 4;

9 *
wrôe_00000
 = 
NULL
;

10 
wrôe_00000_Àn
 = 0;

11 
wrôe_00000
 = 
	`cgc_≠≥nd_buf
(wrôe_00000, &
wrôe_00000_Àn
, 
wrôe_00000_00000
, 
wrôe_00000_00000_Àn
);

12 i‡(
wrôe_00000_Àn
 > 0) {

13 
	`cgc_å™smô_Æl
(1, 
wrôe_00000
, 
wrôe_00000_Àn
);

15 
	`cgc_‰ì
(
wrôe_00000
);

19 
wrôe_00001_00000
[] =

21 
wrôe_00001_00000_Àn
 = 5;

22 *
wrôe_00001
 = 
NULL
;

23 
wrôe_00001_Àn
 = 0;

24 
wrôe_00001
 = 
	`cgc_≠≥nd_buf
(wrôe_00001, &
wrôe_00001_Àn
, 
wrôe_00001_00000
, 
wrôe_00001_00000_Àn
);

25 i‡(
wrôe_00001_Àn
 > 0) {

26 
	`cgc_å™smô_Æl
(1, 
wrôe_00001
, 
wrôe_00001_Àn
);

28 
	`cgc_‰ì
(
wrôe_00001
);

32 
wrôe_00002_00000
[] =

34 
wrôe_00002_00000_Àn
 = 5;

35 *
wrôe_00002
 = 
NULL
;

36 
wrôe_00002_Àn
 = 0;

37 
wrôe_00002
 = 
	`cgc_≠≥nd_buf
(wrôe_00002, &
wrôe_00002_Àn
, 
wrôe_00002_00000
, 
wrôe_00002_00000_Àn
);

38 i‡(
wrôe_00002_Àn
 > 0) {

39 
	`cgc_å™smô_Æl
(1, 
wrôe_00002
, 
wrôe_00002_Àn
);

41 
	`cgc_‰ì
(
wrôe_00002
);

45 
wrôe_00003_00000
[] =

47 
wrôe_00003_00000_Àn
 = 5;

48 *
wrôe_00003
 = 
NULL
;

49 
wrôe_00003_Àn
 = 0;

50 
wrôe_00003
 = 
	`cgc_≠≥nd_buf
(wrôe_00003, &
wrôe_00003_Àn
, 
wrôe_00003_00000
, 
wrôe_00003_00000_Àn
);

51 i‡(
wrôe_00003_Àn
 > 0) {

52 
	`cgc_å™smô_Æl
(1, 
wrôe_00003
, 
wrôe_00003_Àn
);

54 
	`cgc_‰ì
(
wrôe_00003
);

57 *
ªad_00000
;

58 
ªad_00000_Àn
;

59 
ªad_00000_±r
 = 0;

61 
ªad_00000_dñim
[] =

63 
ªad_00000
 = 
NULL
;

64 
ªad_00000_Àn
 = 0;

65 
ªad_00000_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00000
, &
ªad_00000_Àn
, 
ªad_00000_dñim
, 1);

66 i‡(
ªad_00000_ªs
) {}

67 
	`cgc_‰ì
(
ªad_00000
);

68 i‡(
ªad_00000_±r
) {}

71 *
ªad_00001
;

72 
ªad_00001_Àn
;

73 
ªad_00001_±r
 = 0;

75 
ªad_00001_dñim
[] =

77 
ªad_00001
 = 
NULL
;

78 
ªad_00001_Àn
 = 0;

79 
ªad_00001_ªs
 = 
	`cgc_dñimôed_ªad
(0, &
ªad_00001
, &
ªad_00001_Àn
, 
ªad_00001_dñim
, 1);

80 i‡(
ªad_00001_ªs
) {}

82 
m©ch_00001_00000
[] =

84 
ªad_00001_±r
 +
	`cgc_d©a_m©ch
(
ªad_00001
 +Ñód_00001_±r, 
ªad_00001_Àn
 -Ñód_00001_±r, 
m©ch_00001_00000
, 2);

85 
	`cgc_‰ì
(
ªad_00001
);

86 i‡(
ªad_00001_±r
) {}

88 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/cgc_bits.h

1 #i‚de‡
BITS_H_


2 
	#BITS_H_


	)

4 
	~"cgc_°döt.h
"

6 
	#ABS
(
x
Ë((xË< 0 ? -(xË: (x))

	)

7 
	#NEG
(
x
Ë((xË< 0 ? 1 : 0)

	)

8 
	#MAX
(
x
, 
y
Ë((xË< (yË? (yË: (x))

	)

9 
	#MIN
(
x
, 
y
Ë((xË< (yË? (xË: (y))

	)

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/cgc_engine.h

1 #i‚de‡
ENGINE_H_


2 
	#ENGINE_H_


	)

4 
	~"cgc_°döt.h
"

7 
	mWHITE
,

8 
	mBLACK


12 
	mWHITE_WON
,

13 
	mBLACK_WON
,

14 
	mDRAW
,

15 
	mUNFINISHED


19 
	mPAWN
,

20 
	mKNIGHT
,

21 
	mBISHOP
,

22 
	mROOK
,

23 
	mQUEEN
,

24 
	mKING
,

25 
	mNUM_PIECES
 = 
KING
 + 1,

26 
	mEMPTY
 = 
NUM_PIECES


29 
uöt64_t
 
	tbbﬂrd_t
;

30 
uöt8_t
 
	tpõ˚_t
;

31 
	#PIECE_MASK
 0x0f

	)

32 
	#COLOR_SHIFT
 7

	)

33 
	#PIECE_COLOR
(
p
Ë((
põ˚_t
)’Ë>> 
COLOR_SHIFT
)

	)

35 
öt8_t
 
	m§
, 
	msc
, 
	mdr
, 
	mdc
;

36 
uöt8_t
 
	mp
, 
	m›
, 
	mˇp
, 
	m¥io
;

37 } 
	tmove_t
;

39 
cgc_ígöe_de°roy
();

40 
cgc_ígöe_gë_cgc_øndom
();

41 
cgc_ígöe_go
();

42 
cgc_ígöe_öô
();

43 
cgc_ígöe_move
(
move_t
 
move
);

44 
cgc_ígöe_√w
();

45 
cgc_ígöe_of„r_døw
();

46 
cgc_ígöe_ªsu…
();

47 
cgc_ígöe_£t_cﬁ‹
();

48 
cgc_ígöe_£t_dïth
();

49 
cgc_ígöe_£t_go
();

50 
cgc_ígöe_£t_cgc_øndom
();

51 
cgc_ígöe_undo
();

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/cgc_io.h

1 #i‚de‡
IO_H_


2 
	#IO_H_


	)

4 
	~"cgc_°dlib.h
"

5 
	~"cgc_ígöe.h
"

7 
	#DEFINE_STATE
(
n
, 
l
Ë
STATE_
##n##
_START
, STATE_##¿STATE_##n##_START+»- 2

	)

9 
	mSTATE_ERROR
 = 1,

10 
DEFINE_STATE
(
MOVE
, 5),

11 
DEFINE_STATE
(
BLACK
, 5),

12 
DEFINE_STATE
(
CGCBOARD
, 8),

13 
DEFINE_STATE
(
DRAW
, 4),

14 
DEFINE_STATE
(
FORCE
, 5),

15 
DEFINE_STATE
(
GO
, 2),

16 
DEFINE_STATE
(
NEW
, 3),

17 
DEFINE_STATE
(
QUIT
, 4),

18 
DEFINE_STATE
(
RANDOM
, 6),

19 
DEFINE_STATE
(
SD
, 2),

20 
DEFINE_STATE
(
UNDO
, 4),

21 
DEFINE_STATE
(
WHITE
, 5),

22 
	mSTATE_REMOVE_OR_RESULT_START
,

23 
	mSTATE_REMOVE_START
,

24 
	mSTATE_REMOVE
 = 
STATE_REMOVE_START
 + 3,

25 
	mSTATE_RESULT_START
,

26 
	mSTATE_RESULT
 = 
STATE_RESULT_START
 + 3,

27 
	mSTATE_PLAY_START
,

28 
	mSTATE_PLAY
 = 
STATE_PLAY_START


30 #unde‡
DEFINE_STATE


32 
cgc_öô_°©es
();

33 
cgc_ªad_Æl
(*
buf
, 
cgc_size_t
 
n
);

34 
cgc_ªad_keyw‹d
(*
öput
, 
cgc_size_t
 
n
);

35 
cgc_wrôe_°rög
(c⁄° *
°r
);

36 
cgc_£nd_move
(
move_t
 
move
);

37 
cgc_£nd_ªsu…
(
ªsu…
);

38 
cgc_£nd_døw
();

39 
cgc_£nd_ªsign
();

40 
cgc_£nd_ûÀgÆ
(c⁄° *
ªas⁄
, 
move_t
 
move
);

41 
cgc_£nd_îr‹
(c⁄° *
îr‹
, c⁄° *
comm™d
);

42 
cgc_sök_îr‹
(c⁄° *
buf
);

43 
move_t
 
cgc_°r_to_move
(c⁄° *
°r
);

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/engine.c

24 
	~<°dlib.h
>

26 
	~"cgc_°dlib.h
"

27 
	~"cgc_°rög.h
"

28 
	~"cgc_bôs.h
"

29 
	~"cgc_ígöe.h
"

30 
	~"cgc_io.h
"

32 
	#BIT
(
r
, 
c
Ë(1ULL << (‘Ë* 8 + (c)))

	)

33 
	#BIT_IF_VALID
(
r
, 
c
Ë(‘ >0 &&Ñ <7 && c >0 && c <7Ë? 
	`BIT
‘, cË: 0)

	)

34 
	#DRAW_THRESHOLD
 -200

	)

35 
	#MAX_MOVES_PER_DEPTH
 256

	)

36 
	#MAX_DEPTH
 8

	)

37 
	#SCORE_MIN
 -10000000

	)

38 
	#SCORE_MAX
 10000000

	)

40 c⁄° 
	gcgc_INITIAL_MAX_DEPTH
 = 3;

41 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_WHITE_PAWNS
 = 0x000000000000FF00ULL;

42 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_WHITE_ROOKS
 = 0x0000000000000081ULL;

43 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_WHITE_KNIGHTS
 = 0x0000000000000042ULL;

44 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_WHITE_BISHOPS
 = 0x0000000000000024ULL;

45 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_WHITE_QUEENS
 = 0x0000000000000008ULL;

46 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_WHITE_KINGS
 = 0x0000000000000010ULL;

47 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_BLACK_PAWNS
 = 0x00FF000000000000ULL;

48 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_BLACK_ROOKS
 = 0x8100000000000000ULL;

49 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_BLACK_KNIGHTS
 = 0x4200000000000000ULL;

50 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_BLACK_BISHOPS
 = 0x2400000000000000ULL;

51 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_BLACK_QUEENS
 = 0x0800000000000000ULL;

52 c⁄° 
bbﬂrd_t
 
	gcgc_INITIAL_BLACK_KINGS
 = 0x1000000000000000ULL;

53 
bbﬂrd_t
 
	gKING_MOVES
[64];

54 
bbﬂrd_t
 
	gKNIGHT_MOVES
[64];

55 
bbﬂrd_t
 
	gBISHOP_MOVES
[64];

56 c⁄° 
	gcgc_PIECE_SCORES
[
NUM_PIECES
] = {

57 [
PAWN
] = 100,

58 [
KNIGHT
] = 300,

59 [
BISHOP
] = 300,

60 [
ROOK
] = 500,

61 [
QUEEN
] = 900,

62 [
KING
] = 999999

67 
	ma˘ive
;

68 
	msc‹es
[2];

69 
	mcuºít_cﬁ‹
;

70 
	mgo
;

71 
	mmax_dïth
;

72 
	møndom
;

73 
move_t
 
	mœ°_move
;

74 
uöt8_t
 
	mnum_moves
[64];

75 
move_t
 
	mmoves
[64];

76 
move_t
 *
	mmoves_buf
;

77 
	mac˚±_døw
;

78 
	mcuºít_move
;

81 
uöt8_t
 
	mmaûbox
[64];

82 
bbﬂrd_t
 
	mÆl_põ˚s
;

83 
bbﬂrd_t
 
	mcﬁ‹_põ˚s
[2];

84 
bbﬂrd_t
 
	mpõ˚s
[
NUM_PIECES
][2];

85 } 
	tígöe_t
;

86 
ígöe_t
 *
	gígöe
;

88 #ifde‡
DEBUG


89 
	$põ˚_to_ch¨
(
uöt8_t
 
p
)

91 
cﬁ‹
 = 
	`PIECE_COLOR
(
p
) * 0x20;

92 
p
 & 
PIECE_MASK
)

94 
PAWN
:

95  'p' ^ 
cﬁ‹
;

96 
KNIGHT
:

97  'k' ^ 
cﬁ‹
;

98 
BISHOP
:

99  'b' ^ 
cﬁ‹
;

100 
ROOK
:

101  'r' ^ 
cﬁ‹
;

102 
QUEEN
:

103  'q' ^ 
cﬁ‹
;

104 
KING
:

105  'x' ^ 
cﬁ‹
;

108 
	}
}

110 
	$¥öt_bﬂrd
()

112 
r
, 
c
;

113 
	`Ârötf
(
°dîr
, "ábcdefgh\n");

114 
r
 = 7;Ñ >= 0;Ñ--)

116 
	`Ârötf
(
°dîr
, "%d ", 
r
 + 1);

117 
c
 = 0; c < 8; c++)

119 
	`Ârötf
(
°dîr
, "%c", 
	`põ˚_to_ch¨
(
ígöe
->
maûbox
[
r
 * 8 + 
c
]));

121 
	`Ârötf
(
°dîr
, "\n");

123 
	`Ârötf
(
°dîr
, "ábcdefgh\n");

124 
	}
}

126 
	$¥öt_bbﬂrd
(
bbﬂrd_t
 
b
)

128 
r
, 
c
;

129 
	`Ârötf
(
°dîr
, "ábcdefgh\n");

130 
r
 = 7;Ñ >= 0;Ñ--)

132 
	`Ârötf
(
°dîr
, "%d ", 
r
 + 1);

133 
c
 = 0; c < 8; c++)

135 
	`Ârötf
(
°dîr
, "%c", 
b
 & 
	`BIT
(
r
, 
c
) ? 'x' : ' ');

137 
	`Ârötf
(
°dîr
, "\n");

139 
	`Ârötf
(
°dîr
, "ábcdefgh\n");

140 
	}
}

142 
	$ßnôy_check_bﬂrd
()

144 
r
, 
c
, 
bad
 = 0;

146 
r
 = 0;Ñ < 8;Ñ++)

147 
c
 = 0; c < 8; c++)

149 
uöt8_t
 
p
;

150 
p
 = 0;Ö < 
NUM_PIECES
;Ö++)

152 i‡(
ígöe
->
põ˚s
[
p
][
WHITE
] & 
	`BIT
(
r
, 
c
))

154 i‡(
ígöe
->
maûbox
[
r
 * 8 + 
c
] !(
p
 | (
WHITE
 << 
COLOR_SHIFT
)))

155 
bad
 |= 1 << 0;

156 i‡(!(
ígöe
->
Æl_põ˚s
 & 
	`BIT
(
r
, 
c
)))

157 
bad
 |= 1 << 1;

158 i‡(!(
ígöe
->
cﬁ‹_põ˚s
[
WHITE
] & 
	`BIT
(
r
, 
c
)))

159 
bad
 |= 1 << 2;

161 i‡(
ígöe
->
põ˚s
[
p
][
BLACK
] & 
	`BIT
(
r
, 
c
))

163 i‡(
ígöe
->
maûbox
[
r
 * 8 + 
c
] !(
p
 | (
BLACK
 << 
COLOR_SHIFT
)))

164 
bad
 |= 1 << 3;

165 i‡(!(
ígöe
->
Æl_põ˚s
 & 
	`BIT
(
r
, 
c
)))

166 
bad
 |= 1 << 4;

167 i‡(!(
ígöe
->
cﬁ‹_põ˚s
[
BLACK
] & 
	`BIT
(
r
, 
c
)))

168 
bad
 |= 1 << 5;

172 i‡(
ígöe
->
maûbox
[
r
 * 8 + 
c
] =
EMPTY
)

174 i‡(
ígöe
->
Æl_põ˚s
 & 
	`BIT
(
r
, 
c
))

175 
bad
 |= 1 << 6;

176 i‡(
ígöe
->
cﬁ‹_põ˚s
[
WHITE
] & 
	`BIT
(
r
, 
c
))

177 
bad
 |= 1 << 7;

178 i‡(
ígöe
->
cﬁ‹_põ˚s
[
BLACK
] & 
	`BIT
(
r
, 
c
))

179 
bad
 |= 1 << 8;

183 i‡(
bad
)

185 
	`Ârötf
(
°dîr
, "SANITY BAD (%08X)!\n", 
bad
);

186 
	`Ârötf
(
°dîr
, "%016Œx\n", 
ígöe
->
cﬁ‹_põ˚s
[
WHITE
]);

187 
	`¥öt_bbﬂrd
(
ígöe
->
cﬁ‹_põ˚s
[
WHITE
]);

188 
	`Ârötf
(
°dîr
, "%016Œx\n", 
ígöe
->
cﬁ‹_põ˚s
[
BLACK
]);

189 
	`¥öt_bbﬂrd
(
ígöe
->
cﬁ‹_põ˚s
[
BLACK
]);

190 
	`Ârötf
(
°dîr
, "%016Œx\n", 
ígöe
->
Æl_põ˚s
);

191 
	`¥öt_bbﬂrd
(
ígöe
->
Æl_põ˚s
);

193 
	}
}

196 
	$cgc_ígöe_de°roy
()

198 i‡(
ígöe
)

201 
	`‰ì
(
ígöe
->
moves_buf
);

203 
	`‰ì
(
ígöe
);

204 
ígöe
 = 
NULL
;

206 
	}
}

208 
	$cgc_ígöe_öô
()

210 
r
, 
c
;

213 
ígöe
 = 
	`mÆloc
((
ígöe_t
));

214 i‡(
ígöe
 =
NULL
)

216 
	`cgc_mem£t
(
ígöe
, 0, (
ígöe_t
));

217 
	`cgc_mem£t
(
ígöe
->
maûbox
, 
EMPTY
, 64);

219 
r
 = 0;Ñ < 8;Ñ++)

220 
c
 = 0; c < 8; c++)

222 
bbﬂrd_t
 
moves
 = 0;

224 
moves
 |
	`BIT_IF_VALID
(
r
-2, 
c
-1);

225 
moves
 |
	`BIT_IF_VALID
(
r
-1, 
c
-2);

226 
moves
 |
	`BIT_IF_VALID
(
r
-2, 
c
+1);

227 
moves
 |
	`BIT_IF_VALID
(
r
-1, 
c
+2);

228 
moves
 |
	`BIT_IF_VALID
(
r
+2, 
c
-1);

229 
moves
 |
	`BIT_IF_VALID
(
r
+1, 
c
-2);

230 
moves
 |
	`BIT_IF_VALID
(
r
+2, 
c
+1);

231 
moves
 |
	`BIT_IF_VALID
(
r
+1, 
c
+2);

233 
KNIGHT_MOVES
[
r
 * 8 + 
c
] = 
moves
;

235 
moves
 = 0;

236 
moves
 |
	`BIT_IF_VALID
(
r
-1, 
c
-1);

237 
moves
 |
	`BIT_IF_VALID
(
r
-1, 
c
);

238 
moves
 |
	`BIT_IF_VALID
(
r
-1, 
c
+1);

239 
moves
 |
	`BIT_IF_VALID
(
r
, 
c
-1);

240 
moves
 |
	`BIT_IF_VALID
(
r
, 
c
+1);

241 
moves
 |
	`BIT_IF_VALID
(
r
+1, 
c
-1);

242 
moves
 |
	`BIT_IF_VALID
(
r
+1, 
c
);

243 
moves
 |
	`BIT_IF_VALID
(
r
+1, 
c
+1);

245 
KING_MOVES
[
r
 * 8 + 
c
] = 
moves
;

248 
r
 = 0;Ñ < 8;Ñ++)

249 
c
 = 0; c < 8; c++)

251 
i
;

252 
bbﬂrd_t
 
moves
 = 0;

254 
i
 = 0; i < 8; i++)

256 
moves
 |
	`BIT_IF_VALID
(
r
-
i
, 
c
-i);

257 
moves
 |
	`BIT_IF_VALID
(
r
+
i
, 
c
+i);

260 
BISHOP_MOVES
[
r
 * 8 + 
c
] = 
moves
;

264 
ígöe
->
moves_buf
 = 
	`mÆloc
(
MAX_DEPTH
 * 
MAX_MOVES_PER_DEPTH
 * (
move_t
));

265 i‡(
ígöe
->
moves_buf
 =
NULL
)

268 
	`‰ì
(
ígöe
);

273 
	}
}

275 
	$cgc_ígöe_√w
()

277 
uöt8_t
 
r
, 
c
;

278 
ígöe
->
cuºít_cﬁ‹
 = 
WHITE
;

279 
ígöe
->
max_dïth
 = 
cgc_INITIAL_MAX_DEPTH
;

280 
ígöe
->
go
 = 1;

281 
ígöe
->
øndom
 = 0;

282 
ígöe
->
a˘ive
 = 1;

284 
ígöe
->
põ˚s
[
PAWN
][
WHITE
] = 
cgc_INITIAL_WHITE_PAWNS
;

285 
ígöe
->
põ˚s
[
KNIGHT
][
WHITE
] = 
cgc_INITIAL_WHITE_KNIGHTS
;

286 
ígöe
->
põ˚s
[
BISHOP
][
WHITE
] = 
cgc_INITIAL_WHITE_BISHOPS
;

287 
ígöe
->
põ˚s
[
ROOK
][
WHITE
] = 
cgc_INITIAL_WHITE_ROOKS
;

288 
ígöe
->
põ˚s
[
QUEEN
][
WHITE
] = 
cgc_INITIAL_WHITE_QUEENS
;

289 
ígöe
->
põ˚s
[
KING
][
WHITE
] = 
cgc_INITIAL_WHITE_KINGS
;

291 
ígöe
->
põ˚s
[
PAWN
][
BLACK
] = 
cgc_INITIAL_BLACK_PAWNS
;

292 
ígöe
->
põ˚s
[
KNIGHT
][
BLACK
] = 
cgc_INITIAL_BLACK_KNIGHTS
;

293 
ígöe
->
põ˚s
[
BISHOP
][
BLACK
] = 
cgc_INITIAL_BLACK_BISHOPS
;

294 
ígöe
->
põ˚s
[
ROOK
][
BLACK
] = 
cgc_INITIAL_BLACK_ROOKS
;

295 
ígöe
->
põ˚s
[
QUEEN
][
BLACK
] = 
cgc_INITIAL_BLACK_QUEENS
;

296 
ígöe
->
põ˚s
[
KING
][
BLACK
] = 
cgc_INITIAL_BLACK_KINGS
;

298 
ígöe
->
cﬁ‹_põ˚s
[
WHITE
] = 0x000000000000FFFFULL;

299 
ígöe
->
cﬁ‹_põ˚s
[
BLACK
] = 0xFFFF000000000000ULL;

300 
ígöe
->
Æl_põ˚s
 = 0xFFFF00000000FFFFULL;

303 
ígöe
->
sc‹es
[
WHITE
] = 0;

304 
ígöe
->
sc‹es
[
BLACK
] = 0;

305 
	`cgc_mem£t
(
ígöe
->
maûbox
, 
EMPTY
, 64);

306 
r
 = 0;Ñ < 8;Ñ++)

307 
c
 = 0; c < 8; c++)

309 
uöt8_t
 
p
;

310 
p
 = 0;Ö < 
NUM_PIECES
;Ö++)

312 i‡(
ígöe
->
põ˚s
[
p
][
WHITE
] & 
	`BIT
(
r
, 
c
))

314 
ígöe
->
maûbox
[
r
 * 8 + 
c
] = 
p
 | (
WHITE
 << 
COLOR_SHIFT
);

315 
ígöe
->
sc‹es
[
WHITE
] +
cgc_PIECE_SCORES
[
p
];

318 i‡(
ígöe
->
põ˚s
[
p
][
BLACK
] & 
	`BIT
(
r
, 
c
))

320 
ígöe
->
maûbox
[
r
 * 8 + 
c
] = 
p
 | (
BLACK
 << 
COLOR_SHIFT
);

321 
ígöe
->
sc‹es
[
BLACK
] +
cgc_PIECE_SCORES
[
p
];

327 
ígöe
->
œ°_move
.
›
 = 
EMPTY
;

328 
	`cgc_mem£t
(
ígöe
->
num_moves
, 0, 64);

329 
ígöe
->
cuºít_move
 = 0;

330 
ígöe
->
ac˚±_døw
 = 0;

331 
	}
}

333 
ölöe
 
bbﬂrd_t
 
	$ã°_fûe
(
uöt8_t
 
cﬁumn
, uöt8_à
mö_y
, uöt8_à
abs_dy
)

335  (0x0101010101010100ULL << (
cﬁumn
 + 8 * (8 - 
abs_dy
))Ë>> (8 * (8 -ábs_dy - 
mö_y
));

336 
	}
}

338 
ölöe
 
bbﬂrd_t
 
	$ã°_ønk
(
uöt8_t
 
row
, uöt8_à
mö_x
, uöt8_à
abs_dx
)

340  (
bbﬂrd_t
)(0x7F >> (8 - 
abs_dx
)Ë<< (
mö_x
 + 1 + 8 * 
row
);

341 
	}
}

344 
bbﬂrd_t
 
	$cgc_ˇlcuœã_©ècks
(
cﬁ‹
)

346 
i
, 
p
;

347 
bbﬂrd_t
 
b
, 
ªsu…
 = 0;

350 i‡(
cﬁ‹
 =
WHITE
)

352 
ªsu…
 |(
ígöe
->
põ˚s
[
PAWN
][
WHITE
] & 0x7f7f7f7f7f7f7f7fULL) << 9;

353 
ªsu…
 |(
ígöe
->
põ˚s
[
PAWN
][
WHITE
] & 0xfefefefefefefefeULL) << 7;

357 
ªsu…
 |(
ígöe
->
põ˚s
[
PAWN
][
BLACK
] & 0x7f7f7f7f7f7f7f7fULL) >> 7;

358 
ªsu…
 |(
ígöe
->
põ˚s
[
PAWN
][
BLACK
] & 0xfefefefefefefefeULL) >> 9;

362 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
KNIGHT
][
cﬁ‹
]; b !0 &&Ö < 63; b >>
i
 + 1)

364 
i
 = 
	`__buûtö_˘zŒ
(
b
);

365 
p
 +
i
 + 1;

366 
ªsu…
 |
KNIGHT_MOVES
[
p
];

370 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
ROOK
][
cﬁ‹
] |Éngöe->põ˚s[
QUEEN
][cﬁ‹]; b !0 &&Ö < 63; b >>
i
 + 1)

372 
bbﬂrd_t
 
bô
;

373 
r
, 
c
, 
j
;

375 
i
 = 
	`__buûtö_˘zŒ
(
b
);

376 
p
 +
i
 + 1;

378 
r
 = 
p
 / 8;

379 
c
 = 
p
 % 8;

381 
j
 = 
c
+1, 
bô
 = 1ULL << (
r
 * 8 + c + 1); j < 8; j++, bit <<= 1)

383 
ªsu…
 |
bô
;

384 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

387 
j
 = 
c
-1, 
bô
 = 1ULL << (
r
 * 8 + c - 1); j >= 0; j--, bit >>= 1)

389 
ªsu…
 |
bô
;

390 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

393 
j
 = 
r
+1, 
bô
 = 1ULL << (‘+1Ë* 8 + 
c
); j < 8; j++, bit <<= 8)

395 
ªsu…
 |
bô
;

396 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

399 
j
 = 
r
-1, 
bô
 = 1ULL << (‘-1Ë* 8 + 
c
); j >= 0; j--, bit >>= 8)

401 
ªsu…
 |
bô
;

402 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

408 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
BISHOP
][
cﬁ‹
] |Éngöe->põ˚s[
QUEEN
][cﬁ‹]; b !0 &&Ö < 63; b >>
i
 + 1)

410 
bbﬂrd_t
 
bô
;

411 
r
, 
c
;

413 
i
 = 
	`__buûtö_˘zŒ
(
b
);

414 
p
 +
i
 + 1;

416 
r
 = 
p
 / 8 + 1;

417 
c
 = 
p
 % 8 + 1;

418 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ < 8 && c < 8;Ñ++, c++, bit <<= 9)

420 
ªsu…
 |
bô
;

421 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

425 
r
 = 
p
 / 8 - 1;

426 
c
 = 
p
 % 8 + 1;

427 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ >= 0 && c < 8;Ñ--, c++, bit >>= 7)

429 
ªsu…
 |
bô
;

430 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

434 
r
 = 
p
 / 8 + 1;

435 
c
 = 
p
 % 8 - 1;

436 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ < 8 && c >= 0;Ñ++, c--, bit <<= 7)

438 
ªsu…
 |
bô
;

439 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

443 
r
 = 
p
 / 8 - 1;

444 
c
 = 
p
 % 8 - 1;

445 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ >= 0 && c >= 0;Ñ--, c--, bit >>= 9)

447 
ªsu…
 |
bô
;

448 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

454 
ªsu…
 |
KING_MOVES
[
	`__buûtö_˘zŒ
(
ígöe
->
põ˚s
[
KING
][
cﬁ‹
])];

456  
ªsu…
;

457 
	}
}

459 
	$vÆid_move
(
move_t
 
move
, 
põ˚_t
 
põ˚
)

461 
abs_dy
 = 
	`ABS
(
move
.
dr
 - move.
§
),

462 
abs_dx
 = 
	`ABS
(
move
.
dc
 - move.
sc
),

463 
√g_dy
 = 
	`NEG
(
move
.
dr
 - move.
§
),

464 
√g_dx
 = 
	`NEG
(
move
.
dc
 - move.
sc
),

465 
mö_y
 = 
	`MIN
(
move
.
§
, move.
dr
),

466 
mö_x
 = 
	`MIN
(
move
.
sc
, move.
dc
),

467 
cﬁ‹
 = 
	`PIECE_COLOR
(
põ˚
);

469 i‡(
abs_dx
 =0 && 
abs_dy
 == 0)

472 i‡(
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] & 
	`BIT
(
move
.
dr
, move.
dc
))

475 i‡(
	`PIECE_COLOR
(
põ˚
Ë!
ígöe
->
cuºít_cﬁ‹
)

478 
põ˚
 & 
PIECE_MASK
)

480 
PAWN
:

482 i‡(
cﬁ‹
 =
WHITE
 && 
√g_dy
)

484 i‡(
cﬁ‹
 =
BLACK
 && !
√g_dy
)

487 i‡(
abs_dx
 =0 && 
abs_dy
 == 1)

488  !(
ígöe
->
Æl_põ˚s
 & 
	`BIT
(
move
.
dr
, move.
dc
));

490 i‡(
abs_dx
 =0 && 
abs_dy
 == 2)

492 i‡(
cﬁ‹
 =
WHITE
 && 
move
.
§
 == 1)

493  !(
ígöe
->
Æl_põ˚s
 & (
	`BIT
(
move
.
§
 + 1, move.
sc
) | BIT(move.sr + 2, move.sc)));

494 i‡(
cﬁ‹
 =
BLACK
 && 
move
.
§
 == 6)

495  !(
ígöe
->
Æl_põ˚s
 & (
	`BIT
(
move
.
§
 - 1, move.
sc
) | BIT(move.sr - 2, move.sc)));

499 i‡(
abs_dx
 =1 && 
abs_dy
 == 1)

502 #ifde‡
ENPASSANT


503 i‡((
ígöe
->
œ°_move
.
›
 & 
PIECE_MASK
Ë=
PAWN
 &&

504 
	`ABS
(
ígöe
->
œ°_move
.
§
 -Éngöe->œ°_move.
dr
) == 2 &&

505 
ígöe
->
œ°_move
.
sc
 =
move
.
dc
)

507  (!
cﬁ‹
 =
WHITE
 && 
ígöe
->
œ°_move
.
§
 + 1 =
move
.
dr
Ë|| (!cﬁ‹ =
BLACK
 &&Éngine->last_move.sr - 1 == move.dr);

511  !!(
ígöe
->
Æl_põ˚s
 & 
	`BIT
(
move
.
dr
, move.
dc
));

514 
KNIGHT
:

515  (
abs_dx
 =1 && 
abs_dy
 == 2) || (abs_dx == 2 &&ábs_dy == 1);

516 
BISHOP
:

517 i‡(
abs_dx
 !
abs_dy
)

519 i‡(
√g_dx
 =
√g_dy
)

521 
bbﬂrd_t
 
mask
 = (0x0040201008040201ULL >> ((8 - 
abs_dy
Ë* 8)Ë<< ((1 + 
mö_y
Ë* 8 - (7 - (
abs_dx
 + 
mö_x
)));

522 i‡(
ígöe
->
Æl_põ˚s
 & 
mask
)

529 
bbﬂrd_t
 
mask
 = (0x0002040810204080ULL >> ((8 - 
abs_dy
Ë* 8)Ë<< ((1 + 
mö_y
Ë* 8 + 
mö_x
);

530 i‡(
ígöe
->
Æl_põ˚s
 & 
mask
)

536 
ROOK
:

537 i‡(
abs_dx
 == 0)

542 i‡(
ígöe
->
Æl_põ˚s
 & 
	`ã°_fûe
(
move
.
sc
, 
mö_y
, 
abs_dy
))

547 i‡(
abs_dy
 == 0)

552 i‡(
ígöe
->
Æl_põ˚s
 & 
	`ã°_ønk
(
move
.
§
, 
mö_x
, 
abs_dx
))

559 
QUEEN
:

560 i‡(
abs_dx
 == 0)

563 i‡(
ígöe
->
Æl_põ˚s
 & 
	`ã°_fûe
(
move
.
sc
, 
mö_y
, 
abs_dy
))

568 i‡(
abs_dy
 == 0)

571 i‡(
ígöe
->
Æl_põ˚s
 & 
	`ã°_ønk
(
move
.
§
, 
mö_x
, 
abs_dx
))

576 i‡(
abs_dy
 =
abs_dx
)

578 i‡(
√g_dx
 =
√g_dy
)

580 
bbﬂrd_t
 
mask
 = (0x0040201008040201ULL >> ((8 - 
abs_dy
Ë* 8)Ë<< ((1 + 
mö_y
Ë* 8 - (7 - (
abs_dx
 + 
mö_x
)));

581 i‡(
ígöe
->
Æl_põ˚s
 & 
mask
)

588 
bbﬂrd_t
 
mask
 = (0x0002040810204080ULL >> ((8 - 
abs_dy
Ë* 8)Ë<< ((1 + 
mö_y
Ë* 8 + 
mö_x
);

589 i‡(
ígöe
->
Æl_põ˚s
 & 
mask
)

597 
KING
:

599 i‡(
abs_dx
 <1 && 
abs_dy
 <= 1)

602 i‡(
abs_dx
 =2 && 
abs_dy
 =0 && 
move
.
sc
 =4 && ((
cﬁ‹
 =
WHITE
 && move.
§
 =0Ë|| (cﬁ‹ =
BLACK
 && move.sr == 7)))

604 
bbﬂrd_t
 
©ècks
;

605 
rook
;

607 
©ècks
 = 
	`cgc_ˇlcuœã_©ècks
(!
cﬁ‹
);

609 i‡(
move
.
dc
 == 2)

611 i‡(
©ècks
 & (
	`BIT
(
move
.
§
, 1) | BIT(move.sr, 2)))

613 i‡(
ígöe
->
Æl_põ˚s
 & (
	`BIT
(
move
.
§
, 1) | BIT(move.sr, 2) | BIT(move.sr, 3)))

615 
rook
 = 0;

619 i‡(
©ècks
 & (
	`BIT
(
move
.
§
, 5) | BIT(move.sr, 6)))

621 i‡(
ígöe
->
Æl_põ˚s
 & (
	`BIT
(
move
.
§
, 5) | BIT(move.sr, 6)))

623 
rook
 = 7;

627 i‡(
ígöe
->
num_moves
[
move
.
§
 * 8 + move.
sc
] !0 ||Éngöe->num_moves[move.§ * 8 + 
rook
] != 0)

635 
	}
}

640 
	$vÆid_bﬂrd
()

642 
bbﬂrd_t
 
©ècks
;

643 
¥ev_cﬁ‹
 = !
ígöe
->
cuºít_cﬁ‹
;

646 
©ècks
 = 
	`cgc_ˇlcuœã_©ècks
(
ígöe
->
cuºít_cﬁ‹
);

647 i‡(
©ècks
 & 
ígöe
->
põ˚s
[
KING
][
¥ev_cﬁ‹
])

651 
	}
}

653 
	$cgc_≠∂y_move
(
move_t
 
move
, 
põ˚_t
 
põ˚
)

655 
bbﬂrd_t
 
bô_d
 = 
	`BIT
(
move
.
dr
, move.
dc
),

656 
bô_s
 = 
	`BIT
(
move
.
§
, move.
sc
);

657 
cﬁ‹
 = 
	`PIECE_COLOR
(
põ˚
), 
p
 = 
PIECE_MASK
 &Öiece;

659 
ígöe
->
põ˚s
[
p
][
cﬁ‹
] = (ígöe->põ˚s[p][cﬁ‹] & ~
bô_s
Ë| 
bô_d
;

660 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] = (ígöe->cﬁ‹_põ˚s[cﬁ‹] & ~
bô_s
Ë| 
bô_d
;

661 
ígöe
->
Æl_põ˚s
 = (ígöe->Æl_põ˚†& ~
bô_s
Ë| 
bô_d
;

663 i‡(
ígöe
->
cﬁ‹_põ˚s
[!
cﬁ‹
] & 
bô_d
)

665 
íemy_p
 = 
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
] & 
PIECE_MASK
;

668 
ígöe
->
põ˚s
[
íemy_p
][!
cﬁ‹
] &~
bô_d
;

669 
ígöe
->
cﬁ‹_põ˚s
[!
cﬁ‹
] &~
bô_d
;

670 
move
.
ˇp
 = 
íemy_p
 | 0x40;

672 
ígöe
->
sc‹es
[!
cﬁ‹
] -
cgc_PIECE_SCORES
[
íemy_p
];

677 #ifde‡
ENPASSANT


678 i‡(
p
 =
PAWN
 && 
	`ABS
(
move
.
dc
 - move.
sc
) == 1)

681 
bbﬂrd_t
 
íemy_d
 = 
	`BIT
(
ígöe
->
œ°_move
.
dr
,Éngöe->œ°_move.
dc
);

682 
ígöe
->
põ˚s
[
PAWN
][!
cﬁ‹
] &~
íemy_d
;

683 
ígöe
->
cﬁ‹_põ˚s
[!
cﬁ‹
] &~
íemy_d
;

684 
ígöe
->
Æl_põ˚s
 &~
íemy_d
;

685 
ígöe
->
maûbox
[ígöe->
œ°_move
.
dr
 * 8 +Éngöe->œ°_move.
dc
] = 
EMPTY
;

686 
move
.
ˇp
 = 
PAWN
 | 0xc0;

688 
ígöe
->
sc‹es
[!
cﬁ‹
] -
PIECE_SCORES
[
PAWN
];

693 
move
.
ˇp
 = 0;

697 
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
] = 
põ˚
;

698 
ígöe
->
maûbox
[
move
.
§
 * 8 + move.
sc
] = 
EMPTY
;

701 i‡(
p
 =
KING
 && 
	`ABS
(
move
.
dc
 - move.
sc
) == 2)

703 i‡(
move
.
dc
 == 2)

705 
ígöe
->
põ˚s
[
ROOK
][
cﬁ‹
] = (ígöe->põ˚s[ROOK][cﬁ‹] & ~
	`BIT
(
move
.
dr
, 0)) | BIT(move.dr, 3);

706 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] = (ígöe->cﬁ‹_põ˚s[cﬁ‹] & ~
	`BIT
(
move
.
dr
, 0)) | BIT(move.dr, 3);

707 
ígöe
->
Æl_põ˚s
 = (ígöe->Æl_põ˚†& ~
	`BIT
(
move
.
dr
, 0)) | BIT(move.dr, 3);

708 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 0] = 
EMPTY
;

709 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 3] = (
cﬁ‹
 << 
COLOR_SHIFT
Ë| 
ROOK
;

713 
ígöe
->
põ˚s
[
ROOK
][
cﬁ‹
] = (ígöe->põ˚s[ROOK][cﬁ‹] & ~
	`BIT
(
move
.
dr
, 7)) | BIT(move.dr, 5);

714 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] = (ígöe->cﬁ‹_põ˚s[cﬁ‹] & ~
	`BIT
(
move
.
dr
, 7)) | BIT(move.dr, 5);

715 
ígöe
->
Æl_põ˚s
 = (ígöe->Æl_põ˚†& ~
	`BIT
(
move
.
dr
, 7)) | BIT(move.dr, 5);

716 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 7] = 
EMPTY
;

717 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 5] = (
cﬁ‹
 << 
COLOR_SHIFT
Ë| 
ROOK
;

723 
ígöe
->
œ°_move
 = 
move
;

724 
ígöe
->
œ°_move
.
›
 = 
põ˚
;

725 
ígöe
->
num_moves
[
move
.
§
 * 8 + move.
sc
]++;

726 #ifde‡
PATCHED


727 i‡(
ígöe
->
cuºít_move
 =”ngöe->
moves
) / (engine->moves[0]))

729 
ígöe
->
a˘ive
 = 0;

733 
ígöe
->
moves
[ígöe->
cuºít_move
++] = 
move
;

734 
ígöe
->
cuºít_cﬁ‹
 = !engine->current_color;

735 
	}
}

737 
	$cgc_undo_move
()

739 
move_t
 
move
 = 
ígöe
->
œ°_move
;

740 
põ˚_t
 
põ˚
 = 
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
];

741 
bbﬂrd_t
 
bô_d
 = 
	`BIT
(
move
.
dr
, move.
dc
),

742 
bô_s
 = 
	`BIT
(
move
.
§
, move.
sc
);

743 
cﬁ‹
 = 
	`PIECE_COLOR
(
põ˚
), 
p
 = 
PIECE_MASK
 &Öiece;

745 i‡(
ígöe
->
cuºít_move
 <= 0)

751 i‡(
p
 =
KING
 && 
	`ABS
(
move
.
dc
 - move.
sc
) == 2)

753 i‡(
move
.
dc
 == 2)

755 
ígöe
->
põ˚s
[
ROOK
][
cﬁ‹
] = (ígöe->põ˚s[ROOK][cﬁ‹] & ~
	`BIT
(
move
.
dr
, 3)) | BIT(move.dr, 0);

756 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] = (ígöe->cﬁ‹_põ˚s[cﬁ‹] & ~
	`BIT
(
move
.
dr
, 3)) | BIT(move.dr, 0);

757 
ígöe
->
Æl_põ˚s
 = (ígöe->Æl_põ˚†& ~
	`BIT
(
move
.
dr
, 3)) | BIT(move.dr, 0);

758 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 3] = 
EMPTY
;

759 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 0] = (
cﬁ‹
 << 
COLOR_SHIFT
Ë| 
ROOK
;

763 
ígöe
->
põ˚s
[
ROOK
][
cﬁ‹
] = (ígöe->põ˚s[ROOK][cﬁ‹] & ~
	`BIT
(
move
.
dr
, 5)) | BIT(move.dr, 7);

764 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] = (ígöe->cﬁ‹_põ˚s[cﬁ‹] & ~
	`BIT
(
move
.
dr
, 5)) | BIT(move.dr, 7);

765 
ígöe
->
Æl_põ˚s
 = (ígöe->Æl_põ˚†& ~
	`BIT
(
move
.
dr
, 5)) | BIT(move.dr, 7);

766 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 5] = 
EMPTY
;

767 
ígöe
->
maûbox
[
move
.
dr
 * 8 + 7] = (
cﬁ‹
 << 
COLOR_SHIFT
Ë| 
ROOK
;

771 
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
] = 
EMPTY
;

772 
ígöe
->
maûbox
[
move
.
§
 * 8 + move.
sc
] = 
põ˚
;

774 
ígöe
->
põ˚s
[
p
][
cﬁ‹
] = (ígöe->põ˚s[p][cﬁ‹] & ~
bô_d
Ë| 
bô_s
;

775 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
] = (ígöe->cﬁ‹_põ˚s[cﬁ‹] & ~
bô_d
Ë| 
bô_s
;

776 
ígöe
->
Æl_põ˚s
 = (ígöe->Æl_põ˚†& ~
bô_d
Ë| 
bô_s
;

778 i‡(
move
.
ˇp
 & 0x40)

780 i‡(
move
.
ˇp
 & 0x80)

782 
íemy_r
;

783 i‡(
move
.
dr
 == 2)

784 
íemy_r
 = 3;

786 
íemy_r
 = 4;

787 
ígöe
->
põ˚s
[
PAWN
][!
cﬁ‹
] |
	`BIT
(
íemy_r
, 
move
.
dc
);

788 
ígöe
->
cﬁ‹_põ˚s
[!
cﬁ‹
] |
	`BIT
(
íemy_r
, 
move
.
dc
);

789 
ígöe
->
Æl_põ˚s
 |
	`BIT
(
íemy_r
, 
move
.
dc
);

790 
ígöe
->
maûbox
[
íemy_r
 * 8 + 
move
.
dc
] = (!
cﬁ‹
 << 
COLOR_SHIFT
Ë| 
PAWN
;

792 
ígöe
->
sc‹es
[!
cﬁ‹
] +
cgc_PIECE_SCORES
[
PAWN
];

796 
íemy_p
 = 
move
.
ˇp
 & 
PIECE_MASK
;

797 
ígöe
->
põ˚s
[
íemy_p
][!
cﬁ‹
] |
bô_d
;

798 
ígöe
->
cﬁ‹_põ˚s
[!
cﬁ‹
] |
bô_d
;

799 
ígöe
->
Æl_põ˚s
 |
bô_d
;

800 
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
] = (!
cﬁ‹
 << 
COLOR_SHIFT
Ë| 
íemy_p
;

802 
ígöe
->
sc‹es
[!
cﬁ‹
] +
cgc_PIECE_SCORES
[
íemy_p
];

806 
ígöe
->
num_moves
[
move
.
§
 * 8 + move.
sc
]--;

807 
ígöe
->
cuºít_move
--;

808 i‡(
ígöe
->
cuºít_move
 > 0)

809 
ígöe
->
œ°_move
 =Éngöe->
moves
[ígöe->
cuºít_move
-1];

811 
ígöe
->
œ°_move
.
›
 = 
EMPTY
;

812 
ígöe
->
cuºít_cﬁ‹
 = !engine->current_color;

813 
	}
}

815 
	$cgc_ígöe_move
(
move_t
 
move
)

817 
põ˚_t
 
põ˚
;

819 i‡(!
ígöe
->
a˘ive
)

822 
põ˚
 = 
ígöe
->
maûbox
[
move
.
§
 * 8 + move.
sc
];

823 i‡(!
	`vÆid_move
(
move
, 
põ˚
))

825 
	`cgc_£nd_ûÀgÆ
("övÆid move", 
move
);

829 
	`cgc_≠∂y_move
(
move
, 
põ˚
);

830 i‡(!
	`vÆid_bﬂrd
())

832 
	`cgc_undo_move
();

833 
	`cgc_£nd_ûÀgÆ
("ûÀgÆ move", 
move
);

837 #ifde‡
DEBUG


838 
	`¥öt_bﬂrd
();

839 
	`ßnôy_check_bﬂrd
();

842 i‡(
ígöe
->
go
)

843 
	`cgc_ígöe_go
();

844 
	}
}

846 
	$cgc_ígöe_£t_cﬁ‹
(
cﬁ‹
)

848 i‡(!
ígöe
->
a˘ive
)

851 
ígöe
->
cuºít_cﬁ‹
 = 
cﬁ‹
;

852 
	}
}

854 
	$cgc_ígöe_£t_go
(
go
)

856 i‡(!
ígöe
->
a˘ive
)

859 
ígöe
->
go
 = go;

860 
	}
}

862 
	$cgc_ígöe_£t_dïth
(
dïth
)

864 i‡(!
ígöe
->
a˘ive
)

867 i‡(
dïth
 <= 0)

869 
	`cgc_£nd_îr‹
("depthÅoo small", "sd");

872 i‡(
dïth
 > 
MAX_DEPTH
)

874 
	`cgc_£nd_îr‹
("depthÅooÜarge", "sd");

877 
ígöe
->
max_dïth
 = 
dïth
;

878 
	}
}

880 
	$cgc_ígöe_£t_cgc_øndom
(
øndom
)

882 i‡(!
ígöe
->
a˘ive
)

885 
ígöe
->
øndom
 =Ñandom;

886 
	}
}

888 
	$cgc_gíî©e_moves
(*
num_ªsu…s
, 
move_t
 *
ªsu…s
)

890 
bbﬂrd_t
 
b
, 
övÆid
, 
vÆid_ˇ±uªs
;

891 
cﬁ‹
 = 
ígöe
->
cuºít_cﬁ‹
,

892 
num_moves
 = 0,

893 
i
, 
p
, 
r
, 
c
;

895 
	#ADD_MOVE
(
_§
, 
_sc
, 
_dr
, 
_dc
, 
_¥io
) do { \

896 
ªsu…s
[
num_moves
].
§
 = 
_§
; \

897 
ªsu…s
[
num_moves
].
sc
 = 
_sc
; \

898 
ªsu…s
[
num_moves
].
dr
 = 
_dr
; \

899 
ªsu…s
[
num_moves
].
dc
 = 
_dc
; \

900 
ªsu…s
[
num_moves
].
¥io
 = 
_¥io
; \

901 
num_moves
++; \

902 } 0)

	)

903 
	#ADD_MOVE_IF_VALID
(
§
, 
sc
, 
dr
, 
dc
, 
_ˇp
) do { \

904 
ˇp
 = 
_ˇp
; \

905 i‡(
dr
 < 0 || d∏>8 || 
dc
 < 0 || d¯>8 || (
övÆid
 & 
	`BIT
(dr, dc))) ; \

906 i‡(
vÆid_ˇ±uªs
 & 
	`BIT
(
dr
, 
dc
)Ë
ˇp
 = 1; \

907 i‡(
ˇp
) ; \

908 
	`ADD_MOVE
(
§
, 
sc
, 
dr
, 
dc
, 
ˇp
 ? 100 : 0); \

909 } 0)

	)

912 
övÆid
 = 
ígöe
->
cﬁ‹_põ˚s
[
cﬁ‹
];

914 
vÆid_ˇ±uªs
 = 
ígöe
->
cﬁ‹_põ˚s
[!
cﬁ‹
];

917 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
PAWN
][
cﬁ‹
]; b !0 &&Ö < 63; b >>
i
 + 1)

919 
i
 = 
	`__buûtö_˘zŒ
(
b
);

920 
p
 +
i
 + 1;

921 
r
 = 
p
 / 8;

922 
c
 = 
p
 % 8;

924 i‡(
cﬁ‹
 =
WHITE
)

926 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c-1, 1);

927 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c+1, 1);

929 i‡(!(
vÆid_ˇ±uªs
 & 
	`BIT
(
r
+1, 
c
)))

930 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c, 0);

931 i‡(
r
 == 1)

932 i‡(!(
vÆid_ˇ±uªs
 & 
	`BIT
(
r
+2, 
c
)Ë&& !(
ígöe
->
Æl_põ˚s
 & BIT(r+1, c)))

933 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+2, c, 0);

935 #ifde‡
ENPASSANT


936 i‡((
ígöe
->
œ°_move
.
›
 & 
PIECE_MASK
Ë=
PAWN
 &&

937 
	`ABS
(
ígöe
->
œ°_move
.
§
 -Éngöe->œ°_move.
dr
) == 2 &&

938 
	`ABS
(
c
 - 
ígöe
->
œ°_move
.
dc
Ë=1 &&Éngöe->œ°_move.
dr
 =
r
)

940 
	`ADD_MOVE
(
r
, 
c
,Ñ+1, 
ígöe
->
œ°_move
.
dc
, 100);

946 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c-1, 1);

947 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c+1, 1);

949 i‡(!(
vÆid_ˇ±uªs
 & 
	`BIT
(
r
-1, 
c
)))

950 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c, 0);

951 i‡(
r
 == 6)

952 i‡(!(
vÆid_ˇ±uªs
 & 
	`BIT
(
r
-2, 
c
)Ë&& !(
ígöe
->
Æl_põ˚s
 & BIT(r-1, c)))

953 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-2, c, 0);

955 #ifde‡
ENPASSANT


956 i‡((
ígöe
->
œ°_move
.
›
 & 
PIECE_MASK
Ë=
PAWN
 &&

957 
	`ABS
(
ígöe
->
œ°_move
.
§
 -Éngöe->œ°_move.
dr
) == 2 &&

958 
	`ABS
(
c
 - 
ígöe
->
œ°_move
.
dc
Ë=1 &&Éngöe->œ°_move.
dr
 =
r
)

960 
	`ADD_MOVE
(
r
, 
c
,Ñ-1, 
ígöe
->
œ°_move
.
dc
, 100);

967 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
KNIGHT
][
cﬁ‹
]; b !0 &&Ö < 63; b >>
i
 + 1)

969 
i
 = 
	`__buûtö_˘zŒ
(
b
);

970 
p
 +
i
 + 1;

971 
r
 = 
p
 / 8;

972 
c
 = 
p
 % 8;

974 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+2, c+1, 0);

975 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+2, c-1, 0);

976 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-2, c+1, 0);

977 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-2, c-1, 0);

978 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c+2, 0);

979 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c-2, 0);

980 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c+2, 0);

981 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c-2, 0);

985 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
ROOK
][
cﬁ‹
] |Éngöe->põ˚s[
QUEEN
][cﬁ‹]; b !0 &&Ö < 63; b >>
i
 + 1)

987 
bbﬂrd_t
 
bô
;

988 
j
;

989 
i
 = 
	`__buûtö_˘zŒ
(
b
);

990 
p
 +
i
 + 1;

991 
r
 = 
p
 / 8;

992 
c
 = 
p
 % 8;

994 
j
 = 
c
+1, 
bô
 = 1ULL << (
r
 * 8 + c + 1); j < 8; j++, bit <<= 1)

996 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

998 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ, 
j
, 1);

1001 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ, 
j
, 0);

1003 
j
 = 
c
-1, 
bô
 = 1ULL << (
r
 * 8 + c - 1); j >= 0; j--, bit >>= 1)

1005 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1007 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ, 
j
, 1);

1010 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ, 
j
, 0);

1012 
j
 = 
r
+1, 
bô
 = 1ULL << (‘+1Ë* 8 + 
c
); j < 8; j++, bit <<= 8)

1014 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1016 
	`ADD_MOVE_IF_VALID
(
r
, 
c
, 
j
, c, 1);

1019 
	`ADD_MOVE_IF_VALID
(
r
, 
c
, 
j
, c, 0);

1021 
j
 = 
r
-1, 
bô
 = 1ULL << (‘-1Ë* 8 + 
c
); j >= 0; j--, bit >>= 8)

1023 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1025 
	`ADD_MOVE_IF_VALID
(
r
, 
c
, 
j
, c, 1);

1028 
	`ADD_MOVE_IF_VALID
(
r
, 
c
, 
j
, c, 0);

1033 
p
 = -1, 
b
 = 
ígöe
->
põ˚s
[
BISHOP
][
cﬁ‹
] |Éngöe->põ˚s[
QUEEN
][cﬁ‹]; b !0 &&Ö < 63; b >>
i
 + 1)

1035 
‹
, 
oc
;

1036 
bbﬂrd_t
 
bô
;

1038 
i
 = 
	`__buûtö_˘zŒ
(
b
);

1039 
p
 +
i
 + 1;

1040 
‹
 = 
p
 / 8;

1041 
oc
 = 
p
 % 8;

1043 
r
 = 
‹
 + 1;

1044 
c
 = 
oc
 + 1;

1045 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ < 8 && c < 8;Ñ++, c++, bit <<= 9)

1047 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1049 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 1);

1052 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 0);

1055 
r
 = 
‹
 - 1;

1056 
c
 = 
oc
 + 1;

1057 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ >= 0 && c < 8;Ñ--, c++, bit >>= 7)

1059 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1061 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 1);

1064 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 0);

1067 
r
 = 
‹
 + 1;

1068 
c
 = 
oc
 - 1;

1069 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ < 8 && c >= 0;Ñ++, c--, bit <<= 7)

1071 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1073 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 1);

1076 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 0);

1079 
r
 = 
‹
 - 1;

1080 
c
 = 
oc
 - 1;

1081 
bô
 = 1ULL << (
r
 * 8 + 
c
);Ñ >= 0 && c >= 0;Ñ--, c--, bit >>= 9)

1083 i‡(
ígöe
->
Æl_põ˚s
 & 
bô
)

1085 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 1);

1088 
	`ADD_MOVE_IF_VALID
(
‹
, 
oc
, 
r
, 
c
, 0);

1093 
p
 = 
	`__buûtö_˘zŒ
(
ígöe
->
põ˚s
[
KING
][
cﬁ‹
]);

1094 
r
 = 
p
 / 8;

1095 
c
 = 
p
 % 8;

1096 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c-1, 0);

1097 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c, 0);

1098 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ-1, c+1, 0);

1099 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ, c-1, 0);

1100 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ, c+1, 0);

1101 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c-1, 0);

1102 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c, 0);

1103 
	`ADD_MOVE_IF_VALID
(
r
, 
c
,Ñ+1, c+1, 0);

1107 *
num_ªsu…s
 = 
num_moves
;

1108 
	}
}

1111 
	$evÆu©e
()

1113 
bbﬂrd_t
 
©ècks
;

1114 
øw_sc‹e
 = 
ígöe
->
sc‹es
[
WHITE
] -Éngöe->sc‹es[
BLACK
];

1116 
©ècks
 = 
	`cgc_ˇlcuœã_©ècks
(
WHITE
);

1117 
øw_sc‹e
 +
	`__buûtö_p›cou¡Œ
(
©ècks
 & 0x0000007e7e000000ULL);

1118 
øw_sc‹e
 +
	`__buûtö_p›cou¡Œ
(
©ècks
 & ~
ígöe
->
cﬁ‹_põ˚s
[
WHITE
]) * 2;

1119 
øw_sc‹e
 +
	`__buûtö_p›cou¡Œ
(
©ècks
 & 
ígöe
->
cﬁ‹_põ˚s
[
WHITE
]);

1120 
©ècks
 = 
	`cgc_ˇlcuœã_©ècks
(
BLACK
);

1121 
øw_sc‹e
 -
	`__buûtö_p›cou¡Œ
(
©ècks
 & 0x0000007e7e000000ULL);

1122 
øw_sc‹e
 -
	`__buûtö_p›cou¡Œ
(
©ècks
 & ~
ígöe
->
cﬁ‹_põ˚s
[
BLACK
]) * 2;

1123 
øw_sc‹e
 -
	`__buûtö_p›cou¡Œ
(
©ècks
 & 
ígöe
->
cﬁ‹_põ˚s
[
BLACK
]);

1125  
øw_sc‹e
;

1126 
	}
}

1128 
	$cgc_quõs˚
(
dïth
, 
Æpha
, 
bëa
)

1130 
sc‹e
, 
tmp
;

1131 
i
, 
num_moves
 = 0;

1132 
bbﬂrd_t
 
©ècks
, 
ˇ±uªs
;

1133 
move_t
 *
moves
 = &
ígöe
->
moves_buf
[
dïth
 * 
MAX_MOVES_PER_DEPTH
];

1135 
sc‹e
 = 
	`evÆu©e
();

1136 i‡(
ígöe
->
cuºít_cﬁ‹
 =
BLACK
)

1137 
sc‹e
 = -score;

1139 i‡(
Æpha
 < 
sc‹e
)

1140 
Æpha
 = 
sc‹e
;

1141 i‡(
Æpha
 >
bëa
)

1142  
bëa
;

1144 
©ècks
 = 
	`cgc_ˇlcuœã_©ècks
(
ígöe
->
cuºít_cﬁ‹
);

1145 
ˇ±uªs
 = 
©ècks
 & 
ígöe
->
cﬁ‹_põ˚s
[!ígöe->
cuºít_cﬁ‹
];

1146 i‡(!
ˇ±uªs
 || 
dïth
 >
MAX_DEPTH
)

1147  
sc‹e
;

1151 i‡(
ˇ±uªs
 & 
ígöe
->
põ˚s
[
KING
][!ígöe->
cuºít_cﬁ‹
])

1152  
sc‹e
 + 
PIECE_SCORES
[
KING
];

1155 
	`cgc_gíî©e_moves
(&
num_moves
, 
moves
);

1156 
i
 = 0; i < 
num_moves
; i++)

1158 
move_t
 
move
 = 
moves
[
i
];

1160 i‡(!(
ˇ±uªs
 & 
	`BIT
(
move
.
dr
, move.
dc
)))

1163 i‡((
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
] & 
PIECE_MASK
Ë=
KING
)

1164  
SCORE_MAX
;

1166 
	`cgc_≠∂y_move
(
move
, 
ígöe
->
maûbox
[move.
§
 * 8 + move.
sc
]);

1167 
tmp
 = -
	`cgc_quõs˚
(
dïth
 + 1, -
bëa
, -
Æpha
);

1168 
	`cgc_undo_move
();

1171 i‡(
tmp
 > 
sc‹e
)

1172 
sc‹e
 = 
tmp
;

1174 i‡(
sc‹e
 > 
Æpha
)

1175 
Æpha
 = 
sc‹e
;

1177 i‡(
Æpha
 >
bëa
)

1178  
Æpha
;

1181  
sc‹e
;

1182 
	}
}

1184 
	$øndöt
(
max
)

1186 
uöt32_t
 
x
;

1187 
cgc_size_t
 
byãs
;

1188 
	`cgc_øndom
(&
x
, (x), &
byãs
);

1189  
x
 % 
max
;

1190 
	}
}

1192 
	$cgc_£¨ch
(
dïth
, 
Æpha
, 
bëa
, 
move_t
 *
be°_move
)

1194 
sc‹e
 = 
SCORE_MIN
, 
tmp
;

1195 
i
, 
num_moves
 = 0;

1196 
move_t
 *
moves
 = &
ígöe
->
moves_buf
[
dïth
 * 
MAX_MOVES_PER_DEPTH
];

1198 
	`cgc_gíî©e_moves
(&
num_moves
, 
moves
);

1199 
i
 = 0; i < 
num_moves
; i++)

1201 
move_t
 
move
 = 
moves
[
i
];

1203 i‡((
ígöe
->
maûbox
[
move
.
dr
 * 8 + move.
dc
] & 
PIECE_MASK
Ë=
KING
)

1204  
SCORE_MAX
;

1206 
	`cgc_≠∂y_move
(
move
, 
ígöe
->
maûbox
[move.
§
 * 8 + move.
sc
]);

1208 i‡(
dïth
 =
ígöe
->
max_dïth
)

1209 
tmp
 = -
	`cgc_quõs˚
(
dïth
 + 1, -
bëa
, -
Æpha
);

1211 
tmp
 = -
	`cgc_£¨ch
(
dïth
 + 1, -
bëa
, -
Æpha
, 
NULL
);

1213 
	`cgc_undo_move
();

1215 #ifde‡
DEBUG


1216 
	`ßnôy_check_bﬂrd
();

1219 i‡(
dïth
 =0 && 
ígöe
->
øndom
)

1220 
tmp
 +
	`øndöt
(5) - 2;

1223 i‡(
tmp
 > 
sc‹e
)

1225 
sc‹e
 = 
tmp
;

1226 i‡(
dïth
 == 0)

1227 *
be°_move
 = 
move
;

1230 i‡(
sc‹e
 > 
Æpha
)

1231 
Æpha
 = 
sc‹e
;

1233 i‡(
Æpha
 >
bëa
)

1234  
Æpha
;

1237  
sc‹e
;

1238 
	}
}

1240 
	$cgc_ígöe_go
()

1242 
sc‹e
;

1243 
move_t
 
move
;

1245 i‡(!
ígöe
->
a˘ive
)

1248 
sc‹e
 = 
	`cgc_£¨ch
(0, 
SCORE_MIN
, 
SCORE_MAX
, &
move
);

1249 
ígöe
->
ac˚±_døw
 = 
sc‹e
 <
DRAW_THRESHOLD
;

1250 i‡(
sc‹e
 =
SCORE_MIN
)

1251 
	`cgc_£nd_ªsign
();

1254 
	`cgc_£nd_move
(
move
);

1255 
	`cgc_≠∂y_move
(
move
, 
ígöe
->
maûbox
[move.
§
 * 8 + move.
sc
]);

1256 #ifde‡
DEBUG


1257 
	`¥öt_bﬂrd
();

1258 
	`ßnôy_check_bﬂrd
();

1261 
	}
}

1263 
	$cgc_ígöe_ªsu…
()

1265 
ígöe
->
a˘ive
 = 0;

1266 
	}
}

1268 
	$cgc_ígöe_of„r_døw
()

1270 i‡(!
ígöe
->
a˘ive
)

1273 i‡(
ígöe
->
ac˚±_døw
)

1275 
	`cgc_£nd_døw
();

1277 
	}
}

1279 
	$cgc_ígöe_undo
()

1281 i‡(!
ígöe
->
a˘ive
)

1284 
	`cgc_undo_move
();

1285 
	}
}

1287 
	$cgc_ígöe_gë_cgc_øndom
()

1289  
ígöe
->
øndom
;

1290 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/io.c

24 
	~<°dlib.h
>

26 
	~"cgc_°dlib.h
"

27 
	~"cgc_˘y≥.h
"

28 
	~"cgc_°rög.h
"

30 
	~"cgc_ígöe.h
"

31 
	~"cgc_io.h
"

33 
	göput_°©es
[128 * 128];

35 
	$move_to_°r
(
move_t
 
move
, *
buf
)

37 
buf
[0] = 
move
.
sc
 + 'm';

38 
buf
[1] = 
move
.
§
 + '1';

39 
buf
[2] = 
move
.
dc
 + 'm';

40 
buf
[3] = 
move
.
dr
 + '1';

41 
move
.
p
)

43 
KNIGHT
:

44 
buf
[4] = 'k';

46 
BISHOP
:

47 
buf
[4] = 'b';

49 
ROOK
:

50 
buf
[4] = 'r';

52 
QUEEN
:

53 
buf
[4] = 'q';

56 
buf
[4] = 0;

59 
buf
[5] = 0;

60 
	}
}

62 
	$cgc_öô_°©es
()

64 
i
,
j
;

65 
	`cgc_mem£t
(
öput_°©es
, 
STATE_ERROR
, (input_states));

66 
	#ADD_STATE
(
c1
, 
c2
, 
s
Ë
öput_°©es
[((c1Ë<< 7Ë+ (c2)] = 
STATE_
##s##
_START


	)

67 
i
 = 'm'; i <= 't'; i++)

68 
j
 = '1'; j <= '8'; j++)

69 
	`ADD_STATE
(
i
, 
j
, 
MOVE
);

70 
	`ADD_STATE
('b', 'l', 
BLACK
);

71 
	`ADD_STATE
('c', 'g', 
CGCBOARD
);

72 
	`ADD_STATE
('d', 'r', 
DRAW
);

73 
	`ADD_STATE
('f', 'o', 
FORCE
);

74 
	`ADD_STATE
('g', 'o', 
GO
);

75 
	`ADD_STATE
('n', 'e', 
NEW
);

76 
	`ADD_STATE
('q', 'u', 
QUIT
);

77 
	`ADD_STATE
('r', 'a', 
RANDOM
);

78 
	`ADD_STATE
('r', 'e', 
REMOVE_OR_RESULT
);

79 
	`ADD_STATE
('s', 'd', 
SD
);

80 
	`ADD_STATE
('u', 'n', 
UNDO
);

81 
	`ADD_STATE
('w', 'h', 
WHITE
);

82 
	`ADD_STATE
('?', '\n', 
PLAY
);

83 #unde‡
ADD_STATE


84 
	}
}

86 
	$cgc_ªad_Æl
(*
buf
, 
cgc_size_t
 
n
)

88 
n
 > 0)

90 
cgc_size_t
 
byãs
;

91 i‡(
	`cgc_ª˚ive
(
STDIN
, 
buf
, 
n
, &
byãs
) != 0 || bytes == 0)

93 i‡(
byãs
 == 0)

95 
n
 -
byãs
;

98 
	}
}

100 
	$cgc_wrôe_°rög
(c⁄° *
°r
)

102 
cgc_size_t
 
byãs
;

103 
	`cgc_å™smô
(
STDOUT
, 
°r
, 
	`cgc_°æí
(°r), &
byãs
);

105 
	}
}

107 
	$cgc_£nd_move
(
move_t
 
m
)

110 *
buf
 = 
	`mÆloc
(32);

111 i‡(
buf
 =
NULL
)

114 
	`cgc_°r˝y
(
buf
, "move ");

115 
	`move_to_°r
(
m
, 
buf
 + 5);

116 
	`cgc_°rˇt
(
buf
, "\n");

118 
	`cgc_wrôe_°rög
(
buf
);

120 
	`cgc_‰ì
(
buf
);

121 
	}
}

123 
	$cgc_£nd_ªsu…
(
ªsu…
)

125 i‡(
ªsu…
 =
WHITE_WON
)

126 
	`cgc_wrôe_°rög
("1-0\n");

127 i‡(
ªsu…
 =
BLACK_WON
)

128 
	`cgc_wrôe_°rög
("0-1\n");

129 i‡(
ªsu…
 =
DRAW
)

130 
	`cgc_wrôe_°rög
("1/2-1/2\n");

131 i‡(
ªsu…
 =
UNFINISHED
)

132 
	`cgc_wrôe_°rög
("*\n");

133 
	}
}

135 
	$cgc_£nd_døw
()

137 
	`cgc_wrôe_°rög
("offer draw\n");

138 
	}
}

140 
	$cgc_£nd_ªsign
()

142 
	`cgc_wrôe_°rög
("resign\n");

143 
	}
}

145 
	$cgc_£nd_ûÀgÆ
(c⁄° *
ªas⁄
, 
move_t
 
move
)

147 
move°r
[8];

148 
	`move_to_°r
(
move
, 
move°r
);

149 
	`cgc_wrôe_°rög
("Illegal move (");

150 
	`cgc_wrôe_°rög
(
ªas⁄
);

151 
	`cgc_wrôe_°rög
("): ");

152 
	`cgc_wrôe_°rög
(
move°r
);

153 
	`cgc_wrôe_°rög
("\n");

154 
	}
}

156 
	$cgc_£nd_îr‹
(c⁄° *
îr‹
, c⁄° *
comm™d
)

158 
	`cgc_wrôe_°rög
("Error (");

159 
	`cgc_wrôe_°rög
(
îr‹
);

160 
	`cgc_wrôe_°rög
("): ");

161 
	`cgc_wrôe_°rög
(
comm™d
);

162 
	`cgc_wrôe_°rög
("\n");

163 
	}
}

165 
	$cgc_sök_îr‹
(c⁄° *
buf
)

167 
tmp
[2];

168 
cgc_size_t
 
n
 = 
	`cgc_°æí
(
buf
);

170 
	`cgc_wrôe_°rög
("Error (invalid command): ");

171 
	`cgc_wrôe_°rög
(
buf
);

173 i‡(
n
 >1 && 
buf
[n-1] == '\n')

176 
tmp
[1] = 0;

178 i‡(!
	`cgc_ªad_Æl
(&
tmp
[0], 1))

180 
	`cgc_wrôe_°rög
(
tmp
);

181 } 
tmp
[0] != '\n');

183 
	}
}

186 
	$cgc_ªad_keyw‹d
(*
öput
, 
cgc_size_t
 
n
)

188 
i
, 
°©e
;

189 
	`cgc_mem£t
(
öput
, 0, 
n
);

191 i‡(!
	`cgc_ªad_Æl
(
öput
, 2))

194 
°©e
 = 
öput_°©es
[(
öput
[0] << 7) | input[1]];

195 i‡(
°©e
 =
STATE_ERROR
)

196  
	`cgc_sök_îr‹
(
öput
);

198 i‡(
°©e
 =
STATE_PLAY_START
)

199  
°©e
;

201 
i
 = 2; i < 
n
 - 1; i++)

203 
c
;

204 i‡(!
	`cgc_ªad_Æl
(&
c
, 1))

206 
öput
[
i
] = 
c
;

208 
	#PARSE_CHAR
(
°
, 
ch
) \

209 i‡(
°©e
 =
°
) { \

210 i‡(
ch
 =
c
Ë{ 
°©e
++; ; } \

211 { 
°©e
 = 
STATE_ERROR
; ; } \

212 }

	)

214 
	#PARSE_END
(
°
) \

215 i‡(
°©e
 =
°
) { \

216 i‡(
c
 == '\n') ; \

217 { 
°©e
 = 
STATE_ERROR
; ; }\

218 }

	)

220 
	`PARSE_CHAR
(
STATE_BLACK_START
+0, 'a')

221 
	`PARSE_CHAR
(
STATE_BLACK_START
+1, 'c')

222 
	`PARSE_CHAR
(
STATE_BLACK_START
+2, 'k')

223 
	`PARSE_END
(
STATE_BLACK
)

225 
	`PARSE_CHAR
(
STATE_CGCBOARD_START
+0, 'c')

226 
	`PARSE_CHAR
(
STATE_CGCBOARD_START
+1, 'b')

227 
	`PARSE_CHAR
(
STATE_CGCBOARD_START
+2, 'o')

228 
	`PARSE_CHAR
(
STATE_CGCBOARD_START
+3, 'a')

229 
	`PARSE_CHAR
(
STATE_CGCBOARD_START
+4, 'r')

230 
	`PARSE_CHAR
(
STATE_CGCBOARD_START
+5, 'd')

231 
	`PARSE_END
(
STATE_CGCBOARD
)

233 
	`PARSE_CHAR
(
STATE_DRAW_START
+0, 'a')

234 
	`PARSE_CHAR
(
STATE_DRAW_START
+1, 'w')

235 
	`PARSE_END
(
STATE_DRAW
)

237 
	`PARSE_CHAR
(
STATE_FORCE_START
+0, 'r')

238 
	`PARSE_CHAR
(
STATE_FORCE_START
+1, 'c')

239 
	`PARSE_CHAR
(
STATE_FORCE_START
+2, 'e')

240 
	`PARSE_END
(
STATE_FORCE
)

242 
	`PARSE_END
(
STATE_GO
)

244 
	`PARSE_CHAR
(
STATE_NEW_START
+0, 'w')

245 
	`PARSE_END
(
STATE_NEW
)

247 
	`PARSE_CHAR
(
STATE_QUIT_START
+0, 'i')

248 
	`PARSE_CHAR
(
STATE_QUIT_START
+1, 't')

249 
	`PARSE_END
(
STATE_QUIT
)

251 
	`PARSE_CHAR
(
STATE_RANDOM_START
+0, 'n')

252 
	`PARSE_CHAR
(
STATE_RANDOM_START
+1, 'd')

253 
	`PARSE_CHAR
(
STATE_RANDOM_START
+2, 'o')

254 
	`PARSE_CHAR
(
STATE_RANDOM_START
+3, 'm')

255 
	`PARSE_END
(
STATE_RANDOM
)

257 i‡(
°©e
 =
STATE_SD
)

259 i‡(
c
 == ' ') { ; }

260 { 
°©e
 = 
STATE_ERROR
; ; }

263 
	`PARSE_CHAR
(
STATE_UNDO_START
+0, 'd')

264 
	`PARSE_CHAR
(
STATE_UNDO_START
+1, 'o')

265 
	`PARSE_END
(
STATE_UNDO
)

267 
	`PARSE_CHAR
(
STATE_WHITE_START
+0, 'i')

268 
	`PARSE_CHAR
(
STATE_WHITE_START
+1, 't')

269 
	`PARSE_CHAR
(
STATE_WHITE_START
+2, 'e')

270 
	`PARSE_END
(
STATE_WHITE
)

272 i‡(
°©e
 =
STATE_REMOVE_OR_RESULT_START
)

274 i‡(
c
 ='m'Ë{ 
°©e
 = 
STATE_REMOVE_START
; ; }

275 i‡(
c
 ='s'Ë{ 
°©e
 = 
STATE_RESULT_START
; ; }

276 { 
°©e
 = 
STATE_ERROR
; ; }

279 
	`PARSE_CHAR
(
STATE_REMOVE_START
+0, 'o')

280 
	`PARSE_CHAR
(
STATE_REMOVE_START
+1, 'v')

281 
	`PARSE_CHAR
(
STATE_REMOVE_START
+2, 'e')

282 
	`PARSE_END
(
STATE_REMOVE
)

284 
	`PARSE_CHAR
(
STATE_RESULT_START
+0, 'u')

285 
	`PARSE_CHAR
(
STATE_RESULT_START
+1, 'l')

286 
	`PARSE_CHAR
(
STATE_RESULT_START
+2, 't')

287 i‡(
°©e
 =
STATE_RESULT
)

289 i‡(
c
 == ' ') { ; }

290 { 
°©e
 = 
STATE_ERROR
; ; }

293 i‡(
°©e
 =
STATE_MOVE_START
+0)

295 i‡('m' <
c
 && c <'t'Ë{ 
°©e
++; ; }

296 { 
°©e
 = 
STATE_ERROR
; ;; }

298 i‡(
°©e
 =
STATE_MOVE_START
+1)

300 #ifde‡
PATCHED


301 i‡(
c
 < '1' || c > '8'Ë{ 
°©e
 = 
STATE_ERROR
; ;; }

303 i‡(
	`cgc_isdigô
(
c
)Ë{ 
°©e
++; ; }

304 { 
°©e
 = 
STATE_ERROR
; ;; }

306 i‡(
°©e
 =
STATE_MOVE_START
+2)

308 i‡(
c
 ='\n'Ë{ 
°©e
 = 
STATE_MOVE
; ; }

309 i‡(
	`cgc_i¶owî
(
c
)Ë{ 
°©e
 = 
STATE_MOVE
; ; }

310 { 
°©e
 = 
STATE_ERROR
; ; }

312 i‡(
°©e
 =
STATE_MOVE
)

314 i‡(
c
 == '\n') { ; }

315 { 
°©e
 = 
STATE_ERROR
; ; }

318 
°©e
 = 
STATE_ERROR
;

322 i‡(
°©e
 =
STATE_ERROR
)

323  
	`cgc_sök_îr‹
(
öput
);

325 
öput
[
i
] = 0;

327  
°©e
;

328 
	}
}

330 
move_t
 
	$cgc_°r_to_move
(c⁄° *
°r
)

332 
move_t
 
move
;

333 
move
.
sc
 = 
°r
[0] - 'm';

334 
move
.
§
 = 
°r
[1] - '1';

335 
move
.
dc
 = 
°r
[2] - 'm';

336 
move
.
dr
 = 
°r
[3] - '1';

337 
°r
[4])

340 
move
.
p
 = 
KNIGHT
;

343 
move
.
p
 = 
ROOK
;

346 
move
.
p
 = 
QUEEN
;

349 
move
.
p
 = 
BISHOP
;

352 
move
.
p
 = 0;

355  
move
;

356 
	}
}

	@/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/main.c

23 
	~"cgc_°dlib.h
"

24 
	~"cgc_°rög.h
"

26 
	~"cgc_ígöe.h
"

27 
	~"cgc_io.h
"

29 
	$h™dÀ_ªsu…
()

31 
tmp
[16];

32 
ªsu…
;

33 
cgc_size_t
 
n
;

35 
	`cgc_mem£t
(
tmp
, 0, (tmp));

36 
n
 = 0;Ç < (
tmp
) - 1;Ç++)

38 i‡(!
	`cgc_ªad_Æl
(&
tmp
[
n
], 1))

40 i‡(
tmp
[
n
] == ' ' ||Åmp[n] == '\n')

43 i‡(
n
 =(
tmp
))

44  
	`sök_îr‹
("result ... ");

47 
tmp
[
n
] != '\n')

49 
c
;

50 i‡(!
	`cgc_ªad_Æl
(&
c
, 1))

52 i‡(
c
 == '\n')

56 i‡(
	`cgc_°∫cmp
(
tmp
, "1-0", 3) == 0)

57 
ªsu…
 = 
WHITE_WON
;

58 i‡(
	`cgc_°∫cmp
(
tmp
, "0-1", 3) == 0)

59 
ªsu…
 = 
BLACK_WON
;

60 i‡(
	`cgc_°∫cmp
(
tmp
, "1/2-1/2", 7) == 0)

61 
ªsu…
 = 
DRAW
;

62 i‡(
	`cgc_°∫cmp
(
tmp
, "*", 1) == 0)

63 
ªsu…
 = 
UNFINISHED
;

66 
	`cgc_wrôe_°rög
("Error (invalid command):Ñesult\n");

70 
	`cgc_ígöe_ªsu…
(
ªsu…
);

72 
	}
}

74 
	$h™dÀ_sd
()

76 
tmp
[16];

77 
cgc_size_t
 
n
;

79 
	`cgc_mem£t
(
tmp
, 0, (tmp));

80 
n
 = 0;Ç < (
tmp
) - 1;Ç++)

82 i‡(!
	`cgc_ªad_Æl
(&
tmp
[
n
], 1))

84 i‡(
tmp
[
n
] == '\n')

87 i‡(
n
 =(
tmp
))

88  
	`sök_îr‹
("sd ... ");

90 
	`cgc_ígöe_£t_dïth
(
	`cgc_°πﬁ
(
tmp
, 0, 10));

92 
	}
}

94 
	$maö
(
cgc_¨gc
, *
cgc_¨gv
[])

96 
öput
[16];

97 
d⁄e
 = 0, 
°©e
;

99 i‡(!
	`cgc_ígöe_öô
())

101 
	`cgc_öô_°©es
();

103 !
d⁄e
)

105 
°©e
 = 
	`cgc_ªad_keyw‹d
(
öput
, (input));

106 i‡(
°©e
 == 0)

108 i‡(
°©e
 =
STATE_ERROR
)

114 
°©e
)

116 
STATE_BLACK
:

117 
	`cgc_ígöe_£t_cﬁ‹
(
BLACK
);

119 
STATE_WHITE
:

120 
	`cgc_ígöe_£t_cﬁ‹
(
WHITE
);

122 
STATE_CGCBOARD
:

123 
	`cgc_wrôe_°rög
("\n");

125 
STATE_DRAW
:

126 
	`cgc_ígöe_of„r_døw
();

128 
STATE_FORCE
:

129 
	`cgc_ígöe_£t_go
(0);

131 
STATE_GO
:

132 
	`cgc_ígöe_£t_go
(1);

134 
STATE_NEW
:

135 
	`cgc_ígöe_√w
();

137 
STATE_RANDOM
:

138 
	`cgc_ígöe_£t_cgc_øndom
(!
	`cgc_ígöe_gë_cgc_øndom
());

140 
STATE_RESULT
:

141 i‡(!
	`h™dÀ_ªsu…
())

142 
d⁄e
 = 1;

144 
STATE_REMOVE
:

145 
	`cgc_ígöe_undo
();

146 
	`cgc_ígöe_undo
();

148 
STATE_QUIT
:

149 
	`cgc_wrôe_°rög
("bye\n");

150 
d⁄e
 = 1;

152 
STATE_SD
:

153 i‡(!
	`h™dÀ_sd
())

154 
d⁄e
 = 1;

156 
STATE_UNDO
:

157 
	`cgc_ígöe_undo
();

159 
STATE_MOVE
:

160 
	`cgc_ígöe_move
(
	`cgc_°r_to_move
(
öput
));

162 
STATE_PLAY
:

163 
	`cgc_ígöe_go
();

168 
	`cgc_ígöe_de°roy
();

171 
	}
}

	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

541 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

542 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

549 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

550 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

552 #ifde‡
__USE_GNU


558 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

559 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

563 
	$‰ì
 (*
__±r
Ë
__THROW
;

565 #ifde‡
__USE_MISC


566 
	~<Æloˇ.h
>

569 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

570 || 
deföed
 
__USE_MISC


572 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

575 #ifde‡
__USE_XOPEN2K


577 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

581 #ifde‡
__USE_ISOC11


583 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

584 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

588 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

592 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

594 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


596 #ifde‡
__˝lu•lus


597 "C++" 
	$©_quick_exô
 ((*
__func
) ())

598 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

600 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #ifdef 
__USE_MISC


607 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

614 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

616 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


620 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

623 #ifde‡
__USE_ISOC99


626 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

631 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_GNU


636 *
	$£cuª_gëív
 (c⁄° *
__«me
)

637 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


644 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

647 #ifde‡
__USE_XOPEN2K


650 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

651 
__THROW
 
	`__n⁄nuŒ
 ((2));

654 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifdef 
__USE_MISC


661 
	$˛óªnv
 (Ë
__THROW
;

665 #i‡
deföed
 
__USE_MISC
 \

666 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

672 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


684 #i‚de‡
__USE_FILE_OFFSET64


685 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

687 #ifde‡
__REDIRECT


688 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

689 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

691 
	#mk°emp
 
mk°emp64


	)

694 #ifde‡
__USE_LARGEFILE64


695 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

699 #ifde‡
__USE_MISC


706 #i‚de‡
__USE_FILE_OFFSET64


707 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

711 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

713 
	#mk°emps
 
mk°emps64


	)

716 #ifde‡
__USE_LARGEFILE64


717 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

718 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_XOPEN2K8


728 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

731 #ifde‡
__USE_GNU


738 #i‚de‡
__USE_FILE_OFFSET64


739 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__REDIRECT


742 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

743 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

745 
	#mko°emp
 
mko°emp64


	)

748 #ifde‡
__USE_LARGEFILE64


749 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

758 #i‚de‡
__USE_FILE_OFFSET64


759 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

760 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

762 #ifde‡
__REDIRECT


763 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

764 
__Êags
), 
mko°emps64
)

765 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

767 
	#mko°emps
 
mko°emps64


	)

770 #ifde‡
__USE_LARGEFILE64


771 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

772 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

781 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

784 #ifdef 
__USE_GNU


787 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


797 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

798 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

803 #i‚de‡
__COMPAR_FN_T


804 
	#__COMPAR_FN_T


	)

805 (*
	t__com∑r_‚_t
) (const *, const *);

807 #ifdef 
__USE_GNU


808 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

811 #ifde‡
__USE_GNU


812 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

817 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

818 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

819 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

821 #ifde‡
__USE_EXTERN_INLINES


822 
	~<bôs/°dlib-b£¨ch.h
>

827 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

828 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

829 #ifde‡
__USE_GNU


830 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

832 
	`__n⁄nuŒ
 ((1, 4));

837 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

838 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

840 #ifde‡
__USE_ISOC99


841 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

842 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
div_t
 
	$div
 (
__numî
, 
__díom
)

850 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

852 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 #ifde‡
__USE_ISOC99


855 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

856 
__díom
)

857 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

861 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

862 || 
deföed
 
__USE_MISC


869 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

870 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

875 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

876 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

881 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

882 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

885 #ifde‡
__USE_MISC


887 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

888 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

889 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

890 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

894 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

899 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

900 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

901 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

902 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

906 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

907 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

908 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

910 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

911 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

912 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

913 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

919 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

922 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

923 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

926 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

930 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

931 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

934 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

935 
__THROW
;

938 #ifde‡
__USE_MISC


943 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

947 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


954 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

955 *c⁄° *
__ª°ri˘
 
__tokís
,

956 **
__ª°ri˘
 
__vÆuï
)

957 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

961 #ifde‡
__USE_XOPEN


963 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

969 #ifde‡
__USE_XOPEN2KXSI


971 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

974 #ifde‡
__USE_XOPEN_EXTENDED


979 
	$gø¡±
 (
__fd
Ë
__THROW
;

983 
	$u∆ock±
 (
__fd
Ë
__THROW
;

988 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

991 #ifde‡
__USE_GNU


995 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

996 
__THROW
 
	`__n⁄nuŒ
 ((2));

999 
	`gë±
 ();

1002 #ifde‡
__USE_MISC


1006 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1013 
	$ây¶Ÿ
 (Ë
__THROW
;

1016 
	~<bôs/°dlib-Êﬂt.h
>

1019 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1020 
	~<bôs/°dlib.h
>

1022 #ifde‡
__LDBL_COMPAT


1023 
	~<bôs/°dlib-ldbl.h
>

1026 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	`__GNUC_PREREQ
 (4, 4))) \

32 && !
	`deföed
(
__CUDACC__
Ë&& !
	$deföed
(
__ICC
)

33 
	#__HAVE_FLOAT128
 1

	)

35 
	#__HAVE_FLOAT128
 0

	)

40 #i‡
__HAVE_FLOAT128


41 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

43 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

49 
	#__HAVE_FLOAT64X
 1

	)

55 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

57 #i‚de‡
__ASSEMBLER__


61 #i‡
__HAVE_FLOAT128


62 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


64 
	#__f128
(
x
Ëx##
q


	)

66 
	#__f128
(
x
Ëx##
f128


	)

71 #i‡
__HAVE_FLOAT128


72 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


75 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

76 
	#__CFLOAT128
 
__cÊﬂt128


	)

78 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

83 #i‡
__HAVE_FLOAT128


86 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


87 
__Êﬂt128
 
	t_Flﬂt128
;

91 #i‡!
	`__GNUC_PREREQ
 (7, 0)

92 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

100 #i‡!
	`__GNUC_PREREQ
 (7, 0)

101 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

102 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

103 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

104 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

105 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

112 #i‡!
	`__GNUC_PREREQ
 (6, 0)

113 
	#__buûtö_signbôf128
 
__signbôf128


	)

120 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

47 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


48 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


49 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

56 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


57 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


58 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

60 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

65 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


67 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

69 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

42 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


43 #i‚de‡
__ENUM_IDTYPE_T


44 
	#__ENUM_IDTYPE_T
 1

	)

48 #unde‡
P_ALL


49 #unde‡
P_PID


50 #unde‡
P_PGID


54 
	mP_ALL
,

55 
	mP_PID
,

56 
	mP_PGID


57 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	~<bôs/ty≥s/˛ock_t.h
>

129 
	~<bôs/ty≥s/˛ockid_t.h
>

130 
	~<bôs/ty≥s/time_t.h
>

131 
	~<bôs/ty≥s/timî_t.h
>

133 #ifde‡
__USE_XOPEN


134 #i‚de‡
__u£c⁄ds_t_deföed


135 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

136 
	#__u£c⁄ds_t_deföed


	)

138 #i‚de‡
__su£c⁄ds_t_deföed


139 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

140 
	#__su£c⁄ds_t_deföed


	)

144 
	#__√ed_size_t


	)

145 
	~<°ddef.h
>

147 #ifde‡
__USE_MISC


149 
	tul⁄g
;

150 
	tush‹t
;

151 
	tuöt
;

156 
	~<bôs/°döt-öä.h
>

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 
	tu_öt8_t
;

162 
	tu_öt16_t
;

163 
	tu_öt32_t
;

164 #i‡
__WORDSIZE
 == 64

165 
	tu_öt64_t
;

167 
__exãnsi⁄__
 
	tu_öt64_t
;

170 
	tªgi°î_t
;

175 
	#__u_ötN_t
(
N
, 
MODE
) \

176 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

178 
	t__u_ötN_t
 (8, 
	t__QI__
);

179 
__u_ötN_t
 (16, 
__HI__
);

180 
__u_ötN_t
 (32, 
__SI__
);

181 
__u_ötN_t
 (64, 
__DI__
);

183 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

189 
	#__BIT_TYPES_DEFINED__
 1

	)

192 #ifdef 
__USE_MISC


194 
	~<ídün.h
>

197 
	~<sys/£À˘.h
>

204 
	#__SYSMACROS_DEPRECATED_INCLUSION


	)

205 
	~<sys/sysma¸os.h
>

206 #unde‡
__SYSMACROS_DEPRECATED_INCLUSION


210 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

211 && !
deföed
 
__blksize_t_deföed


212 
__blksize_t
 
	tblksize_t
;

213 
	#__blksize_t_deföed


	)

217 #i‚de‡
__USE_FILE_OFFSET64


218 #i‚de‡
__blk˙t_t_deföed


219 
__blk˙t_t
 
	tblk˙t_t
;

220 
	#__blk˙t_t_deföed


	)

222 #i‚de‡
__fsblk˙t_t_deföed


223 
__fsblk˙t_t
 
	tfsblk˙t_t
;

224 
	#__fsblk˙t_t_deföed


	)

226 #i‚de‡
__fsfû˙t_t_deföed


227 
__fsfû˙t_t
 
	tfsfû˙t_t
;

228 
	#__fsfû˙t_t_deföed


	)

231 #i‚de‡
__blk˙t_t_deföed


232 
__blk˙t64_t
 
	tblk˙t_t
;

233 
	#__blk˙t_t_deföed


	)

235 #i‚de‡
__fsblk˙t_t_deföed


236 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

237 
	#__fsblk˙t_t_deföed


	)

239 #i‚de‡
__fsfû˙t_t_deföed


240 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

241 
	#__fsfû˙t_t_deföed


	)

245 #ifde‡
__USE_LARGEFILE64


246 
__blk˙t64_t
 
	tblk˙t64_t
;

247 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

248 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

253 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


254 
	~<bôs/±hªadty≥s.h
>

257 
	g__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

62 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


63 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

65 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

68 #i‚de‡
__ASSEMBLER__


73 #i‡
__HAVE_FLOAT16


74 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


76 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

78 
	#__f16
(
x
Ëx##
f16


	)

82 #i‡
__HAVE_FLOAT32


83 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


84 
	#__f32
(
x
Ëx##
f


	)

86 
	#__f32
(
x
Ëx##
f32


	)

90 #i‡
__HAVE_FLOAT64


91 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


92 #ifde‡
__NO_LONG_DOUBLE_MATH


93 
	#__f64
(
x
Ëx##
l


	)

95 
	#__f64
(
x
Ë
	)
x

98 
	#__f64
(
x
Ëx##
f64


	)

102 #i‡
__HAVE_FLOAT32X


103 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


104 
	#__f32x
(
x
Ë
	)
x

106 
	#__f32x
(
x
Ëx##
f32x


	)

110 #i‡
__HAVE_FLOAT64X


111 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


112 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


113 
	#__f64x
(
x
Ëx##
l


	)

115 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

118 
	#__f64x
(
x
Ëx##
f64x


	)

122 #i‡
__HAVE_FLOAT128X


123 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


126 
	#__f128x
(
x
Ëx##
f128x


	)

131 #i‡
__HAVE_FLOAT16


132 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

134 
	#__CFLOAT16
 
__cÊﬂt16


	)

136 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

140 #i‡
__HAVE_FLOAT32


141 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


142 
	#__CFLOAT32
 
_Com∂ex
 

	)

144 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

148 #i‡
__HAVE_FLOAT64


149 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


150 #ifde‡
__NO_LONG_DOUBLE_MATH


151 
	#__CFLOAT64
 
_Com∂ex
 

	)

153 
	#__CFLOAT64
 
_Com∂ex
 

	)

156 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

160 #i‡
__HAVE_FLOAT32X


161 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


162 
	#__CFLOAT32X
 
_Com∂ex
 

	)

164 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

168 #i‡
__HAVE_FLOAT64X


169 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


170 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


171 
	#__CFLOAT64X
 
_Com∂ex
 

	)

173 
	#__CFLOAT64X
 
__CFLOAT128


	)

176 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

180 #i‡
__HAVE_FLOAT128X


181 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


184 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

189 #i‡
__HAVE_FLOAT16


191 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


192 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

195 #i‡!
__GNUC_PREREQ
 (7, 0)

196 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

197 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

198 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

199 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

204 #i‡
__HAVE_FLOAT32


206 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


207 
	t_Flﬂt32
;

210 #i‡!
__GNUC_PREREQ
 (7, 0)

211 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

212 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

213 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

214 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

219 #i‡
__HAVE_FLOAT64


228 #ifde‡
__NO_LONG_DOUBLE_MATH


230 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


231 
	t_Flﬂt64
;

234 #i‡!
__GNUC_PREREQ
 (7, 0)

235 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

236 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

237 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

238 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

243 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


244 
	t_Flﬂt64
;

247 #i‡!
__GNUC_PREREQ
 (7, 0)

248 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

249 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

250 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

251 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

258 #i‡
__HAVE_FLOAT32X


260 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


261 
	t_Flﬂt32x
;

264 #i‡!
__GNUC_PREREQ
 (7, 0)

265 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

266 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

267 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

268 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

273 #i‡
__HAVE_FLOAT64X


275 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


277 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


278 
	t_Flﬂt64x
;

281 #i‡!
__GNUC_PREREQ
 (7, 0)

282 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

283 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

284 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

285 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

290 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


291 
_Flﬂt128
 
	t_Flﬂt64x
;

294 #i‡!
__GNUC_PREREQ
 (7, 0)

295 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

296 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

297 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

298 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

305 #i‡
__HAVE_FLOAT128X


307 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


311 #i‡!
__GNUC_PREREQ
 (7, 0)

312 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

313 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

314 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

315 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	t__ötmax_t
;

62 
	t__uötmax_t
;

64 
__exãnsi⁄__
 
	t__ötmax_t
;

65 
__exãnsi⁄__
 
	t__uötmax_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 *
	t__ˇddr_t
;

194 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

197 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

202 
	t__sig_©omic_t
;

204 #unde‡
__STD_TYPE


	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

61 
	~<bôs/uöä-idítôy.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

80 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

81 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

82 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

83 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

85 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

86 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

87 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

88 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

90 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

91 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

92 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

93 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

119 #unde‡
__USE_ISOC11


120 #unde‡
__USE_ISOC99


121 #unde‡
__USE_ISOC95


122 #unde‡
__USE_ISOCXX11


123 #unde‡
__USE_POSIX


124 #unde‡
__USE_POSIX2


125 #unde‡
__USE_POSIX199309


126 #unde‡
__USE_POSIX199506


127 #unde‡
__USE_XOPEN


128 #unde‡
__USE_XOPEN_EXTENDED


129 #unde‡
__USE_UNIX98


130 #unde‡
__USE_XOPEN2K


131 #unde‡
__USE_XOPEN2KXSI


132 #unde‡
__USE_XOPEN2K8


133 #unde‡
__USE_XOPEN2K8XSI


134 #unde‡
__USE_LARGEFILE


135 #unde‡
__USE_LARGEFILE64


136 #unde‡
__USE_FILE_OFFSET64


137 #unde‡
__USE_MISC


138 #unde‡
__USE_ATFILE


139 #unde‡
__USE_GNU


140 #unde‡
__USE_FORTIFY_LEVEL


141 #unde‡
__KERNEL_STRICT_NAMES


142 #unde‡
__GLIBC_USE_DEPRECATED_GETS


146 #i‚de‡
_LOOSE_KERNEL_NAMES


147 
	#__KERNEL_STRICT_NAMES


	)

157 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


158 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

159 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

161 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

168 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


169 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

170 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

176 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

182 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

183 && !
deföed
 
	g_DEFAULT_SOURCE


185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

190 #ifde‡
_GNU_SOURCE


191 #unde‡
_ISOC95_SOURCE


192 
	#_ISOC95_SOURCE
 1

	)

193 #unde‡
_ISOC99_SOURCE


194 
	#_ISOC99_SOURCE
 1

	)

195 #unde‡
_ISOC11_SOURCE


196 
	#_ISOC11_SOURCE
 1

	)

197 #unde‡
_POSIX_SOURCE


198 
	#_POSIX_SOURCE
 1

	)

199 #unde‡
_POSIX_C_SOURCE


200 
	#_POSIX_C_SOURCE
 200809L

	)

201 #unde‡
_XOPEN_SOURCE


202 
	#_XOPEN_SOURCE
 700

	)

203 #unde‡
_XOPEN_SOURCE_EXTENDED


204 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

205 #unde‡
_LARGEFILE64_SOURCE


206 
	#_LARGEFILE64_SOURCE
 1

	)

207 #unde‡
_DEFAULT_SOURCE


208 
	#_DEFAULT_SOURCE
 1

	)

209 #unde‡
_ATFILE_SOURCE


210 
	#_ATFILE_SOURCE
 1

	)

215 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

216 || (!
deföed
 
	g__STRICT_ANSI__
 \

217 && !
deföed
 
	g_ISOC99_SOURCE
 \

218 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

219 && !
deföed
 
	g_XOPEN_SOURCE
))

220 #unde‡
_DEFAULT_SOURCE


221 
	#_DEFAULT_SOURCE
 1

	)

225 #i‡(
deföed
 
_ISOC11_SOURCE
 \

226 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

227 
	#__USE_ISOC11
 1

	)

231 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

232 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

233 
	#__USE_ISOC99
 1

	)

237 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

238 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

239 
	#__USE_ISOC95
 1

	)

242 #ifde‡
__˝lu•lus


244 #i‡
__˝lu•lus
 >= 201703L

245 
	#__USE_ISOC11
 1

	)

249 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


250 
	#__USE_ISOCXX11
 1

	)

251 
	#__USE_ISOC99
 1

	)

258 #ifde‡
_DEFAULT_SOURCE


259 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


260 
	#__USE_POSIX_IMPLICITLY
 1

	)

262 #unde‡
_POSIX_SOURCE


263 
	#_POSIX_SOURCE
 1

	)

264 #unde‡
_POSIX_C_SOURCE


265 
	#_POSIX_C_SOURCE
 200809L

	)

268 #i‡((!
deföed
 
__STRICT_ANSI__
 \

269 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

270 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

271 
	#_POSIX_SOURCE
 1

	)

272 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

273 
	#_POSIX_C_SOURCE
 2

	)

274 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

275 
	#_POSIX_C_SOURCE
 199506L

	)

276 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

277 
	#_POSIX_C_SOURCE
 200112L

	)

279 
	#_POSIX_C_SOURCE
 200809L

	)

281 
	#__USE_POSIX_IMPLICITLY
 1

	)

290 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

291 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

292 
	#_POSIX_SOURCE
 1

	)

293 #unde‡
_POSIX_C_SOURCE


294 
	#_POSIX_C_SOURCE
 199506L

	)

297 #i‡(
deföed
 
_POSIX_SOURCE
 \

298 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

299 || 
deföed
 
_XOPEN_SOURCE
)

300 
	#__USE_POSIX
 1

	)

303 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


304 
	#__USE_POSIX2
 1

	)

307 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

308 
	#__USE_POSIX199309
 1

	)

311 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

312 
	#__USE_POSIX199506
 1

	)

315 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

316 
	#__USE_XOPEN2K
 1

	)

317 #unde‡
__USE_ISOC95


318 
	#__USE_ISOC95
 1

	)

319 #unde‡
__USE_ISOC99


320 
	#__USE_ISOC99
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

324 
	#__USE_XOPEN2K8
 1

	)

325 #unde‡
_ATFILE_SOURCE


326 
	#_ATFILE_SOURCE
 1

	)

329 #ifdef 
_XOPEN_SOURCE


330 
	#__USE_XOPEN
 1

	)

331 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

332 
	#__USE_XOPEN_EXTENDED
 1

	)

333 
	#__USE_UNIX98
 1

	)

334 #unde‡
_LARGEFILE_SOURCE


335 
	#_LARGEFILE_SOURCE
 1

	)

336 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

337 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

338 
	#__USE_XOPEN2K8
 1

	)

339 
	#__USE_XOPEN2K8XSI
 1

	)

341 
	#__USE_XOPEN2K
 1

	)

342 
	#__USE_XOPEN2KXSI
 1

	)

343 #unde‡
__USE_ISOC95


344 
	#__USE_ISOC95
 1

	)

345 #unde‡
__USE_ISOC99


346 
	#__USE_ISOC99
 1

	)

349 #ifde‡
_XOPEN_SOURCE_EXTENDED


350 
	#__USE_XOPEN_EXTENDED
 1

	)

355 #ifde‡
_LARGEFILE_SOURCE


356 
	#__USE_LARGEFILE
 1

	)

359 #ifde‡
_LARGEFILE64_SOURCE


360 
	#__USE_LARGEFILE64
 1

	)

363 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

364 
	#__USE_FILE_OFFSET64
 1

	)

367 #i‡
deföed
 
_DEFAULT_SOURCE


368 
	#__USE_MISC
 1

	)

371 #ifdef 
_ATFILE_SOURCE


372 
	#__USE_ATFILE
 1

	)

375 #ifdef 
_GNU_SOURCE


376 
	#__USE_GNU
 1

	)

379 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

380 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

381 #i‡
_FORTIFY_SOURCE
 > 1

382 
	#__USE_FORTIFY_LEVEL
 2

	)

384 
	#__USE_FORTIFY_LEVEL
 1

	)

387 
	#__USE_FORTIFY_LEVEL
 0

	)

394 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


395 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

397 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

402 
	~<°dc-¥edef.h
>

410 #unde‡
__GNU_LIBRARY__


411 
	#__GNU_LIBRARY__
 6

	)

415 
	#__GLIBC__
 2

	)

416 
	#__GLIBC_MINOR__
 27

	)

418 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

419 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

422 #i‚de‡
__ASSEMBLER__


423 #i‚de‡
_SYS_CDEFS_H


424 
	~<sys/cdefs.h
>

429 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


430 
	#__USE_LARGEFILE
 1

	)

431 
	#__USE_LARGEFILE64
 1

	)

437 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

438 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

439 && 
deföed
 
	g__exã∫_ölöe


440 
	#__USE_EXTERN_INLINES
 1

	)

448 
	~<gnu/°ubs.h
>

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H_OUTER


21 #i‚de‡
__SYSMACROS_DEPRECATED_INCLUSION


22 
	#_SYS_SYSMACROS_H_OUTER
 1

	)

30 #unde‡
maj‹


31 #unde‡
mö‹


32 #unde‡
makedev


36 #i‚de‡
_SYS_SYSMACROS_H


37 
	#_SYS_SYSMACROS_H
 1

	)

39 
	~<„©uªs.h
>

40 
	~<bôs/ty≥s.h
>

41 
	~<bôs/sysma¸os.h
>

52 
	#__SYSMACROS_DM
(
symbﬁ
Ë
__SYSMACROS_DM1
 \

53 (
In
 
the
 
GNU
 
C
 
Libøry
, #symbﬁ 
is
 
deföed
\
n
\

54 
by
 <
sys
/
sysma¸os
.
h
>. 
F‹
 
hi°‹iˇl
 
com∑tibûôy
, 
ô
 
is
\
n
\

55 
cuºíéy
 
deföed
 
by
 <
sys
/
ty≥s
.
h
> 
as
 
wñl
, 
but
 
we
 
∂™
 
to
\
n
\

56 
ªmove
 
this
 
so⁄
. 
To
 
u£
 #symbﬁ, 
ö˛ude
 <
sys
/
sysma¸os
.
h
>\
n
\

57 
dúe˘ly
. 
If
 
you
 
did
 
nŸ
 
öãnd
 
to
 
u£
 
a
 
sy°em
-
deföed
 
ma¸o
\
n
\

58 #symbﬁ, 
you
 
should
 
undeföe
 
ô
 
a·î
 
ö˛udög
 <
sys
/
ty≥s
.
h
>.)

	)

62 
	#__SYSMACROS_DM1
(...Ë
	`__glibc_ma¸o_w¨nög
 (#__VA_ARGS__)

	)

64 
	#__SYSMACROS_DECL_TEMPL
(
πy≥
, 
«me
, 
¥Ÿo
) \

65 
πy≥
 
gnu_dev_
##
«me
 
¥Ÿo
 
__THROW
 
__©åibuã_c⁄°__
;

	)

67 
	#__SYSMACROS_IMPL_TEMPL
(
πy≥
, 
«me
, 
¥Ÿo
) \

68 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 
πy≥
 \

69 
	`__NTH
 (
gnu_dev_
##
«me
 
¥Ÿo
)

	)

71 
__BEGIN_DECLS


73 
	$__SYSMACROS_DECLARE_MAJOR
 (
__SYSMACROS_DECL_TEMPL
)

74 
	$__SYSMACROS_DECLARE_MINOR
 (
__SYSMACROS_DECL_TEMPL
)

75 
	$__SYSMACROS_DECLARE_MAKEDEV
 (
__SYSMACROS_DECL_TEMPL
)

77 #ifde‡
__USE_EXTERN_INLINES


79 
	$__SYSMACROS_DEFINE_MAJOR
 (
__SYSMACROS_IMPL_TEMPL
)

80 
	$__SYSMACROS_DEFINE_MINOR
 (
__SYSMACROS_IMPL_TEMPL
)

81 
	$__SYSMACROS_DEFINE_MAKEDEV
 (
__SYSMACROS_IMPL_TEMPL
)

85 
__END_DECLS


89 #i‚de‡
__SYSMACROS_NEED_IMPLEMENTATION


90 #unde‡
__SYSMACROS_DECL_TEMPL


91 #unde‡
__SYSMACROS_IMPL_TEMPL


92 #unde‡
__SYSMACROS_DECLARE_MAJOR


93 #unde‡
__SYSMACROS_DECLARE_MINOR


94 #unde‡
__SYSMACROS_DECLARE_MAKEDEV


95 #unde‡
__SYSMACROS_DEFINE_MAJOR


96 #unde‡
__SYSMACROS_DEFINE_MINOR


97 #unde‡
__SYSMACROS_DEFINE_MAKEDEV


100 #ifde‡
__SYSMACROS_DEPRECATED_INCLUSION


101 
	#maj‹
(
dev
Ë
	`__SYSMACROS_DM
 (
maj‹
Ë
	`gnu_dev_maj‹
 (dev)

	)

102 
	#mö‹
(
dev
Ë
	`__SYSMACROS_DM
 (
mö‹
Ë
	`gnu_dev_mö‹
 (dev)

	)

103 
	#makedev
(
maj
, 
mö
Ë
	`__SYSMACROS_DM
 (
makedev
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

105 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

106 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

107 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/long-double.h

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sysmacros.h

19 #i‚de‡
_BITS_SYSMACROS_H


20 
	#_BITS_SYSMACROS_H
 1

	)

22 #i‚de‡
_SYS_SYSMACROS_H


36 
	#__SYSMACROS_DECLARE_MAJOR
(
DECL_TEMPL
) \

37 
	`DECL_TEMPL
(, 
maj‹
, (
__dev_t
 
__dev
))

	)

39 
	#__SYSMACROS_DEFINE_MAJOR
(
DECL_TEMPL
) \

40 
	`__SYSMACROS_DECLARE_MAJOR
 (
DECL_TEMPL
) \

42 
__maj‹
; \

43 
__maj‹
 = ((
__dev
 & (
__dev_t
) 0x00000000000fff00u) >> 8); \

44 
__maj‹
 |((
__dev
 & (
__dev_t
) 0xfffff00000000000u) >> 32); \

45  
__maj‹
; \

46 }

	)

48 
	#__SYSMACROS_DECLARE_MINOR
(
DECL_TEMPL
) \

49 
	`DECL_TEMPL
(, 
mö‹
, (
__dev_t
 
__dev
))

	)

51 
	#__SYSMACROS_DEFINE_MINOR
(
DECL_TEMPL
) \

52 
	`__SYSMACROS_DECLARE_MINOR
 (
DECL_TEMPL
) \

54 
__mö‹
; \

55 
__mö‹
 = ((
__dev
 & (
__dev_t
) 0x00000000000000ffu) >> 0); \

56 
__mö‹
 |((
__dev
 & (
__dev_t
) 0x00000ffffff00000u) >> 12); \

57  
__mö‹
; \

58 }

	)

60 
	#__SYSMACROS_DECLARE_MAKEDEV
(
DECL_TEMPL
) \

61 
	`DECL_TEMPL
(
__dev_t
, 
makedev
, (
__maj‹
, 
__mö‹
))

	)

63 
	#__SYSMACROS_DEFINE_MAKEDEV
(
DECL_TEMPL
) \

64 
	`__SYSMACROS_DECLARE_MAKEDEV
 (
DECL_TEMPL
) \

66 
__dev_t
 
__dev
; \

67 
__dev
 = (((
__dev_t
Ë(
__maj‹
 & 0x00000fffu)) << 8); \

68 
__dev
 |(((
__dev_t
Ë(
__maj‹
 & 0xfffff000u)) << 32); \

69 
__dev
 |(((
__dev_t
Ë(
__mö‹
 & 0x000000ffu)) << 0); \

70 
__dev
 |(((
__dev_t
Ë(
__mö‹
 & 0xffffff00u)) << 12); \

71  
__dev
; \

72 }

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

77 
	~<bôs/±hªadty≥s-¨ch.h
>

81 #i‡!
__PTHREAD_MUTEX_USE_UNION


82 
	s__±hªad_öã∫Æ_li°


84 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

85 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

86 } 
	t__±hªad_li°_t
;

88 
	s__±hªad_öã∫Æ_¶i°


90 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

91 } 
	t__±hªad_¶i°_t
;

95 #i‡
__PTHREAD_MUTEX_LOCK_ELISION


96 #i‡!
__PTHREAD_MUTEX_USE_UNION


97 
	#__PTHREAD_SPINS_DATA
 \

98 
__•ös
; \

99 
__ñisi⁄


	)

100 
	#__PTHREAD_SPINS
 0, 0

	)

102 
	#__PTHREAD_SPINS_DATA
 \

105 
__e•ös
; \

106 
__ìlisi⁄
; \

107 } 
__ñisi⁄_d©a


	)

108 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

109 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

110 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

113 
	#__PTHREAD_SPINS_DATA
 
__•ös


	)

115 
	#__PTHREAD_SPINS
 0

	)

118 
	s__±hªad_muãx_s


120 
__lock
 
	m__LOCK_ALIGNMENT
;

121 
	m__cou¡
;

122 
	m__ow√r
;

123 #i‡!
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


124 
	m__nu£rs
;

148 
	m__köd
;

149 
	m__PTHREAD_COMPAT_PADDING_MID


150 #i‡
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


151 
	m__nu£rs
;

153 #i‡!
__PTHREAD_MUTEX_USE_UNION


154 
	m__PTHREAD_SPINS_DATA
;

155 
__±hªad_li°_t
 
	m__li°
;

156 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

158 
__exãnsi⁄__
 union

160 
	m__PTHREAD_SPINS_DATA
;

161 
__±hªad_¶i°_t
 
	m__li°
;

163 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

165 
	m__PTHREAD_COMPAT_PADDING_END


171 
	s__±hªad_c⁄d_s


173 
__exãnsi⁄__
 union

175 
__exãnsi⁄__
 
	m__w£q
;

178 
	m__low
;

179 
	m__high
;

180 } 
	m__w£q32
;

182 
__exãnsi⁄__
 union

184 
__exãnsi⁄__
 
	m__g1_°¨t
;

187 
	m__low
;

188 
	m__high
;

189 } 
	m__g1_°¨t32
;

191 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

192 
	m__g_size
[2];

193 
	m__g1_‹ig_size
;

194 
	m__wªfs
;

195 
	m__g_sig«ls
[2];

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

9 
	stime•ec


11 
__time_t
 
	mtv_£c
;

12 
__sysˇŒ_¶⁄g_t
 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

88 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

92 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

61 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 
	#__ölöe


	)

77 
	#__THROW


	)

78 
	#__THROWNL


	)

79 
	#__NTH
(
f˘
Ë
	)
fct

86 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


87 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

89 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

94 
	#__P
(
¨gs
Ë
	)
args

95 
	#__PMT
(
¨gs
Ë
	)
args

100 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

101 
	#__STRING
(
x
Ë#x

	)

104 
	#__±r_t
 *

	)

108 #ifdef 
__˝lu•lus


109 
	#__BEGIN_DECLS
 "C" {

	)

110 
	#__END_DECLS
 }

	)

112 
	#__BEGIN_DECLS


	)

113 
	#__END_DECLS


	)

118 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

119 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

121 #i‡
__GNUC_PREREQ
 (4,3)

122 
	#__w¨nde˛
(
«me
, 
msg
) \

123 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

124 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

125 
	#__îr‹de˛
(
«me
, 
msg
) \

126 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

128 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

129 
	#__w¨«âr
(
msg
)

	)

130 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

137 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

138 
	#__Êex¨r
 []

	)

139 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

140 #ñi‡
__GNUC_PREREQ
 (2,97)

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
deföed
 
__GNUC__


148 
	#__Êex¨r
 [0]

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

152 
	#__Êex¨r
 [1]

	)

153 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

167 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

169 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

170 #ifde‡
__˝lu•lus


171 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

172 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

173 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

174 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

181 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

182 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

195 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

196 
	#__©åibuã__
(
xyz
Ë

	)

202 #i‡
__GNUC_PREREQ
 (2,96)

203 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

205 
	#__©åibuã_mÆloc__


	)

210 #i‡
__GNUC_PREREQ
 (4, 3)

211 
	#__©åibuã_Æloc_size__
(
∑øms
) \

212 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

214 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

220 #i‡
__GNUC_PREREQ
 (2,96)

221 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

223 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (2,5)

228 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

230 
	#__©åibuã_c⁄°__


	)

236 #i‡
__GNUC_PREREQ
 (3,1)

237 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

238 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

240 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

241 
	#__©åibuã_noölöe__


	)

245 #i‡
__GNUC_PREREQ
 (3,2)

246 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

248 
	#__©åibuã_dïªˇãd__


	)

254 #i‡
__GNUC_PREREQ
 (4,5) || \

255 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

256 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

257 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

259 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

268 #i‡
	`__GNUC_PREREQ
 (2,8)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

278 #i‡
	`__GNUC_PREREQ
 (2,97)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

280 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

282 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

287 #i‡
	`__GNUC_PREREQ
 (3,3)

288 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

290 
	#__n⁄nuŒ
(
∑øms
)

	)

295 #i‡
	`__GNUC_PREREQ
 (3,4)

296 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

297 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

298 #i‡
__USE_FORTIFY_LEVEL
 > 0

299 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

302 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

304 #i‚de‡
__wur


305 
	#__wur


	)

309 #i‡
	`__GNUC_PREREQ
 (3,2)

313 #unde‡
__Æways_ölöe


314 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

316 #unde‡
__Æways_ölöe


317 
	#__Æways_ölöe
 
__ölöe


	)

322 #i‡
	`__GNUC_PREREQ
 (4,3)

323 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

325 
	#__©åibuã_¨tificül__


	)

337 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

338 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

339 || 
deföed
 
__GNUC_GNU_INLINE__
)))

340 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


341 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

342 
	#__exã∫_Æways_ölöe
 \

343 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

345 
	#__exã∫_ölöe
 
__ölöe


	)

346 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

350 #ifde‡
__exã∫_Æways_ölöe


351 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

356 #i‡
	`__GNUC_PREREQ
 (4,3)

357 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

358 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

365 #i‡!
	`__GNUC_PREREQ
 (2,8)

366 
	#__exãnsi⁄__


	)

370 #i‡!
	`__GNUC_PREREQ
 (2,92)

371 
	#__ª°ri˘


	)

377 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


378 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

380 #ifde‡
__GNUC__


381 
	#__ª°ri˘_¨r


	)

383 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

384 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

387 
	#__ª°ri˘_¨r


	)

392 #i‡
__GNUC__
 >= 3

393 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

394 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

396 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

397 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

400 #i‡(!
deföed
 
_N‹ëu∫
 \

401 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

402 && !
	$__GNUC_PREREQ
 (4,7))

403 #i‡
	`__GNUC_PREREQ
 (2,8)

404 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

406 
	#_N‹ëu∫


	)

410 #i‡
	`__GNUC_PREREQ
 (8, 0)

414 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

416 
	#__©åibuã_n⁄°rög__


	)

419 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

420 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

421 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

422 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

423 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

424 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

427 
	~<bôs/w‹dsize.h
>

428 
	~<bôs/l⁄g-doubÀ.h
>

430 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


431 
	#__LDBL_COMPAT
 1

	)

432 #ifde‡
__REDIRECT


433 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

434 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

435 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

436 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

437 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

438 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

439 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

440 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

441 
	#__LDBL_REDIR_DECL
(
«me
) \

442 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

443 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

444 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

445 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

446 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

449 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


450 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

451 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

452 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

453 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

454 
	#__LDBL_REDIR_DECL
(
«me
)

	)

455 #ifde‡
__REDIRECT


456 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

457 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

458 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

467 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

468 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

469 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

470 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

472 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

482 #i‡!
deföed
 
__˝lu•lus
 \

483 && (
	`__GNUC_PREREQ
 (4, 9) \

484 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

485 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

486 && 
__STDC_VERSION__
 >= 201112L))

487 
	#__HAVE_GENERIC_SELECTION
 1

	)

489 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

29 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

31 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

32 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

33 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

34 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

35 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

38 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

39 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

40 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

45 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

46 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

47 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

48 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

51 
	#__PTHREAD_COMPAT_PADDING_MID


	)

52 
	#__PTHREAD_COMPAT_PADDING_END


	)

53 
	#__PTHREAD_MUTEX_LOCK_ELISION
 1

	)

54 #ifde‡
__x86_64__


55 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 0

	)

56 
	#__PTHREAD_MUTEX_USE_UNION
 0

	)

58 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 1

	)

59 
	#__PTHREAD_MUTEX_USE_UNION
 1

	)

62 
	#__LOCK_ALIGNMENT


	)

63 
	#__ONCE_ALIGNMENT


	)

65 
	s__±hªad_rwlock_¨ch_t


67 
	m__ªadîs
;

68 
	m__wrôîs
;

69 
	m__wΩha£_fuãx
;

70 
	m__wrôîs_fuãx
;

71 
	m__∑d3
;

72 
	m__∑d4
;

73 #ifde‡
__x86_64__


74 
	m__cur_wrôî
;

75 
	m__sh¨ed
;

76 sig√d 
	m__rwñisi⁄
;

77 #ifde‡ 
__ILP32__


78 
	m__∑d1
[3];

79 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

81 
	m__∑d1
[7];

82 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

84 
	m__∑d2
;

87 
	m__Êags
;

88 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

92 
	m__Êags
;

93 
	m__sh¨ed
;

94 sig√d 
	m__rwñisi⁄
;

95 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

96 
	m__∑d2
;

97 
	m__cur_wrôî
;

101 #i‚de‡
__x86_64__


103 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@
1
.
1
/usr/include
87
4612
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/calloc.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_ctype.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_malloc.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stdarg.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stddef.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stdint.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_stdlib.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/cgc_string.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/ctype.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/free.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/malloc.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/malloc_common.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memchr.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memcmp.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memcpy.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memmove.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/memset.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/printf.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/realloc.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcasecmp.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcat.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strchr.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcmp.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strcpy.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strdup.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strlen.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strncasecmp.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strncmp.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strncpy.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strsep.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/lib/strtol.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/pov_1/pov.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/pov_2/pov.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/pov_3/pov.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/cgc_bits.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/cgc_engine.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/cgc_io.h
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/engine.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/io.c
/home/beverly/Documents/cb-multios-test-one/challenges/CGC_Board/src/main.c
/usr/include/stdlib.h
/usr/include/alloca.h
/usr/include/bits/floatn.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/sys/types.h
/usr/include/bits/floatn-common.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/types.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/long-double.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sysmacros.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/typesizes.h
/usr/include/bits/uintn-identity.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/types/__sigset_t.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
